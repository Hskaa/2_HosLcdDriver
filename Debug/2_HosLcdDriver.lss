
2_HosLcdDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000039b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a0  00800060  000039b4  00003a28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000022d4  00000000  00000000  00003ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b76  00000000  00000000  00005d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00006912  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006a52  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00006bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000880b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000096f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a4a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000a604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a891  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b05f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 eb       	ldi	r30, 0xB4	; 180
      68:	f9 e3       	ldi	r31, 0x39	; 57
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 30       	cpi	r26, 0x00	; 0
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 c0 0c 	call	0x1980	; 0x1980 <main>
      7a:	0c 94 d8 1c 	jmp	0x39b0	; 0x39b0 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 a1 1c 	jmp	0x3942	; 0x3942 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a7 eb       	ldi	r26, 0xB7	; 183
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 bd 1c 	jmp	0x397a	; 0x397a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ad 1c 	jmp	0x395a	; 0x395a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 c9 1c 	jmp	0x3992	; 0x3992 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ad 1c 	jmp	0x395a	; 0x395a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 c9 1c 	jmp	0x3992	; 0x3992 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 a1 1c 	jmp	0x3942	; 0x3942 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	87 eb       	ldi	r24, 0xB7	; 183
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 bd 1c 	jmp	0x397a	; 0x397a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ad 1c 	jmp	0x395a	; 0x395a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 c9 1c 	jmp	0x3992	; 0x3992 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ad 1c 	jmp	0x395a	; 0x395a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 c9 1c 	jmp	0x3992	; 0x3992 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ad 1c 	jmp	0x395a	; 0x395a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 c9 1c 	jmp	0x3992	; 0x3992 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 b1 1c 	jmp	0x3962	; 0x3962 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 cd 1c 	jmp	0x399a	; 0x399a <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_u8SetPinDirection>:
#include "DIO_Private.h"
#include "DIO_Cfg.h"
#include "DIO_Reg.h"


u8 DIO_u8SetPinDirection (u8 Cpy_u8Port , u8 Cpy_u8Pin , u8 Cpy_u8Dirc){
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	28 97       	sbiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8StateError = 0 ;
     b50:	19 82       	std	Y+1, r1	; 0x01
	if(Cpy_u8Pin<= DIO_PIN7)
     b52:	8b 81       	ldd	r24, Y+3	; 0x03
     b54:	88 30       	cpi	r24, 0x08	; 8
     b56:	08 f0       	brcs	.+2      	; 0xb5a <DIO_u8SetPinDirection+0x24>
     b58:	f4 c0       	rjmp	.+488    	; 0xd42 <DIO_u8SetPinDirection+0x20c>
	{
		if (Cpy_u8Dirc == DIO_INPUT)
     b5a:	8c 81       	ldd	r24, Y+4	; 0x04
     b5c:	88 23       	and	r24, r24
     b5e:	09 f0       	breq	.+2      	; 0xb62 <DIO_u8SetPinDirection+0x2c>
     b60:	77 c0       	rjmp	.+238    	; 0xc50 <DIO_u8SetPinDirection+0x11a>
		{
			switch (Cpy_u8Port){
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	28 2f       	mov	r18, r24
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	38 87       	std	Y+8, r19	; 0x08
     b6a:	2f 83       	std	Y+7, r18	; 0x07
     b6c:	8f 81       	ldd	r24, Y+7	; 0x07
     b6e:	98 85       	ldd	r25, Y+8	; 0x08
     b70:	81 30       	cpi	r24, 0x01	; 1
     b72:	91 05       	cpc	r25, r1
     b74:	59 f1       	breq	.+86     	; 0xbcc <DIO_u8SetPinDirection+0x96>
     b76:	2f 81       	ldd	r18, Y+7	; 0x07
     b78:	38 85       	ldd	r19, Y+8	; 0x08
     b7a:	22 30       	cpi	r18, 0x02	; 2
     b7c:	31 05       	cpc	r19, r1
     b7e:	2c f4       	brge	.+10     	; 0xb8a <DIO_u8SetPinDirection+0x54>
     b80:	8f 81       	ldd	r24, Y+7	; 0x07
     b82:	98 85       	ldd	r25, Y+8	; 0x08
     b84:	00 97       	sbiw	r24, 0x00	; 0
     b86:	69 f0       	breq	.+26     	; 0xba2 <DIO_u8SetPinDirection+0x6c>
     b88:	60 c0       	rjmp	.+192    	; 0xc4a <DIO_u8SetPinDirection+0x114>
     b8a:	2f 81       	ldd	r18, Y+7	; 0x07
     b8c:	38 85       	ldd	r19, Y+8	; 0x08
     b8e:	22 30       	cpi	r18, 0x02	; 2
     b90:	31 05       	cpc	r19, r1
     b92:	89 f1       	breq	.+98     	; 0xbf6 <DIO_u8SetPinDirection+0xc0>
     b94:	8f 81       	ldd	r24, Y+7	; 0x07
     b96:	98 85       	ldd	r25, Y+8	; 0x08
     b98:	83 30       	cpi	r24, 0x03	; 3
     b9a:	91 05       	cpc	r25, r1
     b9c:	09 f4       	brne	.+2      	; 0xba0 <DIO_u8SetPinDirection+0x6a>
     b9e:	40 c0       	rjmp	.+128    	; 0xc20 <DIO_u8SetPinDirection+0xea>
     ba0:	54 c0       	rjmp	.+168    	; 0xc4a <DIO_u8SetPinDirection+0x114>
			case DIO_PORTA : CLR_BIT(DDRA , Cpy_u8Pin) ; break;
     ba2:	aa e3       	ldi	r26, 0x3A	; 58
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	ea e3       	ldi	r30, 0x3A	; 58
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	80 81       	ld	r24, Z
     bac:	48 2f       	mov	r20, r24
     bae:	8b 81       	ldd	r24, Y+3	; 0x03
     bb0:	28 2f       	mov	r18, r24
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	02 2e       	mov	r0, r18
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <DIO_u8SetPinDirection+0x8a>
     bbc:	88 0f       	add	r24, r24
     bbe:	99 1f       	adc	r25, r25
     bc0:	0a 94       	dec	r0
     bc2:	e2 f7       	brpl	.-8      	; 0xbbc <DIO_u8SetPinDirection+0x86>
     bc4:	80 95       	com	r24
     bc6:	84 23       	and	r24, r20
     bc8:	8c 93       	st	X, r24
     bca:	bd c0       	rjmp	.+378    	; 0xd46 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTB : CLR_BIT(DDRB , Cpy_u8Pin); break;
     bcc:	a7 e3       	ldi	r26, 0x37	; 55
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	e7 e3       	ldi	r30, 0x37	; 55
     bd2:	f0 e0       	ldi	r31, 0x00	; 0
     bd4:	80 81       	ld	r24, Z
     bd6:	48 2f       	mov	r20, r24
     bd8:	8b 81       	ldd	r24, Y+3	; 0x03
     bda:	28 2f       	mov	r18, r24
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	02 2e       	mov	r0, r18
     be4:	02 c0       	rjmp	.+4      	; 0xbea <DIO_u8SetPinDirection+0xb4>
     be6:	88 0f       	add	r24, r24
     be8:	99 1f       	adc	r25, r25
     bea:	0a 94       	dec	r0
     bec:	e2 f7       	brpl	.-8      	; 0xbe6 <DIO_u8SetPinDirection+0xb0>
     bee:	80 95       	com	r24
     bf0:	84 23       	and	r24, r20
     bf2:	8c 93       	st	X, r24
     bf4:	a8 c0       	rjmp	.+336    	; 0xd46 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTC : CLR_BIT(DDRC , Cpy_u8Pin); break;
     bf6:	a4 e3       	ldi	r26, 0x34	; 52
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	e4 e3       	ldi	r30, 0x34	; 52
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	80 81       	ld	r24, Z
     c00:	48 2f       	mov	r20, r24
     c02:	8b 81       	ldd	r24, Y+3	; 0x03
     c04:	28 2f       	mov	r18, r24
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	02 2e       	mov	r0, r18
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <DIO_u8SetPinDirection+0xde>
     c10:	88 0f       	add	r24, r24
     c12:	99 1f       	adc	r25, r25
     c14:	0a 94       	dec	r0
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <DIO_u8SetPinDirection+0xda>
     c18:	80 95       	com	r24
     c1a:	84 23       	and	r24, r20
     c1c:	8c 93       	st	X, r24
     c1e:	93 c0       	rjmp	.+294    	; 0xd46 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTD : CLR_BIT(DDRD , Cpy_u8Pin); break;
     c20:	a1 e3       	ldi	r26, 0x31	; 49
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	e1 e3       	ldi	r30, 0x31	; 49
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	80 81       	ld	r24, Z
     c2a:	48 2f       	mov	r20, r24
     c2c:	8b 81       	ldd	r24, Y+3	; 0x03
     c2e:	28 2f       	mov	r18, r24
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	02 2e       	mov	r0, r18
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <DIO_u8SetPinDirection+0x108>
     c3a:	88 0f       	add	r24, r24
     c3c:	99 1f       	adc	r25, r25
     c3e:	0a 94       	dec	r0
     c40:	e2 f7       	brpl	.-8      	; 0xc3a <DIO_u8SetPinDirection+0x104>
     c42:	80 95       	com	r24
     c44:	84 23       	and	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	7e c0       	rjmp	.+252    	; 0xd46 <DIO_u8SetPinDirection+0x210>
			default: Local_u8StateError = 1; 			break;
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	89 83       	std	Y+1, r24	; 0x01
     c4e:	7b c0       	rjmp	.+246    	; 0xd46 <DIO_u8SetPinDirection+0x210>
			}
		}
		else if (Cpy_u8Dirc == DIO_OUTPUT){
     c50:	8c 81       	ldd	r24, Y+4	; 0x04
     c52:	81 30       	cpi	r24, 0x01	; 1
     c54:	09 f0       	breq	.+2      	; 0xc58 <DIO_u8SetPinDirection+0x122>
     c56:	72 c0       	rjmp	.+228    	; 0xd3c <DIO_u8SetPinDirection+0x206>
			switch (Cpy_u8Port){
     c58:	8a 81       	ldd	r24, Y+2	; 0x02
     c5a:	28 2f       	mov	r18, r24
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	3e 83       	std	Y+6, r19	; 0x06
     c60:	2d 83       	std	Y+5, r18	; 0x05
     c62:	8d 81       	ldd	r24, Y+5	; 0x05
     c64:	9e 81       	ldd	r25, Y+6	; 0x06
     c66:	81 30       	cpi	r24, 0x01	; 1
     c68:	91 05       	cpc	r25, r1
     c6a:	49 f1       	breq	.+82     	; 0xcbe <DIO_u8SetPinDirection+0x188>
     c6c:	2d 81       	ldd	r18, Y+5	; 0x05
     c6e:	3e 81       	ldd	r19, Y+6	; 0x06
     c70:	22 30       	cpi	r18, 0x02	; 2
     c72:	31 05       	cpc	r19, r1
     c74:	2c f4       	brge	.+10     	; 0xc80 <DIO_u8SetPinDirection+0x14a>
     c76:	8d 81       	ldd	r24, Y+5	; 0x05
     c78:	9e 81       	ldd	r25, Y+6	; 0x06
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	61 f0       	breq	.+24     	; 0xc96 <DIO_u8SetPinDirection+0x160>
     c7e:	5b c0       	rjmp	.+182    	; 0xd36 <DIO_u8SetPinDirection+0x200>
     c80:	2d 81       	ldd	r18, Y+5	; 0x05
     c82:	3e 81       	ldd	r19, Y+6	; 0x06
     c84:	22 30       	cpi	r18, 0x02	; 2
     c86:	31 05       	cpc	r19, r1
     c88:	71 f1       	breq	.+92     	; 0xce6 <DIO_u8SetPinDirection+0x1b0>
     c8a:	8d 81       	ldd	r24, Y+5	; 0x05
     c8c:	9e 81       	ldd	r25, Y+6	; 0x06
     c8e:	83 30       	cpi	r24, 0x03	; 3
     c90:	91 05       	cpc	r25, r1
     c92:	e9 f1       	breq	.+122    	; 0xd0e <DIO_u8SetPinDirection+0x1d8>
     c94:	50 c0       	rjmp	.+160    	; 0xd36 <DIO_u8SetPinDirection+0x200>
			case DIO_PORTA : SET_BIT(DDRA , Cpy_u8Pin) ; break;
     c96:	aa e3       	ldi	r26, 0x3A	; 58
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	ea e3       	ldi	r30, 0x3A	; 58
     c9c:	f0 e0       	ldi	r31, 0x00	; 0
     c9e:	80 81       	ld	r24, Z
     ca0:	48 2f       	mov	r20, r24
     ca2:	8b 81       	ldd	r24, Y+3	; 0x03
     ca4:	28 2f       	mov	r18, r24
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	02 2e       	mov	r0, r18
     cae:	02 c0       	rjmp	.+4      	; 0xcb4 <DIO_u8SetPinDirection+0x17e>
     cb0:	88 0f       	add	r24, r24
     cb2:	99 1f       	adc	r25, r25
     cb4:	0a 94       	dec	r0
     cb6:	e2 f7       	brpl	.-8      	; 0xcb0 <DIO_u8SetPinDirection+0x17a>
     cb8:	84 2b       	or	r24, r20
     cba:	8c 93       	st	X, r24
     cbc:	44 c0       	rjmp	.+136    	; 0xd46 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTB : SET_BIT(DDRB , Cpy_u8Pin); break;
     cbe:	a7 e3       	ldi	r26, 0x37	; 55
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	e7 e3       	ldi	r30, 0x37	; 55
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	48 2f       	mov	r20, r24
     cca:	8b 81       	ldd	r24, Y+3	; 0x03
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	02 2e       	mov	r0, r18
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <DIO_u8SetPinDirection+0x1a6>
     cd8:	88 0f       	add	r24, r24
     cda:	99 1f       	adc	r25, r25
     cdc:	0a 94       	dec	r0
     cde:	e2 f7       	brpl	.-8      	; 0xcd8 <DIO_u8SetPinDirection+0x1a2>
     ce0:	84 2b       	or	r24, r20
     ce2:	8c 93       	st	X, r24
     ce4:	30 c0       	rjmp	.+96     	; 0xd46 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTC : SET_BIT(DDRC , Cpy_u8Pin); break;
     ce6:	a4 e3       	ldi	r26, 0x34	; 52
     ce8:	b0 e0       	ldi	r27, 0x00	; 0
     cea:	e4 e3       	ldi	r30, 0x34	; 52
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	80 81       	ld	r24, Z
     cf0:	48 2f       	mov	r20, r24
     cf2:	8b 81       	ldd	r24, Y+3	; 0x03
     cf4:	28 2f       	mov	r18, r24
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	02 2e       	mov	r0, r18
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <DIO_u8SetPinDirection+0x1ce>
     d00:	88 0f       	add	r24, r24
     d02:	99 1f       	adc	r25, r25
     d04:	0a 94       	dec	r0
     d06:	e2 f7       	brpl	.-8      	; 0xd00 <DIO_u8SetPinDirection+0x1ca>
     d08:	84 2b       	or	r24, r20
     d0a:	8c 93       	st	X, r24
     d0c:	1c c0       	rjmp	.+56     	; 0xd46 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTD : SET_BIT(DDRD , Cpy_u8Pin); break;
     d0e:	a1 e3       	ldi	r26, 0x31	; 49
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	e1 e3       	ldi	r30, 0x31	; 49
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	48 2f       	mov	r20, r24
     d1a:	8b 81       	ldd	r24, Y+3	; 0x03
     d1c:	28 2f       	mov	r18, r24
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	02 2e       	mov	r0, r18
     d26:	02 c0       	rjmp	.+4      	; 0xd2c <DIO_u8SetPinDirection+0x1f6>
     d28:	88 0f       	add	r24, r24
     d2a:	99 1f       	adc	r25, r25
     d2c:	0a 94       	dec	r0
     d2e:	e2 f7       	brpl	.-8      	; 0xd28 <DIO_u8SetPinDirection+0x1f2>
     d30:	84 2b       	or	r24, r20
     d32:	8c 93       	st	X, r24
     d34:	08 c0       	rjmp	.+16     	; 0xd46 <DIO_u8SetPinDirection+0x210>
			default: Local_u8StateError = 1; 			break;
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	89 83       	std	Y+1, r24	; 0x01
     d3a:	05 c0       	rjmp	.+10     	; 0xd46 <DIO_u8SetPinDirection+0x210>
			}
		}
		else{
			Local_u8StateError = 1;
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	89 83       	std	Y+1, r24	; 0x01
     d40:	02 c0       	rjmp	.+4      	; 0xd46 <DIO_u8SetPinDirection+0x210>
		}
	}
	else {
		Local_u8StateError = 1;
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8StateError;
     d46:	89 81       	ldd	r24, Y+1	; 0x01
}
     d48:	28 96       	adiw	r28, 0x08	; 8
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	cf 91       	pop	r28
     d56:	df 91       	pop	r29
     d58:	08 95       	ret

00000d5a <DIO_u8SetPinValue>:
u8 DIO_u8SetPinValue (u8 Cpy_u8Port , u8 Cpy_u8Pin , u8 Cpy_u8Value){
     d5a:	df 93       	push	r29
     d5c:	cf 93       	push	r28
     d5e:	cd b7       	in	r28, 0x3d	; 61
     d60:	de b7       	in	r29, 0x3e	; 62
     d62:	28 97       	sbiw	r28, 0x08	; 8
     d64:	0f b6       	in	r0, 0x3f	; 63
     d66:	f8 94       	cli
     d68:	de bf       	out	0x3e, r29	; 62
     d6a:	0f be       	out	0x3f, r0	; 63
     d6c:	cd bf       	out	0x3d, r28	; 61
     d6e:	8a 83       	std	Y+2, r24	; 0x02
     d70:	6b 83       	std	Y+3, r22	; 0x03
     d72:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8StateError = 0 ;
     d74:	19 82       	std	Y+1, r1	; 0x01
	if(Cpy_u8Pin<= DIO_PIN7)
     d76:	8b 81       	ldd	r24, Y+3	; 0x03
     d78:	88 30       	cpi	r24, 0x08	; 8
     d7a:	08 f0       	brcs	.+2      	; 0xd7e <DIO_u8SetPinValue+0x24>
     d7c:	f4 c0       	rjmp	.+488    	; 0xf66 <DIO_u8SetPinValue+0x20c>
	{
		if (Cpy_u8Value == DIO_INPUT)
     d7e:	8c 81       	ldd	r24, Y+4	; 0x04
     d80:	88 23       	and	r24, r24
     d82:	09 f0       	breq	.+2      	; 0xd86 <DIO_u8SetPinValue+0x2c>
     d84:	77 c0       	rjmp	.+238    	; 0xe74 <DIO_u8SetPinValue+0x11a>
		{
			switch (Cpy_u8Port){
     d86:	8a 81       	ldd	r24, Y+2	; 0x02
     d88:	28 2f       	mov	r18, r24
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	38 87       	std	Y+8, r19	; 0x08
     d8e:	2f 83       	std	Y+7, r18	; 0x07
     d90:	8f 81       	ldd	r24, Y+7	; 0x07
     d92:	98 85       	ldd	r25, Y+8	; 0x08
     d94:	81 30       	cpi	r24, 0x01	; 1
     d96:	91 05       	cpc	r25, r1
     d98:	59 f1       	breq	.+86     	; 0xdf0 <DIO_u8SetPinValue+0x96>
     d9a:	2f 81       	ldd	r18, Y+7	; 0x07
     d9c:	38 85       	ldd	r19, Y+8	; 0x08
     d9e:	22 30       	cpi	r18, 0x02	; 2
     da0:	31 05       	cpc	r19, r1
     da2:	2c f4       	brge	.+10     	; 0xdae <DIO_u8SetPinValue+0x54>
     da4:	8f 81       	ldd	r24, Y+7	; 0x07
     da6:	98 85       	ldd	r25, Y+8	; 0x08
     da8:	00 97       	sbiw	r24, 0x00	; 0
     daa:	69 f0       	breq	.+26     	; 0xdc6 <DIO_u8SetPinValue+0x6c>
     dac:	60 c0       	rjmp	.+192    	; 0xe6e <DIO_u8SetPinValue+0x114>
     dae:	2f 81       	ldd	r18, Y+7	; 0x07
     db0:	38 85       	ldd	r19, Y+8	; 0x08
     db2:	22 30       	cpi	r18, 0x02	; 2
     db4:	31 05       	cpc	r19, r1
     db6:	89 f1       	breq	.+98     	; 0xe1a <DIO_u8SetPinValue+0xc0>
     db8:	8f 81       	ldd	r24, Y+7	; 0x07
     dba:	98 85       	ldd	r25, Y+8	; 0x08
     dbc:	83 30       	cpi	r24, 0x03	; 3
     dbe:	91 05       	cpc	r25, r1
     dc0:	09 f4       	brne	.+2      	; 0xdc4 <DIO_u8SetPinValue+0x6a>
     dc2:	40 c0       	rjmp	.+128    	; 0xe44 <DIO_u8SetPinValue+0xea>
     dc4:	54 c0       	rjmp	.+168    	; 0xe6e <DIO_u8SetPinValue+0x114>
			case DIO_PORTA : CLR_BIT(PORTA , Cpy_u8Pin) ; break;
     dc6:	ab e3       	ldi	r26, 0x3B	; 59
     dc8:	b0 e0       	ldi	r27, 0x00	; 0
     dca:	eb e3       	ldi	r30, 0x3B	; 59
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	80 81       	ld	r24, Z
     dd0:	48 2f       	mov	r20, r24
     dd2:	8b 81       	ldd	r24, Y+3	; 0x03
     dd4:	28 2f       	mov	r18, r24
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	02 2e       	mov	r0, r18
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <DIO_u8SetPinValue+0x8a>
     de0:	88 0f       	add	r24, r24
     de2:	99 1f       	adc	r25, r25
     de4:	0a 94       	dec	r0
     de6:	e2 f7       	brpl	.-8      	; 0xde0 <DIO_u8SetPinValue+0x86>
     de8:	80 95       	com	r24
     dea:	84 23       	and	r24, r20
     dec:	8c 93       	st	X, r24
     dee:	bd c0       	rjmp	.+378    	; 0xf6a <DIO_u8SetPinValue+0x210>
			case DIO_PORTB : CLR_BIT(PORTB , Cpy_u8Pin); break;
     df0:	a8 e3       	ldi	r26, 0x38	; 56
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e8 e3       	ldi	r30, 0x38	; 56
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	48 2f       	mov	r20, r24
     dfc:	8b 81       	ldd	r24, Y+3	; 0x03
     dfe:	28 2f       	mov	r18, r24
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 2e       	mov	r0, r18
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <DIO_u8SetPinValue+0xb4>
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	0a 94       	dec	r0
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <DIO_u8SetPinValue+0xb0>
     e12:	80 95       	com	r24
     e14:	84 23       	and	r24, r20
     e16:	8c 93       	st	X, r24
     e18:	a8 c0       	rjmp	.+336    	; 0xf6a <DIO_u8SetPinValue+0x210>
			case DIO_PORTC : CLR_BIT(PORTC , Cpy_u8Pin); break;
     e1a:	a5 e3       	ldi	r26, 0x35	; 53
     e1c:	b0 e0       	ldi	r27, 0x00	; 0
     e1e:	e5 e3       	ldi	r30, 0x35	; 53
     e20:	f0 e0       	ldi	r31, 0x00	; 0
     e22:	80 81       	ld	r24, Z
     e24:	48 2f       	mov	r20, r24
     e26:	8b 81       	ldd	r24, Y+3	; 0x03
     e28:	28 2f       	mov	r18, r24
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	02 2e       	mov	r0, r18
     e32:	02 c0       	rjmp	.+4      	; 0xe38 <DIO_u8SetPinValue+0xde>
     e34:	88 0f       	add	r24, r24
     e36:	99 1f       	adc	r25, r25
     e38:	0a 94       	dec	r0
     e3a:	e2 f7       	brpl	.-8      	; 0xe34 <DIO_u8SetPinValue+0xda>
     e3c:	80 95       	com	r24
     e3e:	84 23       	and	r24, r20
     e40:	8c 93       	st	X, r24
     e42:	93 c0       	rjmp	.+294    	; 0xf6a <DIO_u8SetPinValue+0x210>
			case DIO_PORTD : CLR_BIT(PORTD , Cpy_u8Pin); break;
     e44:	a2 e3       	ldi	r26, 0x32	; 50
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e2 e3       	ldi	r30, 0x32	; 50
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	80 81       	ld	r24, Z
     e4e:	48 2f       	mov	r20, r24
     e50:	8b 81       	ldd	r24, Y+3	; 0x03
     e52:	28 2f       	mov	r18, r24
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	02 2e       	mov	r0, r18
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <DIO_u8SetPinValue+0x108>
     e5e:	88 0f       	add	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	0a 94       	dec	r0
     e64:	e2 f7       	brpl	.-8      	; 0xe5e <DIO_u8SetPinValue+0x104>
     e66:	80 95       	com	r24
     e68:	84 23       	and	r24, r20
     e6a:	8c 93       	st	X, r24
     e6c:	7e c0       	rjmp	.+252    	; 0xf6a <DIO_u8SetPinValue+0x210>
			default: Local_u8StateError = 1; 			break;
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	89 83       	std	Y+1, r24	; 0x01
     e72:	7b c0       	rjmp	.+246    	; 0xf6a <DIO_u8SetPinValue+0x210>
			}
		}
		else if (Cpy_u8Value == DIO_OUTPUT){
     e74:	8c 81       	ldd	r24, Y+4	; 0x04
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	09 f0       	breq	.+2      	; 0xe7c <DIO_u8SetPinValue+0x122>
     e7a:	72 c0       	rjmp	.+228    	; 0xf60 <DIO_u8SetPinValue+0x206>
			switch (Cpy_u8Port){
     e7c:	8a 81       	ldd	r24, Y+2	; 0x02
     e7e:	28 2f       	mov	r18, r24
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	3e 83       	std	Y+6, r19	; 0x06
     e84:	2d 83       	std	Y+5, r18	; 0x05
     e86:	8d 81       	ldd	r24, Y+5	; 0x05
     e88:	9e 81       	ldd	r25, Y+6	; 0x06
     e8a:	81 30       	cpi	r24, 0x01	; 1
     e8c:	91 05       	cpc	r25, r1
     e8e:	49 f1       	breq	.+82     	; 0xee2 <DIO_u8SetPinValue+0x188>
     e90:	2d 81       	ldd	r18, Y+5	; 0x05
     e92:	3e 81       	ldd	r19, Y+6	; 0x06
     e94:	22 30       	cpi	r18, 0x02	; 2
     e96:	31 05       	cpc	r19, r1
     e98:	2c f4       	brge	.+10     	; 0xea4 <DIO_u8SetPinValue+0x14a>
     e9a:	8d 81       	ldd	r24, Y+5	; 0x05
     e9c:	9e 81       	ldd	r25, Y+6	; 0x06
     e9e:	00 97       	sbiw	r24, 0x00	; 0
     ea0:	61 f0       	breq	.+24     	; 0xeba <DIO_u8SetPinValue+0x160>
     ea2:	5b c0       	rjmp	.+182    	; 0xf5a <DIO_u8SetPinValue+0x200>
     ea4:	2d 81       	ldd	r18, Y+5	; 0x05
     ea6:	3e 81       	ldd	r19, Y+6	; 0x06
     ea8:	22 30       	cpi	r18, 0x02	; 2
     eaa:	31 05       	cpc	r19, r1
     eac:	71 f1       	breq	.+92     	; 0xf0a <DIO_u8SetPinValue+0x1b0>
     eae:	8d 81       	ldd	r24, Y+5	; 0x05
     eb0:	9e 81       	ldd	r25, Y+6	; 0x06
     eb2:	83 30       	cpi	r24, 0x03	; 3
     eb4:	91 05       	cpc	r25, r1
     eb6:	e9 f1       	breq	.+122    	; 0xf32 <DIO_u8SetPinValue+0x1d8>
     eb8:	50 c0       	rjmp	.+160    	; 0xf5a <DIO_u8SetPinValue+0x200>
			case DIO_PORTA : SET_BIT(PORTA , Cpy_u8Pin) ; break;
     eba:	ab e3       	ldi	r26, 0x3B	; 59
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	eb e3       	ldi	r30, 0x3B	; 59
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	80 81       	ld	r24, Z
     ec4:	48 2f       	mov	r20, r24
     ec6:	8b 81       	ldd	r24, Y+3	; 0x03
     ec8:	28 2f       	mov	r18, r24
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	02 2e       	mov	r0, r18
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <DIO_u8SetPinValue+0x17e>
     ed4:	88 0f       	add	r24, r24
     ed6:	99 1f       	adc	r25, r25
     ed8:	0a 94       	dec	r0
     eda:	e2 f7       	brpl	.-8      	; 0xed4 <DIO_u8SetPinValue+0x17a>
     edc:	84 2b       	or	r24, r20
     ede:	8c 93       	st	X, r24
     ee0:	44 c0       	rjmp	.+136    	; 0xf6a <DIO_u8SetPinValue+0x210>
			case DIO_PORTB : SET_BIT(PORTB , Cpy_u8Pin); break;
     ee2:	a8 e3       	ldi	r26, 0x38	; 56
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	e8 e3       	ldi	r30, 0x38	; 56
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	80 81       	ld	r24, Z
     eec:	48 2f       	mov	r20, r24
     eee:	8b 81       	ldd	r24, Y+3	; 0x03
     ef0:	28 2f       	mov	r18, r24
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	02 2e       	mov	r0, r18
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <DIO_u8SetPinValue+0x1a6>
     efc:	88 0f       	add	r24, r24
     efe:	99 1f       	adc	r25, r25
     f00:	0a 94       	dec	r0
     f02:	e2 f7       	brpl	.-8      	; 0xefc <DIO_u8SetPinValue+0x1a2>
     f04:	84 2b       	or	r24, r20
     f06:	8c 93       	st	X, r24
     f08:	30 c0       	rjmp	.+96     	; 0xf6a <DIO_u8SetPinValue+0x210>
			case DIO_PORTC : SET_BIT(PORTC , Cpy_u8Pin); break;
     f0a:	a5 e3       	ldi	r26, 0x35	; 53
     f0c:	b0 e0       	ldi	r27, 0x00	; 0
     f0e:	e5 e3       	ldi	r30, 0x35	; 53
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	80 81       	ld	r24, Z
     f14:	48 2f       	mov	r20, r24
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	28 2f       	mov	r18, r24
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	02 2e       	mov	r0, r18
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <DIO_u8SetPinValue+0x1ce>
     f24:	88 0f       	add	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	0a 94       	dec	r0
     f2a:	e2 f7       	brpl	.-8      	; 0xf24 <DIO_u8SetPinValue+0x1ca>
     f2c:	84 2b       	or	r24, r20
     f2e:	8c 93       	st	X, r24
     f30:	1c c0       	rjmp	.+56     	; 0xf6a <DIO_u8SetPinValue+0x210>
			case DIO_PORTD : SET_BIT(PORTD , Cpy_u8Pin); break;
     f32:	a2 e3       	ldi	r26, 0x32	; 50
     f34:	b0 e0       	ldi	r27, 0x00	; 0
     f36:	e2 e3       	ldi	r30, 0x32	; 50
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	80 81       	ld	r24, Z
     f3c:	48 2f       	mov	r20, r24
     f3e:	8b 81       	ldd	r24, Y+3	; 0x03
     f40:	28 2f       	mov	r18, r24
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	02 2e       	mov	r0, r18
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <DIO_u8SetPinValue+0x1f6>
     f4c:	88 0f       	add	r24, r24
     f4e:	99 1f       	adc	r25, r25
     f50:	0a 94       	dec	r0
     f52:	e2 f7       	brpl	.-8      	; 0xf4c <DIO_u8SetPinValue+0x1f2>
     f54:	84 2b       	or	r24, r20
     f56:	8c 93       	st	X, r24
     f58:	08 c0       	rjmp	.+16     	; 0xf6a <DIO_u8SetPinValue+0x210>
			default: Local_u8StateError = 1; 			break;
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	89 83       	std	Y+1, r24	; 0x01
     f5e:	05 c0       	rjmp	.+10     	; 0xf6a <DIO_u8SetPinValue+0x210>
			}
		}
		else{
			Local_u8StateError = 1;
     f60:	81 e0       	ldi	r24, 0x01	; 1
     f62:	89 83       	std	Y+1, r24	; 0x01
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <DIO_u8SetPinValue+0x210>
		}
	}
	else {
		Local_u8StateError = 1;
     f66:	81 e0       	ldi	r24, 0x01	; 1
     f68:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8StateError;
     f6a:	89 81       	ldd	r24, Y+1	; 0x01
}
     f6c:	28 96       	adiw	r28, 0x08	; 8
     f6e:	0f b6       	in	r0, 0x3f	; 63
     f70:	f8 94       	cli
     f72:	de bf       	out	0x3e, r29	; 62
     f74:	0f be       	out	0x3f, r0	; 63
     f76:	cd bf       	out	0x3d, r28	; 61
     f78:	cf 91       	pop	r28
     f7a:	df 91       	pop	r29
     f7c:	08 95       	ret

00000f7e <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue (u8 Cpy_u8Port , u8 Cpy_u8Pin){
     f7e:	df 93       	push	r29
     f80:	cf 93       	push	r28
     f82:	00 d0       	rcall	.+0      	; 0xf84 <DIO_u8GetPinValue+0x6>
     f84:	00 d0       	rcall	.+0      	; 0xf86 <DIO_u8GetPinValue+0x8>
     f86:	0f 92       	push	r0
     f88:	cd b7       	in	r28, 0x3d	; 61
     f8a:	de b7       	in	r29, 0x3e	; 62
     f8c:	8a 83       	std	Y+2, r24	; 0x02
     f8e:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8InValue = 0 ;
     f90:	19 82       	std	Y+1, r1	; 0x01
	switch (Cpy_u8Port){
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	28 2f       	mov	r18, r24
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	3d 83       	std	Y+5, r19	; 0x05
     f9a:	2c 83       	std	Y+4, r18	; 0x04
     f9c:	4c 81       	ldd	r20, Y+4	; 0x04
     f9e:	5d 81       	ldd	r21, Y+5	; 0x05
     fa0:	41 30       	cpi	r20, 0x01	; 1
     fa2:	51 05       	cpc	r21, r1
     fa4:	41 f1       	breq	.+80     	; 0xff6 <DIO_u8GetPinValue+0x78>
     fa6:	8c 81       	ldd	r24, Y+4	; 0x04
     fa8:	9d 81       	ldd	r25, Y+5	; 0x05
     faa:	82 30       	cpi	r24, 0x02	; 2
     fac:	91 05       	cpc	r25, r1
     fae:	34 f4       	brge	.+12     	; 0xfbc <DIO_u8GetPinValue+0x3e>
     fb0:	2c 81       	ldd	r18, Y+4	; 0x04
     fb2:	3d 81       	ldd	r19, Y+5	; 0x05
     fb4:	21 15       	cp	r18, r1
     fb6:	31 05       	cpc	r19, r1
     fb8:	61 f0       	breq	.+24     	; 0xfd2 <DIO_u8GetPinValue+0x54>
     fba:	52 c0       	rjmp	.+164    	; 0x1060 <DIO_u8GetPinValue+0xe2>
     fbc:	4c 81       	ldd	r20, Y+4	; 0x04
     fbe:	5d 81       	ldd	r21, Y+5	; 0x05
     fc0:	42 30       	cpi	r20, 0x02	; 2
     fc2:	51 05       	cpc	r21, r1
     fc4:	51 f1       	breq	.+84     	; 0x101a <DIO_u8GetPinValue+0x9c>
     fc6:	8c 81       	ldd	r24, Y+4	; 0x04
     fc8:	9d 81       	ldd	r25, Y+5	; 0x05
     fca:	83 30       	cpi	r24, 0x03	; 3
     fcc:	91 05       	cpc	r25, r1
     fce:	b9 f1       	breq	.+110    	; 0x103e <DIO_u8GetPinValue+0xc0>
     fd0:	47 c0       	rjmp	.+142    	; 0x1060 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTA : local_u8InValue = GET_BIT(PINA , Cpy_u8Pin) ; break;
     fd2:	e9 e3       	ldi	r30, 0x39	; 57
     fd4:	f0 e0       	ldi	r31, 0x00	; 0
     fd6:	80 81       	ld	r24, Z
     fd8:	28 2f       	mov	r18, r24
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	8b 81       	ldd	r24, Y+3	; 0x03
     fde:	88 2f       	mov	r24, r24
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	a9 01       	movw	r20, r18
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <DIO_u8GetPinValue+0x6c>
     fe6:	55 95       	asr	r21
     fe8:	47 95       	ror	r20
     fea:	8a 95       	dec	r24
     fec:	e2 f7       	brpl	.-8      	; 0xfe6 <DIO_u8GetPinValue+0x68>
     fee:	ca 01       	movw	r24, r20
     ff0:	81 70       	andi	r24, 0x01	; 1
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	35 c0       	rjmp	.+106    	; 0x1060 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTB : local_u8InValue = GET_BIT(PINB , Cpy_u8Pin); break;
     ff6:	e6 e3       	ldi	r30, 0x36	; 54
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	80 81       	ld	r24, Z
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	8b 81       	ldd	r24, Y+3	; 0x03
    1002:	88 2f       	mov	r24, r24
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	a9 01       	movw	r20, r18
    1008:	02 c0       	rjmp	.+4      	; 0x100e <DIO_u8GetPinValue+0x90>
    100a:	55 95       	asr	r21
    100c:	47 95       	ror	r20
    100e:	8a 95       	dec	r24
    1010:	e2 f7       	brpl	.-8      	; 0x100a <DIO_u8GetPinValue+0x8c>
    1012:	ca 01       	movw	r24, r20
    1014:	81 70       	andi	r24, 0x01	; 1
    1016:	89 83       	std	Y+1, r24	; 0x01
    1018:	23 c0       	rjmp	.+70     	; 0x1060 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTC : local_u8InValue = GET_BIT(PINC , Cpy_u8Pin); break;
    101a:	e3 e3       	ldi	r30, 0x33	; 51
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	80 81       	ld	r24, Z
    1020:	28 2f       	mov	r18, r24
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	8b 81       	ldd	r24, Y+3	; 0x03
    1026:	88 2f       	mov	r24, r24
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	a9 01       	movw	r20, r18
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <DIO_u8GetPinValue+0xb4>
    102e:	55 95       	asr	r21
    1030:	47 95       	ror	r20
    1032:	8a 95       	dec	r24
    1034:	e2 f7       	brpl	.-8      	; 0x102e <DIO_u8GetPinValue+0xb0>
    1036:	ca 01       	movw	r24, r20
    1038:	81 70       	andi	r24, 0x01	; 1
    103a:	89 83       	std	Y+1, r24	; 0x01
    103c:	11 c0       	rjmp	.+34     	; 0x1060 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTD : local_u8InValue = GET_BIT(PIND , Cpy_u8Pin); break;
    103e:	e0 e3       	ldi	r30, 0x30	; 48
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	80 81       	ld	r24, Z
    1044:	28 2f       	mov	r18, r24
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	8b 81       	ldd	r24, Y+3	; 0x03
    104a:	88 2f       	mov	r24, r24
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	a9 01       	movw	r20, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <DIO_u8GetPinValue+0xd8>
    1052:	55 95       	asr	r21
    1054:	47 95       	ror	r20
    1056:	8a 95       	dec	r24
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <DIO_u8GetPinValue+0xd4>
    105a:	ca 01       	movw	r24, r20
    105c:	81 70       	andi	r24, 0x01	; 1
    105e:	89 83       	std	Y+1, r24	; 0x01
	}

	return local_u8InValue ;
    1060:	89 81       	ldd	r24, Y+1	; 0x01
}
    1062:	0f 90       	pop	r0
    1064:	0f 90       	pop	r0
    1066:	0f 90       	pop	r0
    1068:	0f 90       	pop	r0
    106a:	0f 90       	pop	r0
    106c:	cf 91       	pop	r28
    106e:	df 91       	pop	r29
    1070:	08 95       	ret

00001072 <DIO_u8SetPortDirection>:


u8 DIO_u8SetPortDirection (u8 Cpy_u8Port , u8 Cpy_u8Dirc)
{
    1072:	df 93       	push	r29
    1074:	cf 93       	push	r28
    1076:	00 d0       	rcall	.+0      	; 0x1078 <DIO_u8SetPortDirection+0x6>
    1078:	00 d0       	rcall	.+0      	; 0x107a <DIO_u8SetPortDirection+0x8>
    107a:	0f 92       	push	r0
    107c:	cd b7       	in	r28, 0x3d	; 61
    107e:	de b7       	in	r29, 0x3e	; 62
    1080:	8a 83       	std	Y+2, r24	; 0x02
    1082:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8StateError = 0;
    1084:	19 82       	std	Y+1, r1	; 0x01

	switch (Cpy_u8Port)
    1086:	8a 81       	ldd	r24, Y+2	; 0x02
    1088:	28 2f       	mov	r18, r24
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	3d 83       	std	Y+5, r19	; 0x05
    108e:	2c 83       	std	Y+4, r18	; 0x04
    1090:	8c 81       	ldd	r24, Y+4	; 0x04
    1092:	9d 81       	ldd	r25, Y+5	; 0x05
    1094:	81 30       	cpi	r24, 0x01	; 1
    1096:	91 05       	cpc	r25, r1
    1098:	d1 f0       	breq	.+52     	; 0x10ce <DIO_u8SetPortDirection+0x5c>
    109a:	2c 81       	ldd	r18, Y+4	; 0x04
    109c:	3d 81       	ldd	r19, Y+5	; 0x05
    109e:	22 30       	cpi	r18, 0x02	; 2
    10a0:	31 05       	cpc	r19, r1
    10a2:	2c f4       	brge	.+10     	; 0x10ae <DIO_u8SetPortDirection+0x3c>
    10a4:	8c 81       	ldd	r24, Y+4	; 0x04
    10a6:	9d 81       	ldd	r25, Y+5	; 0x05
    10a8:	00 97       	sbiw	r24, 0x00	; 0
    10aa:	61 f0       	breq	.+24     	; 0x10c4 <DIO_u8SetPortDirection+0x52>
    10ac:	1f c0       	rjmp	.+62     	; 0x10ec <DIO_u8SetPortDirection+0x7a>
    10ae:	2c 81       	ldd	r18, Y+4	; 0x04
    10b0:	3d 81       	ldd	r19, Y+5	; 0x05
    10b2:	22 30       	cpi	r18, 0x02	; 2
    10b4:	31 05       	cpc	r19, r1
    10b6:	81 f0       	breq	.+32     	; 0x10d8 <DIO_u8SetPortDirection+0x66>
    10b8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ba:	9d 81       	ldd	r25, Y+5	; 0x05
    10bc:	83 30       	cpi	r24, 0x03	; 3
    10be:	91 05       	cpc	r25, r1
    10c0:	81 f0       	breq	.+32     	; 0x10e2 <DIO_u8SetPortDirection+0x70>
    10c2:	14 c0       	rjmp	.+40     	; 0x10ec <DIO_u8SetPortDirection+0x7a>
	{
	case DIO_PORTA : DDRA = Cpy_u8Dirc ; break;
    10c4:	ea e3       	ldi	r30, 0x3A	; 58
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ca:	80 83       	st	Z, r24
    10cc:	11 c0       	rjmp	.+34     	; 0x10f0 <DIO_u8SetPortDirection+0x7e>
	case DIO_PORTB : DDRB = Cpy_u8Dirc ; break;
    10ce:	e7 e3       	ldi	r30, 0x37	; 55
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	8b 81       	ldd	r24, Y+3	; 0x03
    10d4:	80 83       	st	Z, r24
    10d6:	0c c0       	rjmp	.+24     	; 0x10f0 <DIO_u8SetPortDirection+0x7e>
	case DIO_PORTC : DDRC = Cpy_u8Dirc ; break;
    10d8:	e4 e3       	ldi	r30, 0x34	; 52
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	8b 81       	ldd	r24, Y+3	; 0x03
    10de:	80 83       	st	Z, r24
    10e0:	07 c0       	rjmp	.+14     	; 0x10f0 <DIO_u8SetPortDirection+0x7e>
	case DIO_PORTD : DDRD = Cpy_u8Dirc ; break;
    10e2:	e1 e3       	ldi	r30, 0x31	; 49
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	8b 81       	ldd	r24, Y+3	; 0x03
    10e8:	80 83       	st	Z, r24
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <DIO_u8SetPortDirection+0x7e>
	default: Local_u8StateError = 1;     break;
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError ;
    10f0:	89 81       	ldd	r24, Y+1	; 0x01

}
    10f2:	0f 90       	pop	r0
    10f4:	0f 90       	pop	r0
    10f6:	0f 90       	pop	r0
    10f8:	0f 90       	pop	r0
    10fa:	0f 90       	pop	r0
    10fc:	cf 91       	pop	r28
    10fe:	df 91       	pop	r29
    1100:	08 95       	ret

00001102 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue (u8 Cpy_u8Port , u8 Cpy_u8Value){
    1102:	df 93       	push	r29
    1104:	cf 93       	push	r28
    1106:	00 d0       	rcall	.+0      	; 0x1108 <DIO_u8SetPortValue+0x6>
    1108:	00 d0       	rcall	.+0      	; 0x110a <DIO_u8SetPortValue+0x8>
    110a:	0f 92       	push	r0
    110c:	cd b7       	in	r28, 0x3d	; 61
    110e:	de b7       	in	r29, 0x3e	; 62
    1110:	8a 83       	std	Y+2, r24	; 0x02
    1112:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8StateError =0;
    1114:	19 82       	std	Y+1, r1	; 0x01
	switch (Cpy_u8Port)
    1116:	8a 81       	ldd	r24, Y+2	; 0x02
    1118:	28 2f       	mov	r18, r24
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	3d 83       	std	Y+5, r19	; 0x05
    111e:	2c 83       	std	Y+4, r18	; 0x04
    1120:	8c 81       	ldd	r24, Y+4	; 0x04
    1122:	9d 81       	ldd	r25, Y+5	; 0x05
    1124:	81 30       	cpi	r24, 0x01	; 1
    1126:	91 05       	cpc	r25, r1
    1128:	d1 f0       	breq	.+52     	; 0x115e <DIO_u8SetPortValue+0x5c>
    112a:	2c 81       	ldd	r18, Y+4	; 0x04
    112c:	3d 81       	ldd	r19, Y+5	; 0x05
    112e:	22 30       	cpi	r18, 0x02	; 2
    1130:	31 05       	cpc	r19, r1
    1132:	2c f4       	brge	.+10     	; 0x113e <DIO_u8SetPortValue+0x3c>
    1134:	8c 81       	ldd	r24, Y+4	; 0x04
    1136:	9d 81       	ldd	r25, Y+5	; 0x05
    1138:	00 97       	sbiw	r24, 0x00	; 0
    113a:	61 f0       	breq	.+24     	; 0x1154 <DIO_u8SetPortValue+0x52>
    113c:	1f c0       	rjmp	.+62     	; 0x117c <DIO_u8SetPortValue+0x7a>
    113e:	2c 81       	ldd	r18, Y+4	; 0x04
    1140:	3d 81       	ldd	r19, Y+5	; 0x05
    1142:	22 30       	cpi	r18, 0x02	; 2
    1144:	31 05       	cpc	r19, r1
    1146:	81 f0       	breq	.+32     	; 0x1168 <DIO_u8SetPortValue+0x66>
    1148:	8c 81       	ldd	r24, Y+4	; 0x04
    114a:	9d 81       	ldd	r25, Y+5	; 0x05
    114c:	83 30       	cpi	r24, 0x03	; 3
    114e:	91 05       	cpc	r25, r1
    1150:	81 f0       	breq	.+32     	; 0x1172 <DIO_u8SetPortValue+0x70>
    1152:	14 c0       	rjmp	.+40     	; 0x117c <DIO_u8SetPortValue+0x7a>
	{
	case DIO_PORTA : PORTA =  Cpy_u8Value; break;
    1154:	eb e3       	ldi	r30, 0x3B	; 59
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	8b 81       	ldd	r24, Y+3	; 0x03
    115a:	80 83       	st	Z, r24
    115c:	11 c0       	rjmp	.+34     	; 0x1180 <DIO_u8SetPortValue+0x7e>
	case DIO_PORTB : PORTB =  Cpy_u8Value; break;
    115e:	e8 e3       	ldi	r30, 0x38	; 56
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	80 83       	st	Z, r24
    1166:	0c c0       	rjmp	.+24     	; 0x1180 <DIO_u8SetPortValue+0x7e>
	case DIO_PORTC : PORTC =  Cpy_u8Value; break;
    1168:	e5 e3       	ldi	r30, 0x35	; 53
    116a:	f0 e0       	ldi	r31, 0x00	; 0
    116c:	8b 81       	ldd	r24, Y+3	; 0x03
    116e:	80 83       	st	Z, r24
    1170:	07 c0       	rjmp	.+14     	; 0x1180 <DIO_u8SetPortValue+0x7e>
	case DIO_PORTD : PORTD =  Cpy_u8Value; break;
    1172:	e2 e3       	ldi	r30, 0x32	; 50
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	80 83       	st	Z, r24
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <DIO_u8SetPortValue+0x7e>
	default: Local_u8StateError = 1;     break;
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError ;
    1180:	89 81       	ldd	r24, Y+1	; 0x01

}
    1182:	0f 90       	pop	r0
    1184:	0f 90       	pop	r0
    1186:	0f 90       	pop	r0
    1188:	0f 90       	pop	r0
    118a:	0f 90       	pop	r0
    118c:	cf 91       	pop	r28
    118e:	df 91       	pop	r29
    1190:	08 95       	ret

00001192 <DIO_u8GetPortValue>:
u8 DIO_u8GetPortValue (u8 Cpy_u8Port){
    1192:	df 93       	push	r29
    1194:	cf 93       	push	r28
    1196:	00 d0       	rcall	.+0      	; 0x1198 <DIO_u8GetPortValue+0x6>
    1198:	00 d0       	rcall	.+0      	; 0x119a <DIO_u8GetPortValue+0x8>
    119a:	cd b7       	in	r28, 0x3d	; 61
    119c:	de b7       	in	r29, 0x3e	; 62
    119e:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8InValue = 0 ;
    11a0:	19 82       	std	Y+1, r1	; 0x01
	switch (Cpy_u8Port){
    11a2:	8a 81       	ldd	r24, Y+2	; 0x02
    11a4:	28 2f       	mov	r18, r24
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	3c 83       	std	Y+4, r19	; 0x04
    11aa:	2b 83       	std	Y+3, r18	; 0x03
    11ac:	8b 81       	ldd	r24, Y+3	; 0x03
    11ae:	9c 81       	ldd	r25, Y+4	; 0x04
    11b0:	81 30       	cpi	r24, 0x01	; 1
    11b2:	91 05       	cpc	r25, r1
    11b4:	d1 f0       	breq	.+52     	; 0x11ea <DIO_u8GetPortValue+0x58>
    11b6:	2b 81       	ldd	r18, Y+3	; 0x03
    11b8:	3c 81       	ldd	r19, Y+4	; 0x04
    11ba:	22 30       	cpi	r18, 0x02	; 2
    11bc:	31 05       	cpc	r19, r1
    11be:	2c f4       	brge	.+10     	; 0x11ca <DIO_u8GetPortValue+0x38>
    11c0:	8b 81       	ldd	r24, Y+3	; 0x03
    11c2:	9c 81       	ldd	r25, Y+4	; 0x04
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	61 f0       	breq	.+24     	; 0x11e0 <DIO_u8GetPortValue+0x4e>
    11c8:	1e c0       	rjmp	.+60     	; 0x1206 <DIO_u8GetPortValue+0x74>
    11ca:	2b 81       	ldd	r18, Y+3	; 0x03
    11cc:	3c 81       	ldd	r19, Y+4	; 0x04
    11ce:	22 30       	cpi	r18, 0x02	; 2
    11d0:	31 05       	cpc	r19, r1
    11d2:	81 f0       	breq	.+32     	; 0x11f4 <DIO_u8GetPortValue+0x62>
    11d4:	8b 81       	ldd	r24, Y+3	; 0x03
    11d6:	9c 81       	ldd	r25, Y+4	; 0x04
    11d8:	83 30       	cpi	r24, 0x03	; 3
    11da:	91 05       	cpc	r25, r1
    11dc:	81 f0       	breq	.+32     	; 0x11fe <DIO_u8GetPortValue+0x6c>
    11de:	13 c0       	rjmp	.+38     	; 0x1206 <DIO_u8GetPortValue+0x74>
	case DIO_PORTA : local_u8InValue = PINA ; break;
    11e0:	e9 e3       	ldi	r30, 0x39	; 57
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	80 81       	ld	r24, Z
    11e6:	89 83       	std	Y+1, r24	; 0x01
    11e8:	0e c0       	rjmp	.+28     	; 0x1206 <DIO_u8GetPortValue+0x74>
	case DIO_PORTB : local_u8InValue = PINB ; break;
    11ea:	e6 e3       	ldi	r30, 0x36	; 54
    11ec:	f0 e0       	ldi	r31, 0x00	; 0
    11ee:	80 81       	ld	r24, Z
    11f0:	89 83       	std	Y+1, r24	; 0x01
    11f2:	09 c0       	rjmp	.+18     	; 0x1206 <DIO_u8GetPortValue+0x74>
	case DIO_PORTC : local_u8InValue = PINC ; break;
    11f4:	e3 e3       	ldi	r30, 0x33	; 51
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	80 81       	ld	r24, Z
    11fa:	89 83       	std	Y+1, r24	; 0x01
    11fc:	04 c0       	rjmp	.+8      	; 0x1206 <DIO_u8GetPortValue+0x74>
	case DIO_PORTD : local_u8InValue = PIND ; break;
    11fe:	e0 e3       	ldi	r30, 0x30	; 48
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	80 81       	ld	r24, Z
    1204:	89 83       	std	Y+1, r24	; 0x01
	}

	return local_u8InValue ;
    1206:	89 81       	ldd	r24, Y+1	; 0x01
}
    1208:	0f 90       	pop	r0
    120a:	0f 90       	pop	r0
    120c:	0f 90       	pop	r0
    120e:	0f 90       	pop	r0
    1210:	cf 91       	pop	r28
    1212:	df 91       	pop	r29
    1214:	08 95       	ret

00001216 <LCD_voidSendCommand>:
#include "LCD_Cfg.h"
#include "LCD_Private.h"


void LCD_voidSendCommand(u8 Cpy_u8Command)
{
    1216:	df 93       	push	r29
    1218:	cf 93       	push	r28
    121a:	cd b7       	in	r28, 0x3d	; 61
    121c:	de b7       	in	r29, 0x3e	; 62
    121e:	2f 97       	sbiw	r28, 0x0f	; 15
    1220:	0f b6       	in	r0, 0x3f	; 63
    1222:	f8 94       	cli
    1224:	de bf       	out	0x3e, r29	; 62
    1226:	0f be       	out	0x3f, r0	; 63
    1228:	cd bf       	out	0x3d, r28	; 61
    122a:	8f 87       	std	Y+15, r24	; 0x0f
	/* Set RS to low for command */
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_RS_PIN , DIO_LOW);
    122c:	82 e0       	ldi	r24, 0x02	; 2
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	40 e0       	ldi	r20, 0x00	; 0
    1232:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>

	/* Set RW to low for write */
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_RW_PIN , DIO_LOW);
    1236:	82 e0       	ldi	r24, 0x02	; 2
    1238:	61 e0       	ldi	r22, 0x01	; 1
    123a:	40 e0       	ldi	r20, 0x00	; 0
    123c:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>

	/* Set command to data pins */
	DIO_u8SetPortValue(LCD_DATA_PORT , Cpy_u8Command);
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	6f 85       	ldd	r22, Y+15	; 0x0f
    1244:	0e 94 81 08 	call	0x1102	; 0x1102 <DIO_u8SetPortValue>

	/*Send enable pulse */
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_E_PIN , DIO_HIGH);
    1248:	82 e0       	ldi	r24, 0x02	; 2
    124a:	62 e0       	ldi	r22, 0x02	; 2
    124c:	41 e0       	ldi	r20, 0x01	; 1
    124e:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e4       	ldi	r27, 0x40	; 64
    125a:	8b 87       	std	Y+11, r24	; 0x0b
    125c:	9c 87       	std	Y+12, r25	; 0x0c
    125e:	ad 87       	std	Y+13, r26	; 0x0d
    1260:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1262:	6b 85       	ldd	r22, Y+11	; 0x0b
    1264:	7c 85       	ldd	r23, Y+12	; 0x0c
    1266:	8d 85       	ldd	r24, Y+13	; 0x0d
    1268:	9e 85       	ldd	r25, Y+14	; 0x0e
    126a:	20 e0       	ldi	r18, 0x00	; 0
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	4a ef       	ldi	r20, 0xFA	; 250
    1270:	54 e4       	ldi	r21, 0x44	; 68
    1272:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1276:	dc 01       	movw	r26, r24
    1278:	cb 01       	movw	r24, r22
    127a:	8f 83       	std	Y+7, r24	; 0x07
    127c:	98 87       	std	Y+8, r25	; 0x08
    127e:	a9 87       	std	Y+9, r26	; 0x09
    1280:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1282:	6f 81       	ldd	r22, Y+7	; 0x07
    1284:	78 85       	ldd	r23, Y+8	; 0x08
    1286:	89 85       	ldd	r24, Y+9	; 0x09
    1288:	9a 85       	ldd	r25, Y+10	; 0x0a
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	40 e8       	ldi	r20, 0x80	; 128
    1290:	5f e3       	ldi	r21, 0x3F	; 63
    1292:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1296:	88 23       	and	r24, r24
    1298:	2c f4       	brge	.+10     	; 0x12a4 <LCD_voidSendCommand+0x8e>
		__ticks = 1;
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	9e 83       	std	Y+6, r25	; 0x06
    12a0:	8d 83       	std	Y+5, r24	; 0x05
    12a2:	3f c0       	rjmp	.+126    	; 0x1322 <LCD_voidSendCommand+0x10c>
	else if (__tmp > 65535)
    12a4:	6f 81       	ldd	r22, Y+7	; 0x07
    12a6:	78 85       	ldd	r23, Y+8	; 0x08
    12a8:	89 85       	ldd	r24, Y+9	; 0x09
    12aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    12ac:	20 e0       	ldi	r18, 0x00	; 0
    12ae:	3f ef       	ldi	r19, 0xFF	; 255
    12b0:	4f e7       	ldi	r20, 0x7F	; 127
    12b2:	57 e4       	ldi	r21, 0x47	; 71
    12b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12b8:	18 16       	cp	r1, r24
    12ba:	4c f5       	brge	.+82     	; 0x130e <LCD_voidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    12be:	7c 85       	ldd	r23, Y+12	; 0x0c
    12c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    12c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    12c4:	20 e0       	ldi	r18, 0x00	; 0
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	40 e2       	ldi	r20, 0x20	; 32
    12ca:	51 e4       	ldi	r21, 0x41	; 65
    12cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12d0:	dc 01       	movw	r26, r24
    12d2:	cb 01       	movw	r24, r22
    12d4:	bc 01       	movw	r22, r24
    12d6:	cd 01       	movw	r24, r26
    12d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12dc:	dc 01       	movw	r26, r24
    12de:	cb 01       	movw	r24, r22
    12e0:	9e 83       	std	Y+6, r25	; 0x06
    12e2:	8d 83       	std	Y+5, r24	; 0x05
    12e4:	0f c0       	rjmp	.+30     	; 0x1304 <LCD_voidSendCommand+0xee>
    12e6:	88 ec       	ldi	r24, 0xC8	; 200
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	9c 83       	std	Y+4, r25	; 0x04
    12ec:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    12ee:	8b 81       	ldd	r24, Y+3	; 0x03
    12f0:	9c 81       	ldd	r25, Y+4	; 0x04
    12f2:	01 97       	sbiw	r24, 0x01	; 1
    12f4:	f1 f7       	brne	.-4      	; 0x12f2 <LCD_voidSendCommand+0xdc>
    12f6:	9c 83       	std	Y+4, r25	; 0x04
    12f8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12fa:	8d 81       	ldd	r24, Y+5	; 0x05
    12fc:	9e 81       	ldd	r25, Y+6	; 0x06
    12fe:	01 97       	sbiw	r24, 0x01	; 1
    1300:	9e 83       	std	Y+6, r25	; 0x06
    1302:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1304:	8d 81       	ldd	r24, Y+5	; 0x05
    1306:	9e 81       	ldd	r25, Y+6	; 0x06
    1308:	00 97       	sbiw	r24, 0x00	; 0
    130a:	69 f7       	brne	.-38     	; 0x12e6 <LCD_voidSendCommand+0xd0>
    130c:	14 c0       	rjmp	.+40     	; 0x1336 <LCD_voidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    130e:	6f 81       	ldd	r22, Y+7	; 0x07
    1310:	78 85       	ldd	r23, Y+8	; 0x08
    1312:	89 85       	ldd	r24, Y+9	; 0x09
    1314:	9a 85       	ldd	r25, Y+10	; 0x0a
    1316:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    131a:	dc 01       	movw	r26, r24
    131c:	cb 01       	movw	r24, r22
    131e:	9e 83       	std	Y+6, r25	; 0x06
    1320:	8d 83       	std	Y+5, r24	; 0x05
    1322:	8d 81       	ldd	r24, Y+5	; 0x05
    1324:	9e 81       	ldd	r25, Y+6	; 0x06
    1326:	9a 83       	std	Y+2, r25	; 0x02
    1328:	89 83       	std	Y+1, r24	; 0x01
    132a:	89 81       	ldd	r24, Y+1	; 0x01
    132c:	9a 81       	ldd	r25, Y+2	; 0x02
    132e:	01 97       	sbiw	r24, 0x01	; 1
    1330:	f1 f7       	brne	.-4      	; 0x132e <LCD_voidSendCommand+0x118>
    1332:	9a 83       	std	Y+2, r25	; 0x02
    1334:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_E_PIN , DIO_LOW);
    1336:	82 e0       	ldi	r24, 0x02	; 2
    1338:	62 e0       	ldi	r22, 0x02	; 2
    133a:	40 e0       	ldi	r20, 0x00	; 0
    133c:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>

}
    1340:	2f 96       	adiw	r28, 0x0f	; 15
    1342:	0f b6       	in	r0, 0x3f	; 63
    1344:	f8 94       	cli
    1346:	de bf       	out	0x3e, r29	; 62
    1348:	0f be       	out	0x3f, r0	; 63
    134a:	cd bf       	out	0x3d, r28	; 61
    134c:	cf 91       	pop	r28
    134e:	df 91       	pop	r29
    1350:	08 95       	ret

00001352 <LCD_voidSendData>:

void LCD_voidSendData(u8 Cpy_u8Data)
{
    1352:	df 93       	push	r29
    1354:	cf 93       	push	r28
    1356:	cd b7       	in	r28, 0x3d	; 61
    1358:	de b7       	in	r29, 0x3e	; 62
    135a:	2f 97       	sbiw	r28, 0x0f	; 15
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	f8 94       	cli
    1360:	de bf       	out	0x3e, r29	; 62
    1362:	0f be       	out	0x3f, r0	; 63
    1364:	cd bf       	out	0x3d, r28	; 61
    1366:	8f 87       	std	Y+15, r24	; 0x0f
	/* Set RS to high for data */
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_RS_PIN , DIO_HIGH);
    1368:	82 e0       	ldi	r24, 0x02	; 2
    136a:	60 e0       	ldi	r22, 0x00	; 0
    136c:	41 e0       	ldi	r20, 0x01	; 1
    136e:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>

	/* Set RW to low for write */
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_RW_PIN , DIO_LOW);
    1372:	82 e0       	ldi	r24, 0x02	; 2
    1374:	61 e0       	ldi	r22, 0x01	; 1
    1376:	40 e0       	ldi	r20, 0x00	; 0
    1378:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>

	/* Set data to data pins */
	DIO_u8SetPortValue(LCD_DATA_PORT , Cpy_u8Data);
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	6f 85       	ldd	r22, Y+15	; 0x0f
    1380:	0e 94 81 08 	call	0x1102	; 0x1102 <DIO_u8SetPortValue>

	/*Send enable pulse */
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_E_PIN , DIO_HIGH);
    1384:	82 e0       	ldi	r24, 0x02	; 2
    1386:	62 e0       	ldi	r22, 0x02	; 2
    1388:	41 e0       	ldi	r20, 0x01	; 1
    138a:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>
    138e:	80 e0       	ldi	r24, 0x00	; 0
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	a0 e0       	ldi	r26, 0x00	; 0
    1394:	b0 e4       	ldi	r27, 0x40	; 64
    1396:	8b 87       	std	Y+11, r24	; 0x0b
    1398:	9c 87       	std	Y+12, r25	; 0x0c
    139a:	ad 87       	std	Y+13, r26	; 0x0d
    139c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    139e:	6b 85       	ldd	r22, Y+11	; 0x0b
    13a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    13a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    13a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    13a6:	20 e0       	ldi	r18, 0x00	; 0
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	4a ef       	ldi	r20, 0xFA	; 250
    13ac:	54 e4       	ldi	r21, 0x44	; 68
    13ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13b2:	dc 01       	movw	r26, r24
    13b4:	cb 01       	movw	r24, r22
    13b6:	8f 83       	std	Y+7, r24	; 0x07
    13b8:	98 87       	std	Y+8, r25	; 0x08
    13ba:	a9 87       	std	Y+9, r26	; 0x09
    13bc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13be:	6f 81       	ldd	r22, Y+7	; 0x07
    13c0:	78 85       	ldd	r23, Y+8	; 0x08
    13c2:	89 85       	ldd	r24, Y+9	; 0x09
    13c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	40 e8       	ldi	r20, 0x80	; 128
    13cc:	5f e3       	ldi	r21, 0x3F	; 63
    13ce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13d2:	88 23       	and	r24, r24
    13d4:	2c f4       	brge	.+10     	; 0x13e0 <LCD_voidSendData+0x8e>
		__ticks = 1;
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	9e 83       	std	Y+6, r25	; 0x06
    13dc:	8d 83       	std	Y+5, r24	; 0x05
    13de:	3f c0       	rjmp	.+126    	; 0x145e <LCD_voidSendData+0x10c>
	else if (__tmp > 65535)
    13e0:	6f 81       	ldd	r22, Y+7	; 0x07
    13e2:	78 85       	ldd	r23, Y+8	; 0x08
    13e4:	89 85       	ldd	r24, Y+9	; 0x09
    13e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	3f ef       	ldi	r19, 0xFF	; 255
    13ec:	4f e7       	ldi	r20, 0x7F	; 127
    13ee:	57 e4       	ldi	r21, 0x47	; 71
    13f0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13f4:	18 16       	cp	r1, r24
    13f6:	4c f5       	brge	.+82     	; 0x144a <LCD_voidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    13fa:	7c 85       	ldd	r23, Y+12	; 0x0c
    13fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    13fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	40 e2       	ldi	r20, 0x20	; 32
    1406:	51 e4       	ldi	r21, 0x41	; 65
    1408:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	bc 01       	movw	r22, r24
    1412:	cd 01       	movw	r24, r26
    1414:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1418:	dc 01       	movw	r26, r24
    141a:	cb 01       	movw	r24, r22
    141c:	9e 83       	std	Y+6, r25	; 0x06
    141e:	8d 83       	std	Y+5, r24	; 0x05
    1420:	0f c0       	rjmp	.+30     	; 0x1440 <LCD_voidSendData+0xee>
    1422:	88 ec       	ldi	r24, 0xC8	; 200
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	9c 83       	std	Y+4, r25	; 0x04
    1428:	8b 83       	std	Y+3, r24	; 0x03
    142a:	8b 81       	ldd	r24, Y+3	; 0x03
    142c:	9c 81       	ldd	r25, Y+4	; 0x04
    142e:	01 97       	sbiw	r24, 0x01	; 1
    1430:	f1 f7       	brne	.-4      	; 0x142e <LCD_voidSendData+0xdc>
    1432:	9c 83       	std	Y+4, r25	; 0x04
    1434:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1436:	8d 81       	ldd	r24, Y+5	; 0x05
    1438:	9e 81       	ldd	r25, Y+6	; 0x06
    143a:	01 97       	sbiw	r24, 0x01	; 1
    143c:	9e 83       	std	Y+6, r25	; 0x06
    143e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1440:	8d 81       	ldd	r24, Y+5	; 0x05
    1442:	9e 81       	ldd	r25, Y+6	; 0x06
    1444:	00 97       	sbiw	r24, 0x00	; 0
    1446:	69 f7       	brne	.-38     	; 0x1422 <LCD_voidSendData+0xd0>
    1448:	14 c0       	rjmp	.+40     	; 0x1472 <LCD_voidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    144a:	6f 81       	ldd	r22, Y+7	; 0x07
    144c:	78 85       	ldd	r23, Y+8	; 0x08
    144e:	89 85       	ldd	r24, Y+9	; 0x09
    1450:	9a 85       	ldd	r25, Y+10	; 0x0a
    1452:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1456:	dc 01       	movw	r26, r24
    1458:	cb 01       	movw	r24, r22
    145a:	9e 83       	std	Y+6, r25	; 0x06
    145c:	8d 83       	std	Y+5, r24	; 0x05
    145e:	8d 81       	ldd	r24, Y+5	; 0x05
    1460:	9e 81       	ldd	r25, Y+6	; 0x06
    1462:	9a 83       	std	Y+2, r25	; 0x02
    1464:	89 83       	std	Y+1, r24	; 0x01
    1466:	89 81       	ldd	r24, Y+1	; 0x01
    1468:	9a 81       	ldd	r25, Y+2	; 0x02
    146a:	01 97       	sbiw	r24, 0x01	; 1
    146c:	f1 f7       	brne	.-4      	; 0x146a <LCD_voidSendData+0x118>
    146e:	9a 83       	std	Y+2, r25	; 0x02
    1470:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(LCD_CTRL_PORT , LCD_E_PIN , DIO_LOW);
    1472:	82 e0       	ldi	r24, 0x02	; 2
    1474:	62 e0       	ldi	r22, 0x02	; 2
    1476:	40 e0       	ldi	r20, 0x00	; 0
    1478:	0e 94 ad 06 	call	0xd5a	; 0xd5a <DIO_u8SetPinValue>
}
    147c:	2f 96       	adiw	r28, 0x0f	; 15
    147e:	0f b6       	in	r0, 0x3f	; 63
    1480:	f8 94       	cli
    1482:	de bf       	out	0x3e, r29	; 62
    1484:	0f be       	out	0x3f, r0	; 63
    1486:	cd bf       	out	0x3d, r28	; 61
    1488:	cf 91       	pop	r28
    148a:	df 91       	pop	r29
    148c:	08 95       	ret

0000148e <LCD_voidInit>:

void LCD_voidInit(void)
{
    148e:	df 93       	push	r29
    1490:	cf 93       	push	r28
    1492:	cd b7       	in	r28, 0x3d	; 61
    1494:	de b7       	in	r29, 0x3e	; 62
    1496:	e8 97       	sbiw	r28, 0x38	; 56
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	a0 e2       	ldi	r26, 0x20	; 32
    14a8:	b2 e4       	ldi	r27, 0x42	; 66
    14aa:	8d ab       	std	Y+53, r24	; 0x35
    14ac:	9e ab       	std	Y+54, r25	; 0x36
    14ae:	af ab       	std	Y+55, r26	; 0x37
    14b0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14b2:	6d a9       	ldd	r22, Y+53	; 0x35
    14b4:	7e a9       	ldd	r23, Y+54	; 0x36
    14b6:	8f a9       	ldd	r24, Y+55	; 0x37
    14b8:	98 ad       	ldd	r25, Y+56	; 0x38
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	4a ef       	ldi	r20, 0xFA	; 250
    14c0:	54 e4       	ldi	r21, 0x44	; 68
    14c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	89 ab       	std	Y+49, r24	; 0x31
    14cc:	9a ab       	std	Y+50, r25	; 0x32
    14ce:	ab ab       	std	Y+51, r26	; 0x33
    14d0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    14d2:	69 a9       	ldd	r22, Y+49	; 0x31
    14d4:	7a a9       	ldd	r23, Y+50	; 0x32
    14d6:	8b a9       	ldd	r24, Y+51	; 0x33
    14d8:	9c a9       	ldd	r25, Y+52	; 0x34
    14da:	20 e0       	ldi	r18, 0x00	; 0
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	40 e8       	ldi	r20, 0x80	; 128
    14e0:	5f e3       	ldi	r21, 0x3F	; 63
    14e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14e6:	88 23       	and	r24, r24
    14e8:	2c f4       	brge	.+10     	; 0x14f4 <LCD_voidInit+0x66>
		__ticks = 1;
    14ea:	81 e0       	ldi	r24, 0x01	; 1
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	98 ab       	std	Y+48, r25	; 0x30
    14f0:	8f a7       	std	Y+47, r24	; 0x2f
    14f2:	3f c0       	rjmp	.+126    	; 0x1572 <LCD_voidInit+0xe4>
	else if (__tmp > 65535)
    14f4:	69 a9       	ldd	r22, Y+49	; 0x31
    14f6:	7a a9       	ldd	r23, Y+50	; 0x32
    14f8:	8b a9       	ldd	r24, Y+51	; 0x33
    14fa:	9c a9       	ldd	r25, Y+52	; 0x34
    14fc:	20 e0       	ldi	r18, 0x00	; 0
    14fe:	3f ef       	ldi	r19, 0xFF	; 255
    1500:	4f e7       	ldi	r20, 0x7F	; 127
    1502:	57 e4       	ldi	r21, 0x47	; 71
    1504:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1508:	18 16       	cp	r1, r24
    150a:	4c f5       	brge	.+82     	; 0x155e <LCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    150c:	6d a9       	ldd	r22, Y+53	; 0x35
    150e:	7e a9       	ldd	r23, Y+54	; 0x36
    1510:	8f a9       	ldd	r24, Y+55	; 0x37
    1512:	98 ad       	ldd	r25, Y+56	; 0x38
    1514:	20 e0       	ldi	r18, 0x00	; 0
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	40 e2       	ldi	r20, 0x20	; 32
    151a:	51 e4       	ldi	r21, 0x41	; 65
    151c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1520:	dc 01       	movw	r26, r24
    1522:	cb 01       	movw	r24, r22
    1524:	bc 01       	movw	r22, r24
    1526:	cd 01       	movw	r24, r26
    1528:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    152c:	dc 01       	movw	r26, r24
    152e:	cb 01       	movw	r24, r22
    1530:	98 ab       	std	Y+48, r25	; 0x30
    1532:	8f a7       	std	Y+47, r24	; 0x2f
    1534:	0f c0       	rjmp	.+30     	; 0x1554 <LCD_voidInit+0xc6>
    1536:	88 ec       	ldi	r24, 0xC8	; 200
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	9e a7       	std	Y+46, r25	; 0x2e
    153c:	8d a7       	std	Y+45, r24	; 0x2d
    153e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1540:	9e a5       	ldd	r25, Y+46	; 0x2e
    1542:	01 97       	sbiw	r24, 0x01	; 1
    1544:	f1 f7       	brne	.-4      	; 0x1542 <LCD_voidInit+0xb4>
    1546:	9e a7       	std	Y+46, r25	; 0x2e
    1548:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    154a:	8f a5       	ldd	r24, Y+47	; 0x2f
    154c:	98 a9       	ldd	r25, Y+48	; 0x30
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	98 ab       	std	Y+48, r25	; 0x30
    1552:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1554:	8f a5       	ldd	r24, Y+47	; 0x2f
    1556:	98 a9       	ldd	r25, Y+48	; 0x30
    1558:	00 97       	sbiw	r24, 0x00	; 0
    155a:	69 f7       	brne	.-38     	; 0x1536 <LCD_voidInit+0xa8>
    155c:	14 c0       	rjmp	.+40     	; 0x1586 <LCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    155e:	69 a9       	ldd	r22, Y+49	; 0x31
    1560:	7a a9       	ldd	r23, Y+50	; 0x32
    1562:	8b a9       	ldd	r24, Y+51	; 0x33
    1564:	9c a9       	ldd	r25, Y+52	; 0x34
    1566:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    156a:	dc 01       	movw	r26, r24
    156c:	cb 01       	movw	r24, r22
    156e:	98 ab       	std	Y+48, r25	; 0x30
    1570:	8f a7       	std	Y+47, r24	; 0x2f
    1572:	8f a5       	ldd	r24, Y+47	; 0x2f
    1574:	98 a9       	ldd	r25, Y+48	; 0x30
    1576:	9c a7       	std	Y+44, r25	; 0x2c
    1578:	8b a7       	std	Y+43, r24	; 0x2b
    157a:	8b a5       	ldd	r24, Y+43	; 0x2b
    157c:	9c a5       	ldd	r25, Y+44	; 0x2c
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	f1 f7       	brne	.-4      	; 0x157e <LCD_voidInit+0xf0>
    1582:	9c a7       	std	Y+44, r25	; 0x2c
    1584:	8b a7       	std	Y+43, r24	; 0x2b
	/*wait for more than 30 ms*/
	_delay_ms(40);

	/*Function set command 2 lines , 5*8 font size*/
	LCD_voidSendCommand(0b00111000);
    1586:	88 e3       	ldi	r24, 0x38	; 56
    1588:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>
    158c:	80 e0       	ldi	r24, 0x00	; 0
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	a0 e8       	ldi	r26, 0x80	; 128
    1592:	bf e3       	ldi	r27, 0x3F	; 63
    1594:	8f a3       	std	Y+39, r24	; 0x27
    1596:	98 a7       	std	Y+40, r25	; 0x28
    1598:	a9 a7       	std	Y+41, r26	; 0x29
    159a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    159c:	6f a1       	ldd	r22, Y+39	; 0x27
    159e:	78 a5       	ldd	r23, Y+40	; 0x28
    15a0:	89 a5       	ldd	r24, Y+41	; 0x29
    15a2:	9a a5       	ldd	r25, Y+42	; 0x2a
    15a4:	20 e0       	ldi	r18, 0x00	; 0
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	4a ef       	ldi	r20, 0xFA	; 250
    15aa:	54 e4       	ldi	r21, 0x44	; 68
    15ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15b0:	dc 01       	movw	r26, r24
    15b2:	cb 01       	movw	r24, r22
    15b4:	8b a3       	std	Y+35, r24	; 0x23
    15b6:	9c a3       	std	Y+36, r25	; 0x24
    15b8:	ad a3       	std	Y+37, r26	; 0x25
    15ba:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    15bc:	6b a1       	ldd	r22, Y+35	; 0x23
    15be:	7c a1       	ldd	r23, Y+36	; 0x24
    15c0:	8d a1       	ldd	r24, Y+37	; 0x25
    15c2:	9e a1       	ldd	r25, Y+38	; 0x26
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	40 e8       	ldi	r20, 0x80	; 128
    15ca:	5f e3       	ldi	r21, 0x3F	; 63
    15cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15d0:	88 23       	and	r24, r24
    15d2:	2c f4       	brge	.+10     	; 0x15de <LCD_voidInit+0x150>
		__ticks = 1;
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	9a a3       	std	Y+34, r25	; 0x22
    15da:	89 a3       	std	Y+33, r24	; 0x21
    15dc:	3f c0       	rjmp	.+126    	; 0x165c <LCD_voidInit+0x1ce>
	else if (__tmp > 65535)
    15de:	6b a1       	ldd	r22, Y+35	; 0x23
    15e0:	7c a1       	ldd	r23, Y+36	; 0x24
    15e2:	8d a1       	ldd	r24, Y+37	; 0x25
    15e4:	9e a1       	ldd	r25, Y+38	; 0x26
    15e6:	20 e0       	ldi	r18, 0x00	; 0
    15e8:	3f ef       	ldi	r19, 0xFF	; 255
    15ea:	4f e7       	ldi	r20, 0x7F	; 127
    15ec:	57 e4       	ldi	r21, 0x47	; 71
    15ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15f2:	18 16       	cp	r1, r24
    15f4:	4c f5       	brge	.+82     	; 0x1648 <LCD_voidInit+0x1ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15f6:	6f a1       	ldd	r22, Y+39	; 0x27
    15f8:	78 a5       	ldd	r23, Y+40	; 0x28
    15fa:	89 a5       	ldd	r24, Y+41	; 0x29
    15fc:	9a a5       	ldd	r25, Y+42	; 0x2a
    15fe:	20 e0       	ldi	r18, 0x00	; 0
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	40 e2       	ldi	r20, 0x20	; 32
    1604:	51 e4       	ldi	r21, 0x41	; 65
    1606:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    160a:	dc 01       	movw	r26, r24
    160c:	cb 01       	movw	r24, r22
    160e:	bc 01       	movw	r22, r24
    1610:	cd 01       	movw	r24, r26
    1612:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1616:	dc 01       	movw	r26, r24
    1618:	cb 01       	movw	r24, r22
    161a:	9a a3       	std	Y+34, r25	; 0x22
    161c:	89 a3       	std	Y+33, r24	; 0x21
    161e:	0f c0       	rjmp	.+30     	; 0x163e <LCD_voidInit+0x1b0>
    1620:	88 ec       	ldi	r24, 0xC8	; 200
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	98 a3       	std	Y+32, r25	; 0x20
    1626:	8f 8f       	std	Y+31, r24	; 0x1f
    1628:	8f 8d       	ldd	r24, Y+31	; 0x1f
    162a:	98 a1       	ldd	r25, Y+32	; 0x20
    162c:	01 97       	sbiw	r24, 0x01	; 1
    162e:	f1 f7       	brne	.-4      	; 0x162c <LCD_voidInit+0x19e>
    1630:	98 a3       	std	Y+32, r25	; 0x20
    1632:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1634:	89 a1       	ldd	r24, Y+33	; 0x21
    1636:	9a a1       	ldd	r25, Y+34	; 0x22
    1638:	01 97       	sbiw	r24, 0x01	; 1
    163a:	9a a3       	std	Y+34, r25	; 0x22
    163c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    163e:	89 a1       	ldd	r24, Y+33	; 0x21
    1640:	9a a1       	ldd	r25, Y+34	; 0x22
    1642:	00 97       	sbiw	r24, 0x00	; 0
    1644:	69 f7       	brne	.-38     	; 0x1620 <LCD_voidInit+0x192>
    1646:	14 c0       	rjmp	.+40     	; 0x1670 <LCD_voidInit+0x1e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1648:	6b a1       	ldd	r22, Y+35	; 0x23
    164a:	7c a1       	ldd	r23, Y+36	; 0x24
    164c:	8d a1       	ldd	r24, Y+37	; 0x25
    164e:	9e a1       	ldd	r25, Y+38	; 0x26
    1650:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1654:	dc 01       	movw	r26, r24
    1656:	cb 01       	movw	r24, r22
    1658:	9a a3       	std	Y+34, r25	; 0x22
    165a:	89 a3       	std	Y+33, r24	; 0x21
    165c:	89 a1       	ldd	r24, Y+33	; 0x21
    165e:	9a a1       	ldd	r25, Y+34	; 0x22
    1660:	9e 8f       	std	Y+30, r25	; 0x1e
    1662:	8d 8f       	std	Y+29, r24	; 0x1d
    1664:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1666:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1668:	01 97       	sbiw	r24, 0x01	; 1
    166a:	f1 f7       	brne	.-4      	; 0x1668 <LCD_voidInit+0x1da>
    166c:	9e 8f       	std	Y+30, r25	; 0x1e
    166e:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(1);

	/*Display on off control : display enable , disblay cursor , display blink */
	LCD_voidSendCommand(0b00001100);
    1670:	8c e0       	ldi	r24, 0x0C	; 12
    1672:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	a0 e8       	ldi	r26, 0x80	; 128
    167c:	bf e3       	ldi	r27, 0x3F	; 63
    167e:	89 8f       	std	Y+25, r24	; 0x19
    1680:	9a 8f       	std	Y+26, r25	; 0x1a
    1682:	ab 8f       	std	Y+27, r26	; 0x1b
    1684:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1686:	69 8d       	ldd	r22, Y+25	; 0x19
    1688:	7a 8d       	ldd	r23, Y+26	; 0x1a
    168a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    168c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	4a ef       	ldi	r20, 0xFA	; 250
    1694:	54 e4       	ldi	r21, 0x44	; 68
    1696:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    169a:	dc 01       	movw	r26, r24
    169c:	cb 01       	movw	r24, r22
    169e:	8d 8b       	std	Y+21, r24	; 0x15
    16a0:	9e 8b       	std	Y+22, r25	; 0x16
    16a2:	af 8b       	std	Y+23, r26	; 0x17
    16a4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    16a6:	6d 89       	ldd	r22, Y+21	; 0x15
    16a8:	7e 89       	ldd	r23, Y+22	; 0x16
    16aa:	8f 89       	ldd	r24, Y+23	; 0x17
    16ac:	98 8d       	ldd	r25, Y+24	; 0x18
    16ae:	20 e0       	ldi	r18, 0x00	; 0
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	40 e8       	ldi	r20, 0x80	; 128
    16b4:	5f e3       	ldi	r21, 0x3F	; 63
    16b6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16ba:	88 23       	and	r24, r24
    16bc:	2c f4       	brge	.+10     	; 0x16c8 <LCD_voidInit+0x23a>
		__ticks = 1;
    16be:	81 e0       	ldi	r24, 0x01	; 1
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	9c 8b       	std	Y+20, r25	; 0x14
    16c4:	8b 8b       	std	Y+19, r24	; 0x13
    16c6:	3f c0       	rjmp	.+126    	; 0x1746 <LCD_voidInit+0x2b8>
	else if (__tmp > 65535)
    16c8:	6d 89       	ldd	r22, Y+21	; 0x15
    16ca:	7e 89       	ldd	r23, Y+22	; 0x16
    16cc:	8f 89       	ldd	r24, Y+23	; 0x17
    16ce:	98 8d       	ldd	r25, Y+24	; 0x18
    16d0:	20 e0       	ldi	r18, 0x00	; 0
    16d2:	3f ef       	ldi	r19, 0xFF	; 255
    16d4:	4f e7       	ldi	r20, 0x7F	; 127
    16d6:	57 e4       	ldi	r21, 0x47	; 71
    16d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16dc:	18 16       	cp	r1, r24
    16de:	4c f5       	brge	.+82     	; 0x1732 <LCD_voidInit+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16e0:	69 8d       	ldd	r22, Y+25	; 0x19
    16e2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	40 e2       	ldi	r20, 0x20	; 32
    16ee:	51 e4       	ldi	r21, 0x41	; 65
    16f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16f4:	dc 01       	movw	r26, r24
    16f6:	cb 01       	movw	r24, r22
    16f8:	bc 01       	movw	r22, r24
    16fa:	cd 01       	movw	r24, r26
    16fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1700:	dc 01       	movw	r26, r24
    1702:	cb 01       	movw	r24, r22
    1704:	9c 8b       	std	Y+20, r25	; 0x14
    1706:	8b 8b       	std	Y+19, r24	; 0x13
    1708:	0f c0       	rjmp	.+30     	; 0x1728 <LCD_voidInit+0x29a>
    170a:	88 ec       	ldi	r24, 0xC8	; 200
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	9a 8b       	std	Y+18, r25	; 0x12
    1710:	89 8b       	std	Y+17, r24	; 0x11
    1712:	89 89       	ldd	r24, Y+17	; 0x11
    1714:	9a 89       	ldd	r25, Y+18	; 0x12
    1716:	01 97       	sbiw	r24, 0x01	; 1
    1718:	f1 f7       	brne	.-4      	; 0x1716 <LCD_voidInit+0x288>
    171a:	9a 8b       	std	Y+18, r25	; 0x12
    171c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    171e:	8b 89       	ldd	r24, Y+19	; 0x13
    1720:	9c 89       	ldd	r25, Y+20	; 0x14
    1722:	01 97       	sbiw	r24, 0x01	; 1
    1724:	9c 8b       	std	Y+20, r25	; 0x14
    1726:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1728:	8b 89       	ldd	r24, Y+19	; 0x13
    172a:	9c 89       	ldd	r25, Y+20	; 0x14
    172c:	00 97       	sbiw	r24, 0x00	; 0
    172e:	69 f7       	brne	.-38     	; 0x170a <LCD_voidInit+0x27c>
    1730:	14 c0       	rjmp	.+40     	; 0x175a <LCD_voidInit+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1732:	6d 89       	ldd	r22, Y+21	; 0x15
    1734:	7e 89       	ldd	r23, Y+22	; 0x16
    1736:	8f 89       	ldd	r24, Y+23	; 0x17
    1738:	98 8d       	ldd	r25, Y+24	; 0x18
    173a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    173e:	dc 01       	movw	r26, r24
    1740:	cb 01       	movw	r24, r22
    1742:	9c 8b       	std	Y+20, r25	; 0x14
    1744:	8b 8b       	std	Y+19, r24	; 0x13
    1746:	8b 89       	ldd	r24, Y+19	; 0x13
    1748:	9c 89       	ldd	r25, Y+20	; 0x14
    174a:	98 8b       	std	Y+16, r25	; 0x10
    174c:	8f 87       	std	Y+15, r24	; 0x0f
    174e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1750:	98 89       	ldd	r25, Y+16	; 0x10
    1752:	01 97       	sbiw	r24, 0x01	; 1
    1754:	f1 f7       	brne	.-4      	; 0x1752 <LCD_voidInit+0x2c4>
    1756:	98 8b       	std	Y+16, r25	; 0x10
    1758:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);
	/*Clear display*/
	LCD_voidSendCommand(1);
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>
    1760:	80 e0       	ldi	r24, 0x00	; 0
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	a0 e0       	ldi	r26, 0x00	; 0
    1766:	b0 e4       	ldi	r27, 0x40	; 64
    1768:	8b 87       	std	Y+11, r24	; 0x0b
    176a:	9c 87       	std	Y+12, r25	; 0x0c
    176c:	ad 87       	std	Y+13, r26	; 0x0d
    176e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1770:	6b 85       	ldd	r22, Y+11	; 0x0b
    1772:	7c 85       	ldd	r23, Y+12	; 0x0c
    1774:	8d 85       	ldd	r24, Y+13	; 0x0d
    1776:	9e 85       	ldd	r25, Y+14	; 0x0e
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	4a ef       	ldi	r20, 0xFA	; 250
    177e:	54 e4       	ldi	r21, 0x44	; 68
    1780:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1784:	dc 01       	movw	r26, r24
    1786:	cb 01       	movw	r24, r22
    1788:	8f 83       	std	Y+7, r24	; 0x07
    178a:	98 87       	std	Y+8, r25	; 0x08
    178c:	a9 87       	std	Y+9, r26	; 0x09
    178e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1790:	6f 81       	ldd	r22, Y+7	; 0x07
    1792:	78 85       	ldd	r23, Y+8	; 0x08
    1794:	89 85       	ldd	r24, Y+9	; 0x09
    1796:	9a 85       	ldd	r25, Y+10	; 0x0a
    1798:	20 e0       	ldi	r18, 0x00	; 0
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	40 e8       	ldi	r20, 0x80	; 128
    179e:	5f e3       	ldi	r21, 0x3F	; 63
    17a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17a4:	88 23       	and	r24, r24
    17a6:	2c f4       	brge	.+10     	; 0x17b2 <LCD_voidInit+0x324>
		__ticks = 1;
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	9e 83       	std	Y+6, r25	; 0x06
    17ae:	8d 83       	std	Y+5, r24	; 0x05
    17b0:	3f c0       	rjmp	.+126    	; 0x1830 <LCD_voidInit+0x3a2>
	else if (__tmp > 65535)
    17b2:	6f 81       	ldd	r22, Y+7	; 0x07
    17b4:	78 85       	ldd	r23, Y+8	; 0x08
    17b6:	89 85       	ldd	r24, Y+9	; 0x09
    17b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	3f ef       	ldi	r19, 0xFF	; 255
    17be:	4f e7       	ldi	r20, 0x7F	; 127
    17c0:	57 e4       	ldi	r21, 0x47	; 71
    17c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17c6:	18 16       	cp	r1, r24
    17c8:	4c f5       	brge	.+82     	; 0x181c <LCD_voidInit+0x38e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    17cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    17ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    17d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	40 e2       	ldi	r20, 0x20	; 32
    17d8:	51 e4       	ldi	r21, 0x41	; 65
    17da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	bc 01       	movw	r22, r24
    17e4:	cd 01       	movw	r24, r26
    17e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ea:	dc 01       	movw	r26, r24
    17ec:	cb 01       	movw	r24, r22
    17ee:	9e 83       	std	Y+6, r25	; 0x06
    17f0:	8d 83       	std	Y+5, r24	; 0x05
    17f2:	0f c0       	rjmp	.+30     	; 0x1812 <LCD_voidInit+0x384>
    17f4:	88 ec       	ldi	r24, 0xC8	; 200
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	9c 83       	std	Y+4, r25	; 0x04
    17fa:	8b 83       	std	Y+3, r24	; 0x03
    17fc:	8b 81       	ldd	r24, Y+3	; 0x03
    17fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1800:	01 97       	sbiw	r24, 0x01	; 1
    1802:	f1 f7       	brne	.-4      	; 0x1800 <LCD_voidInit+0x372>
    1804:	9c 83       	std	Y+4, r25	; 0x04
    1806:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1808:	8d 81       	ldd	r24, Y+5	; 0x05
    180a:	9e 81       	ldd	r25, Y+6	; 0x06
    180c:	01 97       	sbiw	r24, 0x01	; 1
    180e:	9e 83       	std	Y+6, r25	; 0x06
    1810:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1812:	8d 81       	ldd	r24, Y+5	; 0x05
    1814:	9e 81       	ldd	r25, Y+6	; 0x06
    1816:	00 97       	sbiw	r24, 0x00	; 0
    1818:	69 f7       	brne	.-38     	; 0x17f4 <LCD_voidInit+0x366>
    181a:	14 c0       	rjmp	.+40     	; 0x1844 <LCD_voidInit+0x3b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    181c:	6f 81       	ldd	r22, Y+7	; 0x07
    181e:	78 85       	ldd	r23, Y+8	; 0x08
    1820:	89 85       	ldd	r24, Y+9	; 0x09
    1822:	9a 85       	ldd	r25, Y+10	; 0x0a
    1824:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1828:	dc 01       	movw	r26, r24
    182a:	cb 01       	movw	r24, r22
    182c:	9e 83       	std	Y+6, r25	; 0x06
    182e:	8d 83       	std	Y+5, r24	; 0x05
    1830:	8d 81       	ldd	r24, Y+5	; 0x05
    1832:	9e 81       	ldd	r25, Y+6	; 0x06
    1834:	9a 83       	std	Y+2, r25	; 0x02
    1836:	89 83       	std	Y+1, r24	; 0x01
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	9a 81       	ldd	r25, Y+2	; 0x02
    183c:	01 97       	sbiw	r24, 0x01	; 1
    183e:	f1 f7       	brne	.-4      	; 0x183c <LCD_voidInit+0x3ae>
    1840:	9a 83       	std	Y+2, r25	; 0x02
    1842:	89 83       	std	Y+1, r24	; 0x01

    _delay_ms(2);

	/*Entry Mode Set*/
	LCD_voidSendCommand(0b00000110);
    1844:	86 e0       	ldi	r24, 0x06	; 6
    1846:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>

}
    184a:	e8 96       	adiw	r28, 0x38	; 56
    184c:	0f b6       	in	r0, 0x3f	; 63
    184e:	f8 94       	cli
    1850:	de bf       	out	0x3e, r29	; 62
    1852:	0f be       	out	0x3f, r0	; 63
    1854:	cd bf       	out	0x3d, r28	; 61
    1856:	cf 91       	pop	r28
    1858:	df 91       	pop	r29
    185a:	08 95       	ret

0000185c <LCD_voidSendString>:

void LCD_voidSendString (const char * Cpy_pcString)
{
    185c:	df 93       	push	r29
    185e:	cf 93       	push	r28
    1860:	00 d0       	rcall	.+0      	; 0x1862 <LCD_voidSendString+0x6>
    1862:	0f 92       	push	r0
    1864:	cd b7       	in	r28, 0x3d	; 61
    1866:	de b7       	in	r29, 0x3e	; 62
    1868:	9b 83       	std	Y+3, r25	; 0x03
    186a:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Counter = 0;
    186c:	19 82       	std	Y+1, r1	; 0x01
    186e:	0e c0       	rjmp	.+28     	; 0x188c <LCD_voidSendString+0x30>
	while (Cpy_pcString[Local_u8Counter]!='\0')
	{
		LCD_voidSendData(Cpy_pcString[Local_u8Counter]);
    1870:	89 81       	ldd	r24, Y+1	; 0x01
    1872:	28 2f       	mov	r18, r24
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	8a 81       	ldd	r24, Y+2	; 0x02
    1878:	9b 81       	ldd	r25, Y+3	; 0x03
    187a:	fc 01       	movw	r30, r24
    187c:	e2 0f       	add	r30, r18
    187e:	f3 1f       	adc	r31, r19
    1880:	80 81       	ld	r24, Z
    1882:	0e 94 a9 09 	call	0x1352	; 0x1352 <LCD_voidSendData>
		Local_u8Counter++;
    1886:	89 81       	ldd	r24, Y+1	; 0x01
    1888:	8f 5f       	subi	r24, 0xFF	; 255
    188a:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_voidSendString (const char * Cpy_pcString)
{
	u8 Local_u8Counter = 0;
	while (Cpy_pcString[Local_u8Counter]!='\0')
    188c:	89 81       	ldd	r24, Y+1	; 0x01
    188e:	28 2f       	mov	r18, r24
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	8a 81       	ldd	r24, Y+2	; 0x02
    1894:	9b 81       	ldd	r25, Y+3	; 0x03
    1896:	fc 01       	movw	r30, r24
    1898:	e2 0f       	add	r30, r18
    189a:	f3 1f       	adc	r31, r19
    189c:	80 81       	ld	r24, Z
    189e:	88 23       	and	r24, r24
    18a0:	39 f7       	brne	.-50     	; 0x1870 <LCD_voidSendString+0x14>
	{
		LCD_voidSendData(Cpy_pcString[Local_u8Counter]);
		Local_u8Counter++;
	}
}
    18a2:	0f 90       	pop	r0
    18a4:	0f 90       	pop	r0
    18a6:	0f 90       	pop	r0
    18a8:	cf 91       	pop	r28
    18aa:	df 91       	pop	r29
    18ac:	08 95       	ret

000018ae <LCD_voidGoToXY>:

void LCD_voidGoToXY(u8 Cpy_u8XPos ,u8 Cpy_u8YPos  )
{
    18ae:	df 93       	push	r29
    18b0:	cf 93       	push	r28
    18b2:	00 d0       	rcall	.+0      	; 0x18b4 <LCD_voidGoToXY+0x6>
    18b4:	0f 92       	push	r0
    18b6:	cd b7       	in	r28, 0x3d	; 61
    18b8:	de b7       	in	r29, 0x3e	; 62
    18ba:	8a 83       	std	Y+2, r24	; 0x02
    18bc:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Address;
	if (Cpy_u8XPos==0)
    18be:	8a 81       	ldd	r24, Y+2	; 0x02
    18c0:	88 23       	and	r24, r24
    18c2:	19 f4       	brne	.+6      	; 0x18ca <LCD_voidGoToXY+0x1c>
	{
		/*Writing in first line*/
		Local_u8Address = Cpy_u8YPos;
    18c4:	8b 81       	ldd	r24, Y+3	; 0x03
    18c6:	89 83       	std	Y+1, r24	; 0x01
    18c8:	06 c0       	rjmp	.+12     	; 0x18d6 <LCD_voidGoToXY+0x28>
	}
	else if (Cpy_u8XPos==1)
    18ca:	8a 81       	ldd	r24, Y+2	; 0x02
    18cc:	81 30       	cpi	r24, 0x01	; 1
    18ce:	19 f4       	brne	.+6      	; 0x18d6 <LCD_voidGoToXY+0x28>
	{
		/*Writing in second line*/
		Local_u8Address = Cpy_u8YPos+0x40;
    18d0:	8b 81       	ldd	r24, Y+3	; 0x03
    18d2:	80 5c       	subi	r24, 0xC0	; 192
    18d4:	89 83       	std	Y+1, r24	; 0x01
	}
	LCD_voidSendCommand(Local_u8Address+128);
    18d6:	89 81       	ldd	r24, Y+1	; 0x01
    18d8:	80 58       	subi	r24, 0x80	; 128
    18da:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>
}
    18de:	0f 90       	pop	r0
    18e0:	0f 90       	pop	r0
    18e2:	0f 90       	pop	r0
    18e4:	cf 91       	pop	r28
    18e6:	df 91       	pop	r29
    18e8:	08 95       	ret

000018ea <LCD_voidWriteSpecialCharacter>:


void LCD_voidWriteSpecialCharacter(u8* Cpy_u8Pattern , u8 Cpy_u8PatternNumber ,u8 Cpy_u8XPos , u8 Cpy_u8YPos)
{
    18ea:	df 93       	push	r29
    18ec:	cf 93       	push	r28
    18ee:	cd b7       	in	r28, 0x3d	; 61
    18f0:	de b7       	in	r29, 0x3e	; 62
    18f2:	27 97       	sbiw	r28, 0x07	; 7
    18f4:	0f b6       	in	r0, 0x3f	; 63
    18f6:	f8 94       	cli
    18f8:	de bf       	out	0x3e, r29	; 62
    18fa:	0f be       	out	0x3f, r0	; 63
    18fc:	cd bf       	out	0x3d, r28	; 61
    18fe:	9c 83       	std	Y+4, r25	; 0x04
    1900:	8b 83       	std	Y+3, r24	; 0x03
    1902:	6d 83       	std	Y+5, r22	; 0x05
    1904:	4e 83       	std	Y+6, r20	; 0x06
    1906:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8CGRAMAddress=0,Local_u8Iterator;
    1908:	1a 82       	std	Y+2, r1	; 0x02
	/*Calculate the CG RAM address whose its block is 8 bytes*/
	Local_u8CGRAMAddress = Cpy_u8PatternNumber*8;
    190a:	8d 81       	ldd	r24, Y+5	; 0x05
    190c:	88 2f       	mov	r24, r24
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	88 0f       	add	r24, r24
    1912:	99 1f       	adc	r25, r25
    1914:	88 0f       	add	r24, r24
    1916:	99 1f       	adc	r25, r25
    1918:	88 0f       	add	r24, r24
    191a:	99 1f       	adc	r25, r25
    191c:	8a 83       	std	Y+2, r24	; 0x02

	/*Send CG RAM address command to LCD , with wetting bit 6 , clearing bit 7*/
	LCD_voidSendCommand(Local_u8CGRAMAddress+64);
    191e:	8a 81       	ldd	r24, Y+2	; 0x02
    1920:	80 5c       	subi	r24, 0xC0	; 192
    1922:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>

	/*Write the pattern into CG RAM*/
	for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1926:	19 82       	std	Y+1, r1	; 0x01
    1928:	0e c0       	rjmp	.+28     	; 0x1946 <LCD_voidWriteSpecialCharacter+0x5c>
	{
		LCD_voidSendData(Cpy_u8Pattern[Local_u8Iterator]);
    192a:	89 81       	ldd	r24, Y+1	; 0x01
    192c:	28 2f       	mov	r18, r24
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	8b 81       	ldd	r24, Y+3	; 0x03
    1932:	9c 81       	ldd	r25, Y+4	; 0x04
    1934:	fc 01       	movw	r30, r24
    1936:	e2 0f       	add	r30, r18
    1938:	f3 1f       	adc	r31, r19
    193a:	80 81       	ld	r24, Z
    193c:	0e 94 a9 09 	call	0x1352	; 0x1352 <LCD_voidSendData>

	/*Send CG RAM address command to LCD , with wetting bit 6 , clearing bit 7*/
	LCD_voidSendCommand(Local_u8CGRAMAddress+64);

	/*Write the pattern into CG RAM*/
	for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1940:	89 81       	ldd	r24, Y+1	; 0x01
    1942:	8f 5f       	subi	r24, 0xFF	; 255
    1944:	89 83       	std	Y+1, r24	; 0x01
    1946:	89 81       	ldd	r24, Y+1	; 0x01
    1948:	88 30       	cpi	r24, 0x08	; 8
    194a:	78 f3       	brcs	.-34     	; 0x192a <LCD_voidWriteSpecialCharacter+0x40>
	{
		LCD_voidSendData(Cpy_u8Pattern[Local_u8Iterator]);
	}
	/*Go to the DD RAM to display the pattern*/
	LCD_voidGoToXY(Cpy_u8XPos,Cpy_u8YPos);
    194c:	8e 81       	ldd	r24, Y+6	; 0x06
    194e:	6f 81       	ldd	r22, Y+7	; 0x07
    1950:	0e 94 57 0c 	call	0x18ae	; 0x18ae <LCD_voidGoToXY>

	/*Display the pattern in the CG RAM */
	LCD_voidSendData(Cpy_u8PatternNumber);
    1954:	8d 81       	ldd	r24, Y+5	; 0x05
    1956:	0e 94 a9 09 	call	0x1352	; 0x1352 <LCD_voidSendData>

}
    195a:	27 96       	adiw	r28, 0x07	; 7
    195c:	0f b6       	in	r0, 0x3f	; 63
    195e:	f8 94       	cli
    1960:	de bf       	out	0x3e, r29	; 62
    1962:	0f be       	out	0x3f, r0	; 63
    1964:	cd bf       	out	0x3d, r28	; 61
    1966:	cf 91       	pop	r28
    1968:	df 91       	pop	r29
    196a:	08 95       	ret

0000196c <LCD_voidClearLCD>:

void LCD_voidClearLCD(void){
    196c:	df 93       	push	r29
    196e:	cf 93       	push	r28
    1970:	cd b7       	in	r28, 0x3d	; 61
    1972:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCommand(0b00000001);
    1974:	81 e0       	ldi	r24, 0x01	; 1
    1976:	0e 94 0b 09 	call	0x1216	; 0x1216 <LCD_voidSendCommand>

}
    197a:	cf 91       	pop	r28
    197c:	df 91       	pop	r29
    197e:	08 95       	ret

00001980 <main>:
#include "DIO_Interface.h"
#include "LCD_Interface.h"
#include "LCD_Cfg.h"

void main (void)
{
    1980:	0f 93       	push	r16
    1982:	1f 93       	push	r17
    1984:	df 93       	push	r29
    1986:	cf 93       	push	r28
    1988:	cd b7       	in	r28, 0x3d	; 61
    198a:	de b7       	in	r29, 0x3e	; 62
    198c:	cb 57       	subi	r28, 0x7B	; 123
    198e:	d1 40       	sbci	r29, 0x01	; 1
    1990:	0f b6       	in	r0, 0x3f	; 63
    1992:	f8 94       	cli
    1994:	de bf       	out	0x3e, r29	; 62
    1996:	0f be       	out	0x3f, r0	; 63
    1998:	cd bf       	out	0x3d, r28	; 61
	DIO_u8SetPortDirection(LCD_DATA_PORT , DIO_PORT_OUTPUT);
    199a:	80 e0       	ldi	r24, 0x00	; 0
    199c:	6f ef       	ldi	r22, 0xFF	; 255
    199e:	0e 94 39 08 	call	0x1072	; 0x1072 <DIO_u8SetPortDirection>

	DIO_u8SetPinDirection(LCD_CTRL_PORT ,LCD_RS_PIN,DIO_OUTPUT );
    19a2:	82 e0       	ldi	r24, 0x02	; 2
    19a4:	60 e0       	ldi	r22, 0x00	; 0
    19a6:	41 e0       	ldi	r20, 0x01	; 1
    19a8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(LCD_CTRL_PORT ,LCD_RW_PIN,DIO_OUTPUT );
    19ac:	82 e0       	ldi	r24, 0x02	; 2
    19ae:	61 e0       	ldi	r22, 0x01	; 1
    19b0:	41 e0       	ldi	r20, 0x01	; 1
    19b2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(LCD_CTRL_PORT ,LCD_E_PIN,DIO_OUTPUT );
    19b6:	82 e0       	ldi	r24, 0x02	; 2
    19b8:	62 e0       	ldi	r22, 0x02	; 2
    19ba:	41 e0       	ldi	r20, 0x01	; 1
    19bc:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8SetPinDirection>

	LCD_voidInit();
    19c0:	0e 94 47 0a 	call	0x148e	; 0x148e <LCD_voidInit>
			0b01110,
			0b10101,
			0b00100,
			0b01010,
			0b10001,
			0b00000};
    19c4:	ce 01       	movw	r24, r28
    19c6:	84 5f       	subi	r24, 0xF4	; 244
    19c8:	9e 4f       	sbci	r25, 0xFE	; 254
    19ca:	cc 5a       	subi	r28, 0xAC	; 172
    19cc:	de 4f       	sbci	r29, 0xFE	; 254
    19ce:	99 83       	std	Y+1, r25	; 0x01
    19d0:	88 83       	st	Y, r24
    19d2:	c4 55       	subi	r28, 0x54	; 84
    19d4:	d1 40       	sbci	r29, 0x01	; 1
    19d6:	87 ef       	ldi	r24, 0xF7	; 247
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	ca 5a       	subi	r28, 0xAA	; 170
    19dc:	de 4f       	sbci	r29, 0xFE	; 254
    19de:	99 83       	std	Y+1, r25	; 0x01
    19e0:	88 83       	st	Y, r24
    19e2:	c6 55       	subi	r28, 0x56	; 86
    19e4:	d1 40       	sbci	r29, 0x01	; 1
    19e6:	98 e0       	ldi	r25, 0x08	; 8
    19e8:	c8 5a       	subi	r28, 0xA8	; 168
    19ea:	de 4f       	sbci	r29, 0xFE	; 254
    19ec:	98 83       	st	Y, r25
    19ee:	c8 55       	subi	r28, 0x58	; 88
    19f0:	d1 40       	sbci	r29, 0x01	; 1
    19f2:	ca 5a       	subi	r28, 0xAA	; 170
    19f4:	de 4f       	sbci	r29, 0xFE	; 254
    19f6:	a8 81       	ld	r26, Y
    19f8:	b9 81       	ldd	r27, Y+1	; 0x01
    19fa:	c6 55       	subi	r28, 0x56	; 86
    19fc:	d1 40       	sbci	r29, 0x01	; 1
    19fe:	0c 90       	ld	r0, X
    1a00:	ca 5a       	subi	r28, 0xAA	; 170
    1a02:	de 4f       	sbci	r29, 0xFE	; 254
    1a04:	e8 81       	ld	r30, Y
    1a06:	f9 81       	ldd	r31, Y+1	; 0x01
    1a08:	c6 55       	subi	r28, 0x56	; 86
    1a0a:	d1 40       	sbci	r29, 0x01	; 1
    1a0c:	31 96       	adiw	r30, 0x01	; 1
    1a0e:	ca 5a       	subi	r28, 0xAA	; 170
    1a10:	de 4f       	sbci	r29, 0xFE	; 254
    1a12:	f9 83       	std	Y+1, r31	; 0x01
    1a14:	e8 83       	st	Y, r30
    1a16:	c6 55       	subi	r28, 0x56	; 86
    1a18:	d1 40       	sbci	r29, 0x01	; 1
    1a1a:	cc 5a       	subi	r28, 0xAC	; 172
    1a1c:	de 4f       	sbci	r29, 0xFE	; 254
    1a1e:	a8 81       	ld	r26, Y
    1a20:	b9 81       	ldd	r27, Y+1	; 0x01
    1a22:	c4 55       	subi	r28, 0x54	; 84
    1a24:	d1 40       	sbci	r29, 0x01	; 1
    1a26:	0c 92       	st	X, r0
    1a28:	cc 5a       	subi	r28, 0xAC	; 172
    1a2a:	de 4f       	sbci	r29, 0xFE	; 254
    1a2c:	e8 81       	ld	r30, Y
    1a2e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a30:	c4 55       	subi	r28, 0x54	; 84
    1a32:	d1 40       	sbci	r29, 0x01	; 1
    1a34:	31 96       	adiw	r30, 0x01	; 1
    1a36:	cc 5a       	subi	r28, 0xAC	; 172
    1a38:	de 4f       	sbci	r29, 0xFE	; 254
    1a3a:	f9 83       	std	Y+1, r31	; 0x01
    1a3c:	e8 83       	st	Y, r30
    1a3e:	c4 55       	subi	r28, 0x54	; 84
    1a40:	d1 40       	sbci	r29, 0x01	; 1
    1a42:	c8 5a       	subi	r28, 0xA8	; 168
    1a44:	de 4f       	sbci	r29, 0xFE	; 254
    1a46:	f8 81       	ld	r31, Y
    1a48:	c8 55       	subi	r28, 0x58	; 88
    1a4a:	d1 40       	sbci	r29, 0x01	; 1
    1a4c:	f1 50       	subi	r31, 0x01	; 1
    1a4e:	c8 5a       	subi	r28, 0xA8	; 168
    1a50:	de 4f       	sbci	r29, 0xFE	; 254
    1a52:	f8 83       	st	Y, r31
    1a54:	c8 55       	subi	r28, 0x58	; 88
    1a56:	d1 40       	sbci	r29, 0x01	; 1
    1a58:	c8 5a       	subi	r28, 0xA8	; 168
    1a5a:	de 4f       	sbci	r29, 0xFE	; 254
    1a5c:	88 81       	ld	r24, Y
    1a5e:	c8 55       	subi	r28, 0x58	; 88
    1a60:	d1 40       	sbci	r29, 0x01	; 1
    1a62:	88 23       	and	r24, r24
    1a64:	31 f6       	brne	.-116    	; 0x19f2 <main+0x72>
			0b00110,
			0b01100,
			0b10100,
			0b00011,
			0b00001,
			0b00000};
    1a66:	ce 01       	movw	r24, r28
    1a68:	8c 5e       	subi	r24, 0xEC	; 236
    1a6a:	9e 4f       	sbci	r25, 0xFE	; 254
    1a6c:	c7 5a       	subi	r28, 0xA7	; 167
    1a6e:	de 4f       	sbci	r29, 0xFE	; 254
    1a70:	99 83       	std	Y+1, r25	; 0x01
    1a72:	88 83       	st	Y, r24
    1a74:	c9 55       	subi	r28, 0x59	; 89
    1a76:	d1 40       	sbci	r29, 0x01	; 1
    1a78:	af ee       	ldi	r26, 0xEF	; 239
    1a7a:	b0 e0       	ldi	r27, 0x00	; 0
    1a7c:	c5 5a       	subi	r28, 0xA5	; 165
    1a7e:	de 4f       	sbci	r29, 0xFE	; 254
    1a80:	b9 83       	std	Y+1, r27	; 0x01
    1a82:	a8 83       	st	Y, r26
    1a84:	cb 55       	subi	r28, 0x5B	; 91
    1a86:	d1 40       	sbci	r29, 0x01	; 1
    1a88:	b8 e0       	ldi	r27, 0x08	; 8
    1a8a:	c3 5a       	subi	r28, 0xA3	; 163
    1a8c:	de 4f       	sbci	r29, 0xFE	; 254
    1a8e:	b8 83       	st	Y, r27
    1a90:	cd 55       	subi	r28, 0x5D	; 93
    1a92:	d1 40       	sbci	r29, 0x01	; 1
    1a94:	c5 5a       	subi	r28, 0xA5	; 165
    1a96:	de 4f       	sbci	r29, 0xFE	; 254
    1a98:	e8 81       	ld	r30, Y
    1a9a:	f9 81       	ldd	r31, Y+1	; 0x01
    1a9c:	cb 55       	subi	r28, 0x5B	; 91
    1a9e:	d1 40       	sbci	r29, 0x01	; 1
    1aa0:	00 80       	ld	r0, Z
    1aa2:	c5 5a       	subi	r28, 0xA5	; 165
    1aa4:	de 4f       	sbci	r29, 0xFE	; 254
    1aa6:	88 81       	ld	r24, Y
    1aa8:	99 81       	ldd	r25, Y+1	; 0x01
    1aaa:	cb 55       	subi	r28, 0x5B	; 91
    1aac:	d1 40       	sbci	r29, 0x01	; 1
    1aae:	01 96       	adiw	r24, 0x01	; 1
    1ab0:	c5 5a       	subi	r28, 0xA5	; 165
    1ab2:	de 4f       	sbci	r29, 0xFE	; 254
    1ab4:	99 83       	std	Y+1, r25	; 0x01
    1ab6:	88 83       	st	Y, r24
    1ab8:	cb 55       	subi	r28, 0x5B	; 91
    1aba:	d1 40       	sbci	r29, 0x01	; 1
    1abc:	c7 5a       	subi	r28, 0xA7	; 167
    1abe:	de 4f       	sbci	r29, 0xFE	; 254
    1ac0:	a8 81       	ld	r26, Y
    1ac2:	b9 81       	ldd	r27, Y+1	; 0x01
    1ac4:	c9 55       	subi	r28, 0x59	; 89
    1ac6:	d1 40       	sbci	r29, 0x01	; 1
    1ac8:	0c 92       	st	X, r0
    1aca:	c7 5a       	subi	r28, 0xA7	; 167
    1acc:	de 4f       	sbci	r29, 0xFE	; 254
    1ace:	e8 81       	ld	r30, Y
    1ad0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ad2:	c9 55       	subi	r28, 0x59	; 89
    1ad4:	d1 40       	sbci	r29, 0x01	; 1
    1ad6:	31 96       	adiw	r30, 0x01	; 1
    1ad8:	c7 5a       	subi	r28, 0xA7	; 167
    1ada:	de 4f       	sbci	r29, 0xFE	; 254
    1adc:	f9 83       	std	Y+1, r31	; 0x01
    1ade:	e8 83       	st	Y, r30
    1ae0:	c9 55       	subi	r28, 0x59	; 89
    1ae2:	d1 40       	sbci	r29, 0x01	; 1
    1ae4:	c3 5a       	subi	r28, 0xA3	; 163
    1ae6:	de 4f       	sbci	r29, 0xFE	; 254
    1ae8:	f8 81       	ld	r31, Y
    1aea:	cd 55       	subi	r28, 0x5D	; 93
    1aec:	d1 40       	sbci	r29, 0x01	; 1
    1aee:	f1 50       	subi	r31, 0x01	; 1
    1af0:	c3 5a       	subi	r28, 0xA3	; 163
    1af2:	de 4f       	sbci	r29, 0xFE	; 254
    1af4:	f8 83       	st	Y, r31
    1af6:	cd 55       	subi	r28, 0x5D	; 93
    1af8:	d1 40       	sbci	r29, 0x01	; 1
    1afa:	c3 5a       	subi	r28, 0xA3	; 163
    1afc:	de 4f       	sbci	r29, 0xFE	; 254
    1afe:	88 81       	ld	r24, Y
    1b00:	cd 55       	subi	r28, 0x5D	; 93
    1b02:	d1 40       	sbci	r29, 0x01	; 1
    1b04:	88 23       	and	r24, r24
    1b06:	31 f6       	brne	.-116    	; 0x1a94 <main+0x114>
			0b00110,
			0b00101,
			0b00100,
			0b01010,
			0b10001,
			0b00000};
    1b08:	ce 01       	movw	r24, r28
    1b0a:	84 5e       	subi	r24, 0xE4	; 228
    1b0c:	9e 4f       	sbci	r25, 0xFE	; 254
    1b0e:	c2 5a       	subi	r28, 0xA2	; 162
    1b10:	de 4f       	sbci	r29, 0xFE	; 254
    1b12:	99 83       	std	Y+1, r25	; 0x01
    1b14:	88 83       	st	Y, r24
    1b16:	ce 55       	subi	r28, 0x5E	; 94
    1b18:	d1 40       	sbci	r29, 0x01	; 1
    1b1a:	a7 ee       	ldi	r26, 0xE7	; 231
    1b1c:	b0 e0       	ldi	r27, 0x00	; 0
    1b1e:	c0 5a       	subi	r28, 0xA0	; 160
    1b20:	de 4f       	sbci	r29, 0xFE	; 254
    1b22:	b9 83       	std	Y+1, r27	; 0x01
    1b24:	a8 83       	st	Y, r26
    1b26:	c0 56       	subi	r28, 0x60	; 96
    1b28:	d1 40       	sbci	r29, 0x01	; 1
    1b2a:	b8 e0       	ldi	r27, 0x08	; 8
    1b2c:	ce 59       	subi	r28, 0x9E	; 158
    1b2e:	de 4f       	sbci	r29, 0xFE	; 254
    1b30:	b8 83       	st	Y, r27
    1b32:	c2 56       	subi	r28, 0x62	; 98
    1b34:	d1 40       	sbci	r29, 0x01	; 1
    1b36:	c0 5a       	subi	r28, 0xA0	; 160
    1b38:	de 4f       	sbci	r29, 0xFE	; 254
    1b3a:	e8 81       	ld	r30, Y
    1b3c:	f9 81       	ldd	r31, Y+1	; 0x01
    1b3e:	c0 56       	subi	r28, 0x60	; 96
    1b40:	d1 40       	sbci	r29, 0x01	; 1
    1b42:	00 80       	ld	r0, Z
    1b44:	c0 5a       	subi	r28, 0xA0	; 160
    1b46:	de 4f       	sbci	r29, 0xFE	; 254
    1b48:	88 81       	ld	r24, Y
    1b4a:	99 81       	ldd	r25, Y+1	; 0x01
    1b4c:	c0 56       	subi	r28, 0x60	; 96
    1b4e:	d1 40       	sbci	r29, 0x01	; 1
    1b50:	01 96       	adiw	r24, 0x01	; 1
    1b52:	c0 5a       	subi	r28, 0xA0	; 160
    1b54:	de 4f       	sbci	r29, 0xFE	; 254
    1b56:	99 83       	std	Y+1, r25	; 0x01
    1b58:	88 83       	st	Y, r24
    1b5a:	c0 56       	subi	r28, 0x60	; 96
    1b5c:	d1 40       	sbci	r29, 0x01	; 1
    1b5e:	c2 5a       	subi	r28, 0xA2	; 162
    1b60:	de 4f       	sbci	r29, 0xFE	; 254
    1b62:	a8 81       	ld	r26, Y
    1b64:	b9 81       	ldd	r27, Y+1	; 0x01
    1b66:	ce 55       	subi	r28, 0x5E	; 94
    1b68:	d1 40       	sbci	r29, 0x01	; 1
    1b6a:	0c 92       	st	X, r0
    1b6c:	c2 5a       	subi	r28, 0xA2	; 162
    1b6e:	de 4f       	sbci	r29, 0xFE	; 254
    1b70:	e8 81       	ld	r30, Y
    1b72:	f9 81       	ldd	r31, Y+1	; 0x01
    1b74:	ce 55       	subi	r28, 0x5E	; 94
    1b76:	d1 40       	sbci	r29, 0x01	; 1
    1b78:	31 96       	adiw	r30, 0x01	; 1
    1b7a:	c2 5a       	subi	r28, 0xA2	; 162
    1b7c:	de 4f       	sbci	r29, 0xFE	; 254
    1b7e:	f9 83       	std	Y+1, r31	; 0x01
    1b80:	e8 83       	st	Y, r30
    1b82:	ce 55       	subi	r28, 0x5E	; 94
    1b84:	d1 40       	sbci	r29, 0x01	; 1
    1b86:	ce 59       	subi	r28, 0x9E	; 158
    1b88:	de 4f       	sbci	r29, 0xFE	; 254
    1b8a:	f8 81       	ld	r31, Y
    1b8c:	c2 56       	subi	r28, 0x62	; 98
    1b8e:	d1 40       	sbci	r29, 0x01	; 1
    1b90:	f1 50       	subi	r31, 0x01	; 1
    1b92:	ce 59       	subi	r28, 0x9E	; 158
    1b94:	de 4f       	sbci	r29, 0xFE	; 254
    1b96:	f8 83       	st	Y, r31
    1b98:	c2 56       	subi	r28, 0x62	; 98
    1b9a:	d1 40       	sbci	r29, 0x01	; 1
    1b9c:	ce 59       	subi	r28, 0x9E	; 158
    1b9e:	de 4f       	sbci	r29, 0xFE	; 254
    1ba0:	88 81       	ld	r24, Y
    1ba2:	c2 56       	subi	r28, 0x62	; 98
    1ba4:	d1 40       	sbci	r29, 0x01	; 1
    1ba6:	88 23       	and	r24, r24
    1ba8:	31 f6       	brne	.-116    	; 0x1b36 <main+0x1b6>
			0b01100,
			0b10101,
			0b00100,
			0b01011,
			0b10001,
			0b00000};
    1baa:	ce 01       	movw	r24, r28
    1bac:	8c 5d       	subi	r24, 0xDC	; 220
    1bae:	9e 4f       	sbci	r25, 0xFE	; 254
    1bb0:	cd 59       	subi	r28, 0x9D	; 157
    1bb2:	de 4f       	sbci	r29, 0xFE	; 254
    1bb4:	99 83       	std	Y+1, r25	; 0x01
    1bb6:	88 83       	st	Y, r24
    1bb8:	c3 56       	subi	r28, 0x63	; 99
    1bba:	d1 40       	sbci	r29, 0x01	; 1
    1bbc:	af ed       	ldi	r26, 0xDF	; 223
    1bbe:	b0 e0       	ldi	r27, 0x00	; 0
    1bc0:	cb 59       	subi	r28, 0x9B	; 155
    1bc2:	de 4f       	sbci	r29, 0xFE	; 254
    1bc4:	b9 83       	std	Y+1, r27	; 0x01
    1bc6:	a8 83       	st	Y, r26
    1bc8:	c5 56       	subi	r28, 0x65	; 101
    1bca:	d1 40       	sbci	r29, 0x01	; 1
    1bcc:	b8 e0       	ldi	r27, 0x08	; 8
    1bce:	c9 59       	subi	r28, 0x99	; 153
    1bd0:	de 4f       	sbci	r29, 0xFE	; 254
    1bd2:	b8 83       	st	Y, r27
    1bd4:	c7 56       	subi	r28, 0x67	; 103
    1bd6:	d1 40       	sbci	r29, 0x01	; 1
    1bd8:	cb 59       	subi	r28, 0x9B	; 155
    1bda:	de 4f       	sbci	r29, 0xFE	; 254
    1bdc:	e8 81       	ld	r30, Y
    1bde:	f9 81       	ldd	r31, Y+1	; 0x01
    1be0:	c5 56       	subi	r28, 0x65	; 101
    1be2:	d1 40       	sbci	r29, 0x01	; 1
    1be4:	00 80       	ld	r0, Z
    1be6:	cb 59       	subi	r28, 0x9B	; 155
    1be8:	de 4f       	sbci	r29, 0xFE	; 254
    1bea:	88 81       	ld	r24, Y
    1bec:	99 81       	ldd	r25, Y+1	; 0x01
    1bee:	c5 56       	subi	r28, 0x65	; 101
    1bf0:	d1 40       	sbci	r29, 0x01	; 1
    1bf2:	01 96       	adiw	r24, 0x01	; 1
    1bf4:	cb 59       	subi	r28, 0x9B	; 155
    1bf6:	de 4f       	sbci	r29, 0xFE	; 254
    1bf8:	99 83       	std	Y+1, r25	; 0x01
    1bfa:	88 83       	st	Y, r24
    1bfc:	c5 56       	subi	r28, 0x65	; 101
    1bfe:	d1 40       	sbci	r29, 0x01	; 1
    1c00:	cd 59       	subi	r28, 0x9D	; 157
    1c02:	de 4f       	sbci	r29, 0xFE	; 254
    1c04:	a8 81       	ld	r26, Y
    1c06:	b9 81       	ldd	r27, Y+1	; 0x01
    1c08:	c3 56       	subi	r28, 0x63	; 99
    1c0a:	d1 40       	sbci	r29, 0x01	; 1
    1c0c:	0c 92       	st	X, r0
    1c0e:	cd 59       	subi	r28, 0x9D	; 157
    1c10:	de 4f       	sbci	r29, 0xFE	; 254
    1c12:	e8 81       	ld	r30, Y
    1c14:	f9 81       	ldd	r31, Y+1	; 0x01
    1c16:	c3 56       	subi	r28, 0x63	; 99
    1c18:	d1 40       	sbci	r29, 0x01	; 1
    1c1a:	31 96       	adiw	r30, 0x01	; 1
    1c1c:	cd 59       	subi	r28, 0x9D	; 157
    1c1e:	de 4f       	sbci	r29, 0xFE	; 254
    1c20:	f9 83       	std	Y+1, r31	; 0x01
    1c22:	e8 83       	st	Y, r30
    1c24:	c3 56       	subi	r28, 0x63	; 99
    1c26:	d1 40       	sbci	r29, 0x01	; 1
    1c28:	c9 59       	subi	r28, 0x99	; 153
    1c2a:	de 4f       	sbci	r29, 0xFE	; 254
    1c2c:	f8 81       	ld	r31, Y
    1c2e:	c7 56       	subi	r28, 0x67	; 103
    1c30:	d1 40       	sbci	r29, 0x01	; 1
    1c32:	f1 50       	subi	r31, 0x01	; 1
    1c34:	c9 59       	subi	r28, 0x99	; 153
    1c36:	de 4f       	sbci	r29, 0xFE	; 254
    1c38:	f8 83       	st	Y, r31
    1c3a:	c7 56       	subi	r28, 0x67	; 103
    1c3c:	d1 40       	sbci	r29, 0x01	; 1
    1c3e:	c9 59       	subi	r28, 0x99	; 153
    1c40:	de 4f       	sbci	r29, 0xFE	; 254
    1c42:	88 81       	ld	r24, Y
    1c44:	c7 56       	subi	r28, 0x67	; 103
    1c46:	d1 40       	sbci	r29, 0x01	; 1
    1c48:	88 23       	and	r24, r24
    1c4a:	31 f6       	brne	.-116    	; 0x1bd8 <main+0x258>
			0b01100,
			0b10100,
			0b00100,
			0b01010,
			0b10010,
			0b00000};
    1c4c:	ce 01       	movw	r24, r28
    1c4e:	84 5d       	subi	r24, 0xD4	; 212
    1c50:	9e 4f       	sbci	r25, 0xFE	; 254
    1c52:	c8 59       	subi	r28, 0x98	; 152
    1c54:	de 4f       	sbci	r29, 0xFE	; 254
    1c56:	99 83       	std	Y+1, r25	; 0x01
    1c58:	88 83       	st	Y, r24
    1c5a:	c8 56       	subi	r28, 0x68	; 104
    1c5c:	d1 40       	sbci	r29, 0x01	; 1
    1c5e:	a7 ed       	ldi	r26, 0xD7	; 215
    1c60:	b0 e0       	ldi	r27, 0x00	; 0
    1c62:	c6 59       	subi	r28, 0x96	; 150
    1c64:	de 4f       	sbci	r29, 0xFE	; 254
    1c66:	b9 83       	std	Y+1, r27	; 0x01
    1c68:	a8 83       	st	Y, r26
    1c6a:	ca 56       	subi	r28, 0x6A	; 106
    1c6c:	d1 40       	sbci	r29, 0x01	; 1
    1c6e:	b8 e0       	ldi	r27, 0x08	; 8
    1c70:	c4 59       	subi	r28, 0x94	; 148
    1c72:	de 4f       	sbci	r29, 0xFE	; 254
    1c74:	b8 83       	st	Y, r27
    1c76:	cc 56       	subi	r28, 0x6C	; 108
    1c78:	d1 40       	sbci	r29, 0x01	; 1
    1c7a:	c6 59       	subi	r28, 0x96	; 150
    1c7c:	de 4f       	sbci	r29, 0xFE	; 254
    1c7e:	e8 81       	ld	r30, Y
    1c80:	f9 81       	ldd	r31, Y+1	; 0x01
    1c82:	ca 56       	subi	r28, 0x6A	; 106
    1c84:	d1 40       	sbci	r29, 0x01	; 1
    1c86:	00 80       	ld	r0, Z
    1c88:	c6 59       	subi	r28, 0x96	; 150
    1c8a:	de 4f       	sbci	r29, 0xFE	; 254
    1c8c:	88 81       	ld	r24, Y
    1c8e:	99 81       	ldd	r25, Y+1	; 0x01
    1c90:	ca 56       	subi	r28, 0x6A	; 106
    1c92:	d1 40       	sbci	r29, 0x01	; 1
    1c94:	01 96       	adiw	r24, 0x01	; 1
    1c96:	c6 59       	subi	r28, 0x96	; 150
    1c98:	de 4f       	sbci	r29, 0xFE	; 254
    1c9a:	99 83       	std	Y+1, r25	; 0x01
    1c9c:	88 83       	st	Y, r24
    1c9e:	ca 56       	subi	r28, 0x6A	; 106
    1ca0:	d1 40       	sbci	r29, 0x01	; 1
    1ca2:	c8 59       	subi	r28, 0x98	; 152
    1ca4:	de 4f       	sbci	r29, 0xFE	; 254
    1ca6:	a8 81       	ld	r26, Y
    1ca8:	b9 81       	ldd	r27, Y+1	; 0x01
    1caa:	c8 56       	subi	r28, 0x68	; 104
    1cac:	d1 40       	sbci	r29, 0x01	; 1
    1cae:	0c 92       	st	X, r0
    1cb0:	c8 59       	subi	r28, 0x98	; 152
    1cb2:	de 4f       	sbci	r29, 0xFE	; 254
    1cb4:	e8 81       	ld	r30, Y
    1cb6:	f9 81       	ldd	r31, Y+1	; 0x01
    1cb8:	c8 56       	subi	r28, 0x68	; 104
    1cba:	d1 40       	sbci	r29, 0x01	; 1
    1cbc:	31 96       	adiw	r30, 0x01	; 1
    1cbe:	c8 59       	subi	r28, 0x98	; 152
    1cc0:	de 4f       	sbci	r29, 0xFE	; 254
    1cc2:	f9 83       	std	Y+1, r31	; 0x01
    1cc4:	e8 83       	st	Y, r30
    1cc6:	c8 56       	subi	r28, 0x68	; 104
    1cc8:	d1 40       	sbci	r29, 0x01	; 1
    1cca:	c4 59       	subi	r28, 0x94	; 148
    1ccc:	de 4f       	sbci	r29, 0xFE	; 254
    1cce:	f8 81       	ld	r31, Y
    1cd0:	cc 56       	subi	r28, 0x6C	; 108
    1cd2:	d1 40       	sbci	r29, 0x01	; 1
    1cd4:	f1 50       	subi	r31, 0x01	; 1
    1cd6:	c4 59       	subi	r28, 0x94	; 148
    1cd8:	de 4f       	sbci	r29, 0xFE	; 254
    1cda:	f8 83       	st	Y, r31
    1cdc:	cc 56       	subi	r28, 0x6C	; 108
    1cde:	d1 40       	sbci	r29, 0x01	; 1
    1ce0:	c4 59       	subi	r28, 0x94	; 148
    1ce2:	de 4f       	sbci	r29, 0xFE	; 254
    1ce4:	88 81       	ld	r24, Y
    1ce6:	cc 56       	subi	r28, 0x6C	; 108
    1ce8:	d1 40       	sbci	r29, 0x01	; 1
    1cea:	88 23       	and	r24, r24
    1cec:	31 f6       	brne	.-116    	; 0x1c7a <main+0x2fa>
			0b00000,
			0b11111,
			0b11000,
			0b10000,
			0b00000,
			0b00000};
    1cee:	ce 01       	movw	r24, r28
    1cf0:	8c 5c       	subi	r24, 0xCC	; 204
    1cf2:	9e 4f       	sbci	r25, 0xFE	; 254
    1cf4:	c3 59       	subi	r28, 0x93	; 147
    1cf6:	de 4f       	sbci	r29, 0xFE	; 254
    1cf8:	99 83       	std	Y+1, r25	; 0x01
    1cfa:	88 83       	st	Y, r24
    1cfc:	cd 56       	subi	r28, 0x6D	; 109
    1cfe:	d1 40       	sbci	r29, 0x01	; 1
    1d00:	af ec       	ldi	r26, 0xCF	; 207
    1d02:	b0 e0       	ldi	r27, 0x00	; 0
    1d04:	c1 59       	subi	r28, 0x91	; 145
    1d06:	de 4f       	sbci	r29, 0xFE	; 254
    1d08:	b9 83       	std	Y+1, r27	; 0x01
    1d0a:	a8 83       	st	Y, r26
    1d0c:	cf 56       	subi	r28, 0x6F	; 111
    1d0e:	d1 40       	sbci	r29, 0x01	; 1
    1d10:	b8 e0       	ldi	r27, 0x08	; 8
    1d12:	cf 58       	subi	r28, 0x8F	; 143
    1d14:	de 4f       	sbci	r29, 0xFE	; 254
    1d16:	b8 83       	st	Y, r27
    1d18:	c1 57       	subi	r28, 0x71	; 113
    1d1a:	d1 40       	sbci	r29, 0x01	; 1
    1d1c:	c1 59       	subi	r28, 0x91	; 145
    1d1e:	de 4f       	sbci	r29, 0xFE	; 254
    1d20:	e8 81       	ld	r30, Y
    1d22:	f9 81       	ldd	r31, Y+1	; 0x01
    1d24:	cf 56       	subi	r28, 0x6F	; 111
    1d26:	d1 40       	sbci	r29, 0x01	; 1
    1d28:	00 80       	ld	r0, Z
    1d2a:	c1 59       	subi	r28, 0x91	; 145
    1d2c:	de 4f       	sbci	r29, 0xFE	; 254
    1d2e:	88 81       	ld	r24, Y
    1d30:	99 81       	ldd	r25, Y+1	; 0x01
    1d32:	cf 56       	subi	r28, 0x6F	; 111
    1d34:	d1 40       	sbci	r29, 0x01	; 1
    1d36:	01 96       	adiw	r24, 0x01	; 1
    1d38:	c1 59       	subi	r28, 0x91	; 145
    1d3a:	de 4f       	sbci	r29, 0xFE	; 254
    1d3c:	99 83       	std	Y+1, r25	; 0x01
    1d3e:	88 83       	st	Y, r24
    1d40:	cf 56       	subi	r28, 0x6F	; 111
    1d42:	d1 40       	sbci	r29, 0x01	; 1
    1d44:	c3 59       	subi	r28, 0x93	; 147
    1d46:	de 4f       	sbci	r29, 0xFE	; 254
    1d48:	a8 81       	ld	r26, Y
    1d4a:	b9 81       	ldd	r27, Y+1	; 0x01
    1d4c:	cd 56       	subi	r28, 0x6D	; 109
    1d4e:	d1 40       	sbci	r29, 0x01	; 1
    1d50:	0c 92       	st	X, r0
    1d52:	c3 59       	subi	r28, 0x93	; 147
    1d54:	de 4f       	sbci	r29, 0xFE	; 254
    1d56:	e8 81       	ld	r30, Y
    1d58:	f9 81       	ldd	r31, Y+1	; 0x01
    1d5a:	cd 56       	subi	r28, 0x6D	; 109
    1d5c:	d1 40       	sbci	r29, 0x01	; 1
    1d5e:	31 96       	adiw	r30, 0x01	; 1
    1d60:	c3 59       	subi	r28, 0x93	; 147
    1d62:	de 4f       	sbci	r29, 0xFE	; 254
    1d64:	f9 83       	std	Y+1, r31	; 0x01
    1d66:	e8 83       	st	Y, r30
    1d68:	cd 56       	subi	r28, 0x6D	; 109
    1d6a:	d1 40       	sbci	r29, 0x01	; 1
    1d6c:	cf 58       	subi	r28, 0x8F	; 143
    1d6e:	de 4f       	sbci	r29, 0xFE	; 254
    1d70:	f8 81       	ld	r31, Y
    1d72:	c1 57       	subi	r28, 0x71	; 113
    1d74:	d1 40       	sbci	r29, 0x01	; 1
    1d76:	f1 50       	subi	r31, 0x01	; 1
    1d78:	cf 58       	subi	r28, 0x8F	; 143
    1d7a:	de 4f       	sbci	r29, 0xFE	; 254
    1d7c:	f8 83       	st	Y, r31
    1d7e:	c1 57       	subi	r28, 0x71	; 113
    1d80:	d1 40       	sbci	r29, 0x01	; 1
    1d82:	cf 58       	subi	r28, 0x8F	; 143
    1d84:	de 4f       	sbci	r29, 0xFE	; 254
    1d86:	88 81       	ld	r24, Y
    1d88:	c1 57       	subi	r28, 0x71	; 113
    1d8a:	d1 40       	sbci	r29, 0x01	; 1
    1d8c:	88 23       	and	r24, r24
    1d8e:	31 f6       	brne	.-116    	; 0x1d1c <main+0x39c>
			0b10010,
			0b01111,
			0b10010,
			0b00000,
			0b00000,
			0b00000};
    1d90:	ce 01       	movw	r24, r28
    1d92:	84 5c       	subi	r24, 0xC4	; 196
    1d94:	9e 4f       	sbci	r25, 0xFE	; 254
    1d96:	ce 58       	subi	r28, 0x8E	; 142
    1d98:	de 4f       	sbci	r29, 0xFE	; 254
    1d9a:	99 83       	std	Y+1, r25	; 0x01
    1d9c:	88 83       	st	Y, r24
    1d9e:	c2 57       	subi	r28, 0x72	; 114
    1da0:	d1 40       	sbci	r29, 0x01	; 1
    1da2:	a7 ec       	ldi	r26, 0xC7	; 199
    1da4:	b0 e0       	ldi	r27, 0x00	; 0
    1da6:	cc 58       	subi	r28, 0x8C	; 140
    1da8:	de 4f       	sbci	r29, 0xFE	; 254
    1daa:	b9 83       	std	Y+1, r27	; 0x01
    1dac:	a8 83       	st	Y, r26
    1dae:	c4 57       	subi	r28, 0x74	; 116
    1db0:	d1 40       	sbci	r29, 0x01	; 1
    1db2:	b8 e0       	ldi	r27, 0x08	; 8
    1db4:	ca 58       	subi	r28, 0x8A	; 138
    1db6:	de 4f       	sbci	r29, 0xFE	; 254
    1db8:	b8 83       	st	Y, r27
    1dba:	c6 57       	subi	r28, 0x76	; 118
    1dbc:	d1 40       	sbci	r29, 0x01	; 1
    1dbe:	cc 58       	subi	r28, 0x8C	; 140
    1dc0:	de 4f       	sbci	r29, 0xFE	; 254
    1dc2:	e8 81       	ld	r30, Y
    1dc4:	f9 81       	ldd	r31, Y+1	; 0x01
    1dc6:	c4 57       	subi	r28, 0x74	; 116
    1dc8:	d1 40       	sbci	r29, 0x01	; 1
    1dca:	00 80       	ld	r0, Z
    1dcc:	cc 58       	subi	r28, 0x8C	; 140
    1dce:	de 4f       	sbci	r29, 0xFE	; 254
    1dd0:	88 81       	ld	r24, Y
    1dd2:	99 81       	ldd	r25, Y+1	; 0x01
    1dd4:	c4 57       	subi	r28, 0x74	; 116
    1dd6:	d1 40       	sbci	r29, 0x01	; 1
    1dd8:	01 96       	adiw	r24, 0x01	; 1
    1dda:	cc 58       	subi	r28, 0x8C	; 140
    1ddc:	de 4f       	sbci	r29, 0xFE	; 254
    1dde:	99 83       	std	Y+1, r25	; 0x01
    1de0:	88 83       	st	Y, r24
    1de2:	c4 57       	subi	r28, 0x74	; 116
    1de4:	d1 40       	sbci	r29, 0x01	; 1
    1de6:	ce 58       	subi	r28, 0x8E	; 142
    1de8:	de 4f       	sbci	r29, 0xFE	; 254
    1dea:	a8 81       	ld	r26, Y
    1dec:	b9 81       	ldd	r27, Y+1	; 0x01
    1dee:	c2 57       	subi	r28, 0x72	; 114
    1df0:	d1 40       	sbci	r29, 0x01	; 1
    1df2:	0c 92       	st	X, r0
    1df4:	ce 58       	subi	r28, 0x8E	; 142
    1df6:	de 4f       	sbci	r29, 0xFE	; 254
    1df8:	e8 81       	ld	r30, Y
    1dfa:	f9 81       	ldd	r31, Y+1	; 0x01
    1dfc:	c2 57       	subi	r28, 0x72	; 114
    1dfe:	d1 40       	sbci	r29, 0x01	; 1
    1e00:	31 96       	adiw	r30, 0x01	; 1
    1e02:	ce 58       	subi	r28, 0x8E	; 142
    1e04:	de 4f       	sbci	r29, 0xFE	; 254
    1e06:	f9 83       	std	Y+1, r31	; 0x01
    1e08:	e8 83       	st	Y, r30
    1e0a:	c2 57       	subi	r28, 0x72	; 114
    1e0c:	d1 40       	sbci	r29, 0x01	; 1
    1e0e:	ca 58       	subi	r28, 0x8A	; 138
    1e10:	de 4f       	sbci	r29, 0xFE	; 254
    1e12:	f8 81       	ld	r31, Y
    1e14:	c6 57       	subi	r28, 0x76	; 118
    1e16:	d1 40       	sbci	r29, 0x01	; 1
    1e18:	f1 50       	subi	r31, 0x01	; 1
    1e1a:	ca 58       	subi	r28, 0x8A	; 138
    1e1c:	de 4f       	sbci	r29, 0xFE	; 254
    1e1e:	f8 83       	st	Y, r31
    1e20:	c6 57       	subi	r28, 0x76	; 118
    1e22:	d1 40       	sbci	r29, 0x01	; 1
    1e24:	ca 58       	subi	r28, 0x8A	; 138
    1e26:	de 4f       	sbci	r29, 0xFE	; 254
    1e28:	88 81       	ld	r24, Y
    1e2a:	c6 57       	subi	r28, 0x76	; 118
    1e2c:	d1 40       	sbci	r29, 0x01	; 1
    1e2e:	88 23       	and	r24, r24
    1e30:	31 f6       	brne	.-116    	; 0x1dbe <main+0x43e>
			0b00000,
			0b01100,
			0b00000,
			0b00000,
			0b00000,
			0b00000};
    1e32:	ce 01       	movw	r24, r28
    1e34:	8c 5b       	subi	r24, 0xBC	; 188
    1e36:	9e 4f       	sbci	r25, 0xFE	; 254
    1e38:	28 e0       	ldi	r18, 0x08	; 8
    1e3a:	fc 01       	movw	r30, r24
    1e3c:	df 01       	movw	r26, r30
    1e3e:	82 2f       	mov	r24, r18
    1e40:	1d 92       	st	X+, r1
    1e42:	8a 95       	dec	r24
    1e44:	e9 f7       	brne	.-6      	; 0x1e40 <main+0x4c0>
    1e46:	fe 01       	movw	r30, r28
    1e48:	ec 5b       	subi	r30, 0xBC	; 188
    1e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e4c:	8c e0       	ldi	r24, 0x0C	; 12
    1e4e:	83 83       	std	Z+3, r24	; 0x03
			0b11110,
			0b00110,
			0b00100,
			0b01010,
			0b01010,
			0b00000};
    1e50:	ce 01       	movw	r24, r28
    1e52:	84 5b       	subi	r24, 0xB4	; 180
    1e54:	9e 4f       	sbci	r25, 0xFE	; 254
    1e56:	c9 58       	subi	r28, 0x89	; 137
    1e58:	de 4f       	sbci	r29, 0xFE	; 254
    1e5a:	99 83       	std	Y+1, r25	; 0x01
    1e5c:	88 83       	st	Y, r24
    1e5e:	c7 57       	subi	r28, 0x77	; 119
    1e60:	d1 40       	sbci	r29, 0x01	; 1
    1e62:	af eb       	ldi	r26, 0xBF	; 191
    1e64:	b0 e0       	ldi	r27, 0x00	; 0
    1e66:	c7 58       	subi	r28, 0x87	; 135
    1e68:	de 4f       	sbci	r29, 0xFE	; 254
    1e6a:	b9 83       	std	Y+1, r27	; 0x01
    1e6c:	a8 83       	st	Y, r26
    1e6e:	c9 57       	subi	r28, 0x79	; 121
    1e70:	d1 40       	sbci	r29, 0x01	; 1
    1e72:	b8 e0       	ldi	r27, 0x08	; 8
    1e74:	c5 58       	subi	r28, 0x85	; 133
    1e76:	de 4f       	sbci	r29, 0xFE	; 254
    1e78:	b8 83       	st	Y, r27
    1e7a:	cb 57       	subi	r28, 0x7B	; 123
    1e7c:	d1 40       	sbci	r29, 0x01	; 1
    1e7e:	c7 58       	subi	r28, 0x87	; 135
    1e80:	de 4f       	sbci	r29, 0xFE	; 254
    1e82:	e8 81       	ld	r30, Y
    1e84:	f9 81       	ldd	r31, Y+1	; 0x01
    1e86:	c9 57       	subi	r28, 0x79	; 121
    1e88:	d1 40       	sbci	r29, 0x01	; 1
    1e8a:	00 80       	ld	r0, Z
    1e8c:	c7 58       	subi	r28, 0x87	; 135
    1e8e:	de 4f       	sbci	r29, 0xFE	; 254
    1e90:	88 81       	ld	r24, Y
    1e92:	99 81       	ldd	r25, Y+1	; 0x01
    1e94:	c9 57       	subi	r28, 0x79	; 121
    1e96:	d1 40       	sbci	r29, 0x01	; 1
    1e98:	01 96       	adiw	r24, 0x01	; 1
    1e9a:	c7 58       	subi	r28, 0x87	; 135
    1e9c:	de 4f       	sbci	r29, 0xFE	; 254
    1e9e:	99 83       	std	Y+1, r25	; 0x01
    1ea0:	88 83       	st	Y, r24
    1ea2:	c9 57       	subi	r28, 0x79	; 121
    1ea4:	d1 40       	sbci	r29, 0x01	; 1
    1ea6:	c9 58       	subi	r28, 0x89	; 137
    1ea8:	de 4f       	sbci	r29, 0xFE	; 254
    1eaa:	a8 81       	ld	r26, Y
    1eac:	b9 81       	ldd	r27, Y+1	; 0x01
    1eae:	c7 57       	subi	r28, 0x77	; 119
    1eb0:	d1 40       	sbci	r29, 0x01	; 1
    1eb2:	0c 92       	st	X, r0
    1eb4:	c9 58       	subi	r28, 0x89	; 137
    1eb6:	de 4f       	sbci	r29, 0xFE	; 254
    1eb8:	e8 81       	ld	r30, Y
    1eba:	f9 81       	ldd	r31, Y+1	; 0x01
    1ebc:	c7 57       	subi	r28, 0x77	; 119
    1ebe:	d1 40       	sbci	r29, 0x01	; 1
    1ec0:	31 96       	adiw	r30, 0x01	; 1
    1ec2:	c9 58       	subi	r28, 0x89	; 137
    1ec4:	de 4f       	sbci	r29, 0xFE	; 254
    1ec6:	f9 83       	std	Y+1, r31	; 0x01
    1ec8:	e8 83       	st	Y, r30
    1eca:	c7 57       	subi	r28, 0x77	; 119
    1ecc:	d1 40       	sbci	r29, 0x01	; 1
    1ece:	c5 58       	subi	r28, 0x85	; 133
    1ed0:	de 4f       	sbci	r29, 0xFE	; 254
    1ed2:	f8 81       	ld	r31, Y
    1ed4:	cb 57       	subi	r28, 0x7B	; 123
    1ed6:	d1 40       	sbci	r29, 0x01	; 1
    1ed8:	f1 50       	subi	r31, 0x01	; 1
    1eda:	c5 58       	subi	r28, 0x85	; 133
    1edc:	de 4f       	sbci	r29, 0xFE	; 254
    1ede:	f8 83       	st	Y, r31
    1ee0:	cb 57       	subi	r28, 0x7B	; 123
    1ee2:	d1 40       	sbci	r29, 0x01	; 1
    1ee4:	c5 58       	subi	r28, 0x85	; 133
    1ee6:	de 4f       	sbci	r29, 0xFE	; 254
    1ee8:	88 81       	ld	r24, Y
    1eea:	cb 57       	subi	r28, 0x7B	; 123
    1eec:	d1 40       	sbci	r29, 0x01	; 1
    1eee:	88 23       	and	r24, r24
    1ef0:	31 f6       	brne	.-116    	; 0x1e7e <main+0x4fe>
    1ef2:	fe 01       	movw	r30, r28
    1ef4:	e9 5f       	subi	r30, 0xF9	; 249
    1ef6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	a8 ec       	ldi	r26, 0xC8	; 200
    1efe:	b3 e4       	ldi	r27, 0x43	; 67
    1f00:	80 83       	st	Z, r24
    1f02:	91 83       	std	Z+1, r25	; 0x01
    1f04:	a2 83       	std	Z+2, r26	; 0x02
    1f06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f08:	8e 01       	movw	r16, r28
    1f0a:	0d 5f       	subi	r16, 0xFD	; 253
    1f0c:	1e 4f       	sbci	r17, 0xFE	; 254
    1f0e:	fe 01       	movw	r30, r28
    1f10:	e9 5f       	subi	r30, 0xF9	; 249
    1f12:	fe 4f       	sbci	r31, 0xFE	; 254
    1f14:	60 81       	ld	r22, Z
    1f16:	71 81       	ldd	r23, Z+1	; 0x01
    1f18:	82 81       	ldd	r24, Z+2	; 0x02
    1f1a:	93 81       	ldd	r25, Z+3	; 0x03
    1f1c:	20 e0       	ldi	r18, 0x00	; 0
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	4a ef       	ldi	r20, 0xFA	; 250
    1f22:	54 e4       	ldi	r21, 0x44	; 68
    1f24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f28:	dc 01       	movw	r26, r24
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	f8 01       	movw	r30, r16
    1f2e:	80 83       	st	Z, r24
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	a2 83       	std	Z+2, r26	; 0x02
    1f34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f36:	fe 01       	movw	r30, r28
    1f38:	ed 5f       	subi	r30, 0xFD	; 253
    1f3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f3c:	60 81       	ld	r22, Z
    1f3e:	71 81       	ldd	r23, Z+1	; 0x01
    1f40:	82 81       	ldd	r24, Z+2	; 0x02
    1f42:	93 81       	ldd	r25, Z+3	; 0x03
    1f44:	20 e0       	ldi	r18, 0x00	; 0
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	40 e8       	ldi	r20, 0x80	; 128
    1f4a:	5f e3       	ldi	r21, 0x3F	; 63
    1f4c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f50:	88 23       	and	r24, r24
    1f52:	44 f4       	brge	.+16     	; 0x1f64 <main+0x5e4>
		__ticks = 1;
    1f54:	fe 01       	movw	r30, r28
    1f56:	ef 5f       	subi	r30, 0xFF	; 255
    1f58:	fe 4f       	sbci	r31, 0xFE	; 254
    1f5a:	81 e0       	ldi	r24, 0x01	; 1
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	91 83       	std	Z+1, r25	; 0x01
    1f60:	80 83       	st	Z, r24
    1f62:	64 c0       	rjmp	.+200    	; 0x202c <main+0x6ac>
	else if (__tmp > 65535)
    1f64:	fe 01       	movw	r30, r28
    1f66:	ed 5f       	subi	r30, 0xFD	; 253
    1f68:	fe 4f       	sbci	r31, 0xFE	; 254
    1f6a:	60 81       	ld	r22, Z
    1f6c:	71 81       	ldd	r23, Z+1	; 0x01
    1f6e:	82 81       	ldd	r24, Z+2	; 0x02
    1f70:	93 81       	ldd	r25, Z+3	; 0x03
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	3f ef       	ldi	r19, 0xFF	; 255
    1f76:	4f e7       	ldi	r20, 0x7F	; 127
    1f78:	57 e4       	ldi	r21, 0x47	; 71
    1f7a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f7e:	18 16       	cp	r1, r24
    1f80:	0c f0       	brlt	.+2      	; 0x1f84 <main+0x604>
    1f82:	43 c0       	rjmp	.+134    	; 0x200a <main+0x68a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f84:	fe 01       	movw	r30, r28
    1f86:	e9 5f       	subi	r30, 0xF9	; 249
    1f88:	fe 4f       	sbci	r31, 0xFE	; 254
    1f8a:	60 81       	ld	r22, Z
    1f8c:	71 81       	ldd	r23, Z+1	; 0x01
    1f8e:	82 81       	ldd	r24, Z+2	; 0x02
    1f90:	93 81       	ldd	r25, Z+3	; 0x03
    1f92:	20 e0       	ldi	r18, 0x00	; 0
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	40 e2       	ldi	r20, 0x20	; 32
    1f98:	51 e4       	ldi	r21, 0x41	; 65
    1f9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f9e:	dc 01       	movw	r26, r24
    1fa0:	cb 01       	movw	r24, r22
    1fa2:	8e 01       	movw	r16, r28
    1fa4:	0f 5f       	subi	r16, 0xFF	; 255
    1fa6:	1e 4f       	sbci	r17, 0xFE	; 254
    1fa8:	bc 01       	movw	r22, r24
    1faa:	cd 01       	movw	r24, r26
    1fac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	cb 01       	movw	r24, r22
    1fb4:	f8 01       	movw	r30, r16
    1fb6:	91 83       	std	Z+1, r25	; 0x01
    1fb8:	80 83       	st	Z, r24
    1fba:	1f c0       	rjmp	.+62     	; 0x1ffa <main+0x67a>
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	e1 50       	subi	r30, 0x01	; 1
    1fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc2:	88 ec       	ldi	r24, 0xC8	; 200
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	91 83       	std	Z+1, r25	; 0x01
    1fc8:	80 83       	st	Z, r24
    1fca:	fe 01       	movw	r30, r28
    1fcc:	e1 50       	subi	r30, 0x01	; 1
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	80 81       	ld	r24, Z
    1fd2:	91 81       	ldd	r25, Z+1	; 0x01
    1fd4:	01 97       	sbiw	r24, 0x01	; 1
    1fd6:	f1 f7       	brne	.-4      	; 0x1fd4 <main+0x654>
    1fd8:	fe 01       	movw	r30, r28
    1fda:	e1 50       	subi	r30, 0x01	; 1
    1fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fde:	91 83       	std	Z+1, r25	; 0x01
    1fe0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fe2:	de 01       	movw	r26, r28
    1fe4:	af 5f       	subi	r26, 0xFF	; 255
    1fe6:	be 4f       	sbci	r27, 0xFE	; 254
    1fe8:	fe 01       	movw	r30, r28
    1fea:	ef 5f       	subi	r30, 0xFF	; 255
    1fec:	fe 4f       	sbci	r31, 0xFE	; 254
    1fee:	80 81       	ld	r24, Z
    1ff0:	91 81       	ldd	r25, Z+1	; 0x01
    1ff2:	01 97       	sbiw	r24, 0x01	; 1
    1ff4:	11 96       	adiw	r26, 0x01	; 1
    1ff6:	9c 93       	st	X, r25
    1ff8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ffa:	fe 01       	movw	r30, r28
    1ffc:	ef 5f       	subi	r30, 0xFF	; 255
    1ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    2000:	80 81       	ld	r24, Z
    2002:	91 81       	ldd	r25, Z+1	; 0x01
    2004:	00 97       	sbiw	r24, 0x00	; 0
    2006:	d1 f6       	brne	.-76     	; 0x1fbc <main+0x63c>
    2008:	27 c0       	rjmp	.+78     	; 0x2058 <main+0x6d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    200a:	8e 01       	movw	r16, r28
    200c:	0f 5f       	subi	r16, 0xFF	; 255
    200e:	1e 4f       	sbci	r17, 0xFE	; 254
    2010:	fe 01       	movw	r30, r28
    2012:	ed 5f       	subi	r30, 0xFD	; 253
    2014:	fe 4f       	sbci	r31, 0xFE	; 254
    2016:	60 81       	ld	r22, Z
    2018:	71 81       	ldd	r23, Z+1	; 0x01
    201a:	82 81       	ldd	r24, Z+2	; 0x02
    201c:	93 81       	ldd	r25, Z+3	; 0x03
    201e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2022:	dc 01       	movw	r26, r24
    2024:	cb 01       	movw	r24, r22
    2026:	f8 01       	movw	r30, r16
    2028:	91 83       	std	Z+1, r25	; 0x01
    202a:	80 83       	st	Z, r24
    202c:	de 01       	movw	r26, r28
    202e:	a3 50       	subi	r26, 0x03	; 3
    2030:	bf 4f       	sbci	r27, 0xFF	; 255
    2032:	fe 01       	movw	r30, r28
    2034:	ef 5f       	subi	r30, 0xFF	; 255
    2036:	fe 4f       	sbci	r31, 0xFE	; 254
    2038:	80 81       	ld	r24, Z
    203a:	91 81       	ldd	r25, Z+1	; 0x01
    203c:	8d 93       	st	X+, r24
    203e:	9c 93       	st	X, r25
    2040:	fe 01       	movw	r30, r28
    2042:	e3 50       	subi	r30, 0x03	; 3
    2044:	ff 4f       	sbci	r31, 0xFF	; 255
    2046:	80 81       	ld	r24, Z
    2048:	91 81       	ldd	r25, Z+1	; 0x01
    204a:	01 97       	sbiw	r24, 0x01	; 1
    204c:	f1 f7       	brne	.-4      	; 0x204a <main+0x6ca>
    204e:	fe 01       	movw	r30, r28
    2050:	e3 50       	subi	r30, 0x03	; 3
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	91 83       	std	Z+1, r25	; 0x01
    2056:	80 83       	st	Z, r24


	while(1)
	{
		_delay_ms(400);
		LCD_voidGoToXY(0,0);
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	60 e0       	ldi	r22, 0x00	; 0
    205c:	0e 94 57 0c 	call	0x18ae	; 0x18ae <LCD_voidGoToXY>
		LCD_voidSendString("Hello I am Hskaa");
    2060:	80 e6       	ldi	r24, 0x60	; 96
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	0e 94 2e 0c 	call	0x185c	; 0x185c <LCD_voidSendString>
		LCD_voidWriteSpecialCharacter(ARR_u8FristArabicLetter,1,1,0);
    2068:	ce 01       	movw	r24, r28
    206a:	84 5f       	subi	r24, 0xF4	; 244
    206c:	9e 4f       	sbci	r25, 0xFE	; 254
    206e:	61 e0       	ldi	r22, 0x01	; 1
    2070:	41 e0       	ldi	r20, 0x01	; 1
    2072:	20 e0       	ldi	r18, 0x00	; 0
    2074:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    2078:	fe 01       	movw	r30, r28
    207a:	e7 50       	subi	r30, 0x07	; 7
    207c:	ff 4f       	sbci	r31, 0xFF	; 255
    207e:	80 e0       	ldi	r24, 0x00	; 0
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	aa ef       	ldi	r26, 0xFA	; 250
    2084:	b4 e4       	ldi	r27, 0x44	; 68
    2086:	80 83       	st	Z, r24
    2088:	91 83       	std	Z+1, r25	; 0x01
    208a:	a2 83       	std	Z+2, r26	; 0x02
    208c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    208e:	8e 01       	movw	r16, r28
    2090:	0b 50       	subi	r16, 0x0B	; 11
    2092:	1f 4f       	sbci	r17, 0xFF	; 255
    2094:	fe 01       	movw	r30, r28
    2096:	e7 50       	subi	r30, 0x07	; 7
    2098:	ff 4f       	sbci	r31, 0xFF	; 255
    209a:	60 81       	ld	r22, Z
    209c:	71 81       	ldd	r23, Z+1	; 0x01
    209e:	82 81       	ldd	r24, Z+2	; 0x02
    20a0:	93 81       	ldd	r25, Z+3	; 0x03
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	30 e0       	ldi	r19, 0x00	; 0
    20a6:	4a ef       	ldi	r20, 0xFA	; 250
    20a8:	54 e4       	ldi	r21, 0x44	; 68
    20aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ae:	dc 01       	movw	r26, r24
    20b0:	cb 01       	movw	r24, r22
    20b2:	f8 01       	movw	r30, r16
    20b4:	80 83       	st	Z, r24
    20b6:	91 83       	std	Z+1, r25	; 0x01
    20b8:	a2 83       	std	Z+2, r26	; 0x02
    20ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20bc:	fe 01       	movw	r30, r28
    20be:	eb 50       	subi	r30, 0x0B	; 11
    20c0:	ff 4f       	sbci	r31, 0xFF	; 255
    20c2:	60 81       	ld	r22, Z
    20c4:	71 81       	ldd	r23, Z+1	; 0x01
    20c6:	82 81       	ldd	r24, Z+2	; 0x02
    20c8:	93 81       	ldd	r25, Z+3	; 0x03
    20ca:	20 e0       	ldi	r18, 0x00	; 0
    20cc:	30 e0       	ldi	r19, 0x00	; 0
    20ce:	40 e8       	ldi	r20, 0x80	; 128
    20d0:	5f e3       	ldi	r21, 0x3F	; 63
    20d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20d6:	88 23       	and	r24, r24
    20d8:	44 f4       	brge	.+16     	; 0x20ea <main+0x76a>
		__ticks = 1;
    20da:	fe 01       	movw	r30, r28
    20dc:	ed 50       	subi	r30, 0x0D	; 13
    20de:	ff 4f       	sbci	r31, 0xFF	; 255
    20e0:	81 e0       	ldi	r24, 0x01	; 1
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	91 83       	std	Z+1, r25	; 0x01
    20e6:	80 83       	st	Z, r24
    20e8:	64 c0       	rjmp	.+200    	; 0x21b2 <main+0x832>
	else if (__tmp > 65535)
    20ea:	fe 01       	movw	r30, r28
    20ec:	eb 50       	subi	r30, 0x0B	; 11
    20ee:	ff 4f       	sbci	r31, 0xFF	; 255
    20f0:	60 81       	ld	r22, Z
    20f2:	71 81       	ldd	r23, Z+1	; 0x01
    20f4:	82 81       	ldd	r24, Z+2	; 0x02
    20f6:	93 81       	ldd	r25, Z+3	; 0x03
    20f8:	20 e0       	ldi	r18, 0x00	; 0
    20fa:	3f ef       	ldi	r19, 0xFF	; 255
    20fc:	4f e7       	ldi	r20, 0x7F	; 127
    20fe:	57 e4       	ldi	r21, 0x47	; 71
    2100:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2104:	18 16       	cp	r1, r24
    2106:	0c f0       	brlt	.+2      	; 0x210a <main+0x78a>
    2108:	43 c0       	rjmp	.+134    	; 0x2190 <main+0x810>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    210a:	fe 01       	movw	r30, r28
    210c:	e7 50       	subi	r30, 0x07	; 7
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	60 81       	ld	r22, Z
    2112:	71 81       	ldd	r23, Z+1	; 0x01
    2114:	82 81       	ldd	r24, Z+2	; 0x02
    2116:	93 81       	ldd	r25, Z+3	; 0x03
    2118:	20 e0       	ldi	r18, 0x00	; 0
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	40 e2       	ldi	r20, 0x20	; 32
    211e:	51 e4       	ldi	r21, 0x41	; 65
    2120:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2124:	dc 01       	movw	r26, r24
    2126:	cb 01       	movw	r24, r22
    2128:	8e 01       	movw	r16, r28
    212a:	0d 50       	subi	r16, 0x0D	; 13
    212c:	1f 4f       	sbci	r17, 0xFF	; 255
    212e:	bc 01       	movw	r22, r24
    2130:	cd 01       	movw	r24, r26
    2132:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2136:	dc 01       	movw	r26, r24
    2138:	cb 01       	movw	r24, r22
    213a:	f8 01       	movw	r30, r16
    213c:	91 83       	std	Z+1, r25	; 0x01
    213e:	80 83       	st	Z, r24
    2140:	1f c0       	rjmp	.+62     	; 0x2180 <main+0x800>
    2142:	fe 01       	movw	r30, r28
    2144:	ef 50       	subi	r30, 0x0F	; 15
    2146:	ff 4f       	sbci	r31, 0xFF	; 255
    2148:	88 ec       	ldi	r24, 0xC8	; 200
    214a:	90 e0       	ldi	r25, 0x00	; 0
    214c:	91 83       	std	Z+1, r25	; 0x01
    214e:	80 83       	st	Z, r24
    2150:	fe 01       	movw	r30, r28
    2152:	ef 50       	subi	r30, 0x0F	; 15
    2154:	ff 4f       	sbci	r31, 0xFF	; 255
    2156:	80 81       	ld	r24, Z
    2158:	91 81       	ldd	r25, Z+1	; 0x01
    215a:	01 97       	sbiw	r24, 0x01	; 1
    215c:	f1 f7       	brne	.-4      	; 0x215a <main+0x7da>
    215e:	fe 01       	movw	r30, r28
    2160:	ef 50       	subi	r30, 0x0F	; 15
    2162:	ff 4f       	sbci	r31, 0xFF	; 255
    2164:	91 83       	std	Z+1, r25	; 0x01
    2166:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2168:	de 01       	movw	r26, r28
    216a:	ad 50       	subi	r26, 0x0D	; 13
    216c:	bf 4f       	sbci	r27, 0xFF	; 255
    216e:	fe 01       	movw	r30, r28
    2170:	ed 50       	subi	r30, 0x0D	; 13
    2172:	ff 4f       	sbci	r31, 0xFF	; 255
    2174:	80 81       	ld	r24, Z
    2176:	91 81       	ldd	r25, Z+1	; 0x01
    2178:	01 97       	sbiw	r24, 0x01	; 1
    217a:	11 96       	adiw	r26, 0x01	; 1
    217c:	9c 93       	st	X, r25
    217e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2180:	fe 01       	movw	r30, r28
    2182:	ed 50       	subi	r30, 0x0D	; 13
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	80 81       	ld	r24, Z
    2188:	91 81       	ldd	r25, Z+1	; 0x01
    218a:	00 97       	sbiw	r24, 0x00	; 0
    218c:	d1 f6       	brne	.-76     	; 0x2142 <main+0x7c2>
    218e:	27 c0       	rjmp	.+78     	; 0x21de <main+0x85e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2190:	8e 01       	movw	r16, r28
    2192:	0d 50       	subi	r16, 0x0D	; 13
    2194:	1f 4f       	sbci	r17, 0xFF	; 255
    2196:	fe 01       	movw	r30, r28
    2198:	eb 50       	subi	r30, 0x0B	; 11
    219a:	ff 4f       	sbci	r31, 0xFF	; 255
    219c:	60 81       	ld	r22, Z
    219e:	71 81       	ldd	r23, Z+1	; 0x01
    21a0:	82 81       	ldd	r24, Z+2	; 0x02
    21a2:	93 81       	ldd	r25, Z+3	; 0x03
    21a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21a8:	dc 01       	movw	r26, r24
    21aa:	cb 01       	movw	r24, r22
    21ac:	f8 01       	movw	r30, r16
    21ae:	91 83       	std	Z+1, r25	; 0x01
    21b0:	80 83       	st	Z, r24
    21b2:	de 01       	movw	r26, r28
    21b4:	a1 51       	subi	r26, 0x11	; 17
    21b6:	bf 4f       	sbci	r27, 0xFF	; 255
    21b8:	fe 01       	movw	r30, r28
    21ba:	ed 50       	subi	r30, 0x0D	; 13
    21bc:	ff 4f       	sbci	r31, 0xFF	; 255
    21be:	80 81       	ld	r24, Z
    21c0:	91 81       	ldd	r25, Z+1	; 0x01
    21c2:	8d 93       	st	X+, r24
    21c4:	9c 93       	st	X, r25
    21c6:	fe 01       	movw	r30, r28
    21c8:	e1 51       	subi	r30, 0x11	; 17
    21ca:	ff 4f       	sbci	r31, 0xFF	; 255
    21cc:	80 81       	ld	r24, Z
    21ce:	91 81       	ldd	r25, Z+1	; 0x01
    21d0:	01 97       	sbiw	r24, 0x01	; 1
    21d2:	f1 f7       	brne	.-4      	; 0x21d0 <main+0x850>
    21d4:	fe 01       	movw	r30, r28
    21d6:	e1 51       	subi	r30, 0x11	; 17
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	91 83       	std	Z+1, r25	; 0x01
    21dc:	80 83       	st	Z, r24
		_delay_ms(2000);
		LCD_voidClearLCD();
    21de:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		LCD_voidSendString("I can do a lot");
    21e2:	81 e7       	ldi	r24, 0x71	; 113
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	0e 94 2e 0c 	call	0x185c	; 0x185c <LCD_voidSendString>
		LCD_voidWriteSpecialCharacter(ARR_u8FristArabicLetter,1,1,0);
    21ea:	ce 01       	movw	r24, r28
    21ec:	84 5f       	subi	r24, 0xF4	; 244
    21ee:	9e 4f       	sbci	r25, 0xFE	; 254
    21f0:	61 e0       	ldi	r22, 0x01	; 1
    21f2:	41 e0       	ldi	r20, 0x01	; 1
    21f4:	20 e0       	ldi	r18, 0x00	; 0
    21f6:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    21fa:	fe 01       	movw	r30, r28
    21fc:	e5 51       	subi	r30, 0x15	; 21
    21fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	aa ef       	ldi	r26, 0xFA	; 250
    2206:	b4 e4       	ldi	r27, 0x44	; 68
    2208:	80 83       	st	Z, r24
    220a:	91 83       	std	Z+1, r25	; 0x01
    220c:	a2 83       	std	Z+2, r26	; 0x02
    220e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2210:	8e 01       	movw	r16, r28
    2212:	09 51       	subi	r16, 0x19	; 25
    2214:	1f 4f       	sbci	r17, 0xFF	; 255
    2216:	fe 01       	movw	r30, r28
    2218:	e5 51       	subi	r30, 0x15	; 21
    221a:	ff 4f       	sbci	r31, 0xFF	; 255
    221c:	60 81       	ld	r22, Z
    221e:	71 81       	ldd	r23, Z+1	; 0x01
    2220:	82 81       	ldd	r24, Z+2	; 0x02
    2222:	93 81       	ldd	r25, Z+3	; 0x03
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	4a ef       	ldi	r20, 0xFA	; 250
    222a:	54 e4       	ldi	r21, 0x44	; 68
    222c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2230:	dc 01       	movw	r26, r24
    2232:	cb 01       	movw	r24, r22
    2234:	f8 01       	movw	r30, r16
    2236:	80 83       	st	Z, r24
    2238:	91 83       	std	Z+1, r25	; 0x01
    223a:	a2 83       	std	Z+2, r26	; 0x02
    223c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    223e:	fe 01       	movw	r30, r28
    2240:	e9 51       	subi	r30, 0x19	; 25
    2242:	ff 4f       	sbci	r31, 0xFF	; 255
    2244:	60 81       	ld	r22, Z
    2246:	71 81       	ldd	r23, Z+1	; 0x01
    2248:	82 81       	ldd	r24, Z+2	; 0x02
    224a:	93 81       	ldd	r25, Z+3	; 0x03
    224c:	20 e0       	ldi	r18, 0x00	; 0
    224e:	30 e0       	ldi	r19, 0x00	; 0
    2250:	40 e8       	ldi	r20, 0x80	; 128
    2252:	5f e3       	ldi	r21, 0x3F	; 63
    2254:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2258:	88 23       	and	r24, r24
    225a:	44 f4       	brge	.+16     	; 0x226c <main+0x8ec>
		__ticks = 1;
    225c:	fe 01       	movw	r30, r28
    225e:	eb 51       	subi	r30, 0x1B	; 27
    2260:	ff 4f       	sbci	r31, 0xFF	; 255
    2262:	81 e0       	ldi	r24, 0x01	; 1
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	91 83       	std	Z+1, r25	; 0x01
    2268:	80 83       	st	Z, r24
    226a:	64 c0       	rjmp	.+200    	; 0x2334 <main+0x9b4>
	else if (__tmp > 65535)
    226c:	fe 01       	movw	r30, r28
    226e:	e9 51       	subi	r30, 0x19	; 25
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	60 81       	ld	r22, Z
    2274:	71 81       	ldd	r23, Z+1	; 0x01
    2276:	82 81       	ldd	r24, Z+2	; 0x02
    2278:	93 81       	ldd	r25, Z+3	; 0x03
    227a:	20 e0       	ldi	r18, 0x00	; 0
    227c:	3f ef       	ldi	r19, 0xFF	; 255
    227e:	4f e7       	ldi	r20, 0x7F	; 127
    2280:	57 e4       	ldi	r21, 0x47	; 71
    2282:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2286:	18 16       	cp	r1, r24
    2288:	0c f0       	brlt	.+2      	; 0x228c <main+0x90c>
    228a:	43 c0       	rjmp	.+134    	; 0x2312 <main+0x992>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    228c:	fe 01       	movw	r30, r28
    228e:	e5 51       	subi	r30, 0x15	; 21
    2290:	ff 4f       	sbci	r31, 0xFF	; 255
    2292:	60 81       	ld	r22, Z
    2294:	71 81       	ldd	r23, Z+1	; 0x01
    2296:	82 81       	ldd	r24, Z+2	; 0x02
    2298:	93 81       	ldd	r25, Z+3	; 0x03
    229a:	20 e0       	ldi	r18, 0x00	; 0
    229c:	30 e0       	ldi	r19, 0x00	; 0
    229e:	40 e2       	ldi	r20, 0x20	; 32
    22a0:	51 e4       	ldi	r21, 0x41	; 65
    22a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22a6:	dc 01       	movw	r26, r24
    22a8:	cb 01       	movw	r24, r22
    22aa:	8e 01       	movw	r16, r28
    22ac:	0b 51       	subi	r16, 0x1B	; 27
    22ae:	1f 4f       	sbci	r17, 0xFF	; 255
    22b0:	bc 01       	movw	r22, r24
    22b2:	cd 01       	movw	r24, r26
    22b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22b8:	dc 01       	movw	r26, r24
    22ba:	cb 01       	movw	r24, r22
    22bc:	f8 01       	movw	r30, r16
    22be:	91 83       	std	Z+1, r25	; 0x01
    22c0:	80 83       	st	Z, r24
    22c2:	1f c0       	rjmp	.+62     	; 0x2302 <main+0x982>
    22c4:	fe 01       	movw	r30, r28
    22c6:	ed 51       	subi	r30, 0x1D	; 29
    22c8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ca:	88 ec       	ldi	r24, 0xC8	; 200
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
    22d2:	fe 01       	movw	r30, r28
    22d4:	ed 51       	subi	r30, 0x1D	; 29
    22d6:	ff 4f       	sbci	r31, 0xFF	; 255
    22d8:	80 81       	ld	r24, Z
    22da:	91 81       	ldd	r25, Z+1	; 0x01
    22dc:	01 97       	sbiw	r24, 0x01	; 1
    22de:	f1 f7       	brne	.-4      	; 0x22dc <main+0x95c>
    22e0:	fe 01       	movw	r30, r28
    22e2:	ed 51       	subi	r30, 0x1D	; 29
    22e4:	ff 4f       	sbci	r31, 0xFF	; 255
    22e6:	91 83       	std	Z+1, r25	; 0x01
    22e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22ea:	de 01       	movw	r26, r28
    22ec:	ab 51       	subi	r26, 0x1B	; 27
    22ee:	bf 4f       	sbci	r27, 0xFF	; 255
    22f0:	fe 01       	movw	r30, r28
    22f2:	eb 51       	subi	r30, 0x1B	; 27
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	80 81       	ld	r24, Z
    22f8:	91 81       	ldd	r25, Z+1	; 0x01
    22fa:	01 97       	sbiw	r24, 0x01	; 1
    22fc:	11 96       	adiw	r26, 0x01	; 1
    22fe:	9c 93       	st	X, r25
    2300:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2302:	fe 01       	movw	r30, r28
    2304:	eb 51       	subi	r30, 0x1B	; 27
    2306:	ff 4f       	sbci	r31, 0xFF	; 255
    2308:	80 81       	ld	r24, Z
    230a:	91 81       	ldd	r25, Z+1	; 0x01
    230c:	00 97       	sbiw	r24, 0x00	; 0
    230e:	d1 f6       	brne	.-76     	; 0x22c4 <main+0x944>
    2310:	27 c0       	rjmp	.+78     	; 0x2360 <main+0x9e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2312:	8e 01       	movw	r16, r28
    2314:	0b 51       	subi	r16, 0x1B	; 27
    2316:	1f 4f       	sbci	r17, 0xFF	; 255
    2318:	fe 01       	movw	r30, r28
    231a:	e9 51       	subi	r30, 0x19	; 25
    231c:	ff 4f       	sbci	r31, 0xFF	; 255
    231e:	60 81       	ld	r22, Z
    2320:	71 81       	ldd	r23, Z+1	; 0x01
    2322:	82 81       	ldd	r24, Z+2	; 0x02
    2324:	93 81       	ldd	r25, Z+3	; 0x03
    2326:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    232a:	dc 01       	movw	r26, r24
    232c:	cb 01       	movw	r24, r22
    232e:	f8 01       	movw	r30, r16
    2330:	91 83       	std	Z+1, r25	; 0x01
    2332:	80 83       	st	Z, r24
    2334:	de 01       	movw	r26, r28
    2336:	af 51       	subi	r26, 0x1F	; 31
    2338:	bf 4f       	sbci	r27, 0xFF	; 255
    233a:	fe 01       	movw	r30, r28
    233c:	eb 51       	subi	r30, 0x1B	; 27
    233e:	ff 4f       	sbci	r31, 0xFF	; 255
    2340:	80 81       	ld	r24, Z
    2342:	91 81       	ldd	r25, Z+1	; 0x01
    2344:	8d 93       	st	X+, r24
    2346:	9c 93       	st	X, r25
    2348:	fe 01       	movw	r30, r28
    234a:	ef 51       	subi	r30, 0x1F	; 31
    234c:	ff 4f       	sbci	r31, 0xFF	; 255
    234e:	80 81       	ld	r24, Z
    2350:	91 81       	ldd	r25, Z+1	; 0x01
    2352:	01 97       	sbiw	r24, 0x01	; 1
    2354:	f1 f7       	brne	.-4      	; 0x2352 <main+0x9d2>
    2356:	fe 01       	movw	r30, r28
    2358:	ef 51       	subi	r30, 0x1F	; 31
    235a:	ff 4f       	sbci	r31, 0xFF	; 255
    235c:	91 83       	std	Z+1, r25	; 0x01
    235e:	80 83       	st	Z, r24
		_delay_ms(2000);
		LCD_voidClearLCD();
    2360:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		LCD_voidSendString("I can RUN");
    2364:	80 e8       	ldi	r24, 0x80	; 128
    2366:	90 e0       	ldi	r25, 0x00	; 0
    2368:	0e 94 2e 0c 	call	0x185c	; 0x185c <LCD_voidSendString>
    236c:	fe 01       	movw	r30, r28
    236e:	e3 52       	subi	r30, 0x23	; 35
    2370:	ff 4f       	sbci	r31, 0xFF	; 255
    2372:	80 e0       	ldi	r24, 0x00	; 0
    2374:	90 e0       	ldi	r25, 0x00	; 0
    2376:	aa ef       	ldi	r26, 0xFA	; 250
    2378:	b4 e4       	ldi	r27, 0x44	; 68
    237a:	80 83       	st	Z, r24
    237c:	91 83       	std	Z+1, r25	; 0x01
    237e:	a2 83       	std	Z+2, r26	; 0x02
    2380:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2382:	8e 01       	movw	r16, r28
    2384:	07 52       	subi	r16, 0x27	; 39
    2386:	1f 4f       	sbci	r17, 0xFF	; 255
    2388:	fe 01       	movw	r30, r28
    238a:	e3 52       	subi	r30, 0x23	; 35
    238c:	ff 4f       	sbci	r31, 0xFF	; 255
    238e:	60 81       	ld	r22, Z
    2390:	71 81       	ldd	r23, Z+1	; 0x01
    2392:	82 81       	ldd	r24, Z+2	; 0x02
    2394:	93 81       	ldd	r25, Z+3	; 0x03
    2396:	20 e0       	ldi	r18, 0x00	; 0
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	4a ef       	ldi	r20, 0xFA	; 250
    239c:	54 e4       	ldi	r21, 0x44	; 68
    239e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23a2:	dc 01       	movw	r26, r24
    23a4:	cb 01       	movw	r24, r22
    23a6:	f8 01       	movw	r30, r16
    23a8:	80 83       	st	Z, r24
    23aa:	91 83       	std	Z+1, r25	; 0x01
    23ac:	a2 83       	std	Z+2, r26	; 0x02
    23ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23b0:	fe 01       	movw	r30, r28
    23b2:	e7 52       	subi	r30, 0x27	; 39
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	60 81       	ld	r22, Z
    23b8:	71 81       	ldd	r23, Z+1	; 0x01
    23ba:	82 81       	ldd	r24, Z+2	; 0x02
    23bc:	93 81       	ldd	r25, Z+3	; 0x03
    23be:	20 e0       	ldi	r18, 0x00	; 0
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	40 e8       	ldi	r20, 0x80	; 128
    23c4:	5f e3       	ldi	r21, 0x3F	; 63
    23c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23ca:	88 23       	and	r24, r24
    23cc:	44 f4       	brge	.+16     	; 0x23de <main+0xa5e>
		__ticks = 1;
    23ce:	fe 01       	movw	r30, r28
    23d0:	e9 52       	subi	r30, 0x29	; 41
    23d2:	ff 4f       	sbci	r31, 0xFF	; 255
    23d4:	81 e0       	ldi	r24, 0x01	; 1
    23d6:	90 e0       	ldi	r25, 0x00	; 0
    23d8:	91 83       	std	Z+1, r25	; 0x01
    23da:	80 83       	st	Z, r24
    23dc:	64 c0       	rjmp	.+200    	; 0x24a6 <main+0xb26>
	else if (__tmp > 65535)
    23de:	fe 01       	movw	r30, r28
    23e0:	e7 52       	subi	r30, 0x27	; 39
    23e2:	ff 4f       	sbci	r31, 0xFF	; 255
    23e4:	60 81       	ld	r22, Z
    23e6:	71 81       	ldd	r23, Z+1	; 0x01
    23e8:	82 81       	ldd	r24, Z+2	; 0x02
    23ea:	93 81       	ldd	r25, Z+3	; 0x03
    23ec:	20 e0       	ldi	r18, 0x00	; 0
    23ee:	3f ef       	ldi	r19, 0xFF	; 255
    23f0:	4f e7       	ldi	r20, 0x7F	; 127
    23f2:	57 e4       	ldi	r21, 0x47	; 71
    23f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23f8:	18 16       	cp	r1, r24
    23fa:	0c f0       	brlt	.+2      	; 0x23fe <main+0xa7e>
    23fc:	43 c0       	rjmp	.+134    	; 0x2484 <main+0xb04>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23fe:	fe 01       	movw	r30, r28
    2400:	e3 52       	subi	r30, 0x23	; 35
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	60 81       	ld	r22, Z
    2406:	71 81       	ldd	r23, Z+1	; 0x01
    2408:	82 81       	ldd	r24, Z+2	; 0x02
    240a:	93 81       	ldd	r25, Z+3	; 0x03
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	40 e2       	ldi	r20, 0x20	; 32
    2412:	51 e4       	ldi	r21, 0x41	; 65
    2414:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2418:	dc 01       	movw	r26, r24
    241a:	cb 01       	movw	r24, r22
    241c:	8e 01       	movw	r16, r28
    241e:	09 52       	subi	r16, 0x29	; 41
    2420:	1f 4f       	sbci	r17, 0xFF	; 255
    2422:	bc 01       	movw	r22, r24
    2424:	cd 01       	movw	r24, r26
    2426:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    242a:	dc 01       	movw	r26, r24
    242c:	cb 01       	movw	r24, r22
    242e:	f8 01       	movw	r30, r16
    2430:	91 83       	std	Z+1, r25	; 0x01
    2432:	80 83       	st	Z, r24
    2434:	1f c0       	rjmp	.+62     	; 0x2474 <main+0xaf4>
    2436:	fe 01       	movw	r30, r28
    2438:	eb 52       	subi	r30, 0x2B	; 43
    243a:	ff 4f       	sbci	r31, 0xFF	; 255
    243c:	88 ec       	ldi	r24, 0xC8	; 200
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	91 83       	std	Z+1, r25	; 0x01
    2442:	80 83       	st	Z, r24
    2444:	fe 01       	movw	r30, r28
    2446:	eb 52       	subi	r30, 0x2B	; 43
    2448:	ff 4f       	sbci	r31, 0xFF	; 255
    244a:	80 81       	ld	r24, Z
    244c:	91 81       	ldd	r25, Z+1	; 0x01
    244e:	01 97       	sbiw	r24, 0x01	; 1
    2450:	f1 f7       	brne	.-4      	; 0x244e <main+0xace>
    2452:	fe 01       	movw	r30, r28
    2454:	eb 52       	subi	r30, 0x2B	; 43
    2456:	ff 4f       	sbci	r31, 0xFF	; 255
    2458:	91 83       	std	Z+1, r25	; 0x01
    245a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    245c:	de 01       	movw	r26, r28
    245e:	a9 52       	subi	r26, 0x29	; 41
    2460:	bf 4f       	sbci	r27, 0xFF	; 255
    2462:	fe 01       	movw	r30, r28
    2464:	e9 52       	subi	r30, 0x29	; 41
    2466:	ff 4f       	sbci	r31, 0xFF	; 255
    2468:	80 81       	ld	r24, Z
    246a:	91 81       	ldd	r25, Z+1	; 0x01
    246c:	01 97       	sbiw	r24, 0x01	; 1
    246e:	11 96       	adiw	r26, 0x01	; 1
    2470:	9c 93       	st	X, r25
    2472:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2474:	fe 01       	movw	r30, r28
    2476:	e9 52       	subi	r30, 0x29	; 41
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	80 81       	ld	r24, Z
    247c:	91 81       	ldd	r25, Z+1	; 0x01
    247e:	00 97       	sbiw	r24, 0x00	; 0
    2480:	d1 f6       	brne	.-76     	; 0x2436 <main+0xab6>
    2482:	27 c0       	rjmp	.+78     	; 0x24d2 <main+0xb52>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2484:	8e 01       	movw	r16, r28
    2486:	09 52       	subi	r16, 0x29	; 41
    2488:	1f 4f       	sbci	r17, 0xFF	; 255
    248a:	fe 01       	movw	r30, r28
    248c:	e7 52       	subi	r30, 0x27	; 39
    248e:	ff 4f       	sbci	r31, 0xFF	; 255
    2490:	60 81       	ld	r22, Z
    2492:	71 81       	ldd	r23, Z+1	; 0x01
    2494:	82 81       	ldd	r24, Z+2	; 0x02
    2496:	93 81       	ldd	r25, Z+3	; 0x03
    2498:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    249c:	dc 01       	movw	r26, r24
    249e:	cb 01       	movw	r24, r22
    24a0:	f8 01       	movw	r30, r16
    24a2:	91 83       	std	Z+1, r25	; 0x01
    24a4:	80 83       	st	Z, r24
    24a6:	de 01       	movw	r26, r28
    24a8:	ad 52       	subi	r26, 0x2D	; 45
    24aa:	bf 4f       	sbci	r27, 0xFF	; 255
    24ac:	fe 01       	movw	r30, r28
    24ae:	e9 52       	subi	r30, 0x29	; 41
    24b0:	ff 4f       	sbci	r31, 0xFF	; 255
    24b2:	80 81       	ld	r24, Z
    24b4:	91 81       	ldd	r25, Z+1	; 0x01
    24b6:	8d 93       	st	X+, r24
    24b8:	9c 93       	st	X, r25
    24ba:	fe 01       	movw	r30, r28
    24bc:	ed 52       	subi	r30, 0x2D	; 45
    24be:	ff 4f       	sbci	r31, 0xFF	; 255
    24c0:	80 81       	ld	r24, Z
    24c2:	91 81       	ldd	r25, Z+1	; 0x01
    24c4:	01 97       	sbiw	r24, 0x01	; 1
    24c6:	f1 f7       	brne	.-4      	; 0x24c4 <main+0xb44>
    24c8:	fe 01       	movw	r30, r28
    24ca:	ed 52       	subi	r30, 0x2D	; 45
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	91 83       	std	Z+1, r25	; 0x01
    24d0:	80 83       	st	Z, r24
		_delay_ms(2000);
		LCD_voidClearLCD();
    24d2:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		u8 i ;
		for(i=0 ; i<13 ;i++ ){
    24d6:	fe 01       	movw	r30, r28
    24d8:	e5 5f       	subi	r30, 0xF5	; 245
    24da:	fe 4f       	sbci	r31, 0xFE	; 254
    24dc:	10 82       	st	Z, r1
    24de:	03 c3       	rjmp	.+1542   	; 0x2ae6 <main+0x1166>
			LCD_voidWriteSpecialCharacter(ARR_u8FristArabicLetter,0,1,i);
    24e0:	ce 01       	movw	r24, r28
    24e2:	84 5f       	subi	r24, 0xF4	; 244
    24e4:	9e 4f       	sbci	r25, 0xFE	; 254
    24e6:	fe 01       	movw	r30, r28
    24e8:	e5 5f       	subi	r30, 0xF5	; 245
    24ea:	fe 4f       	sbci	r31, 0xFE	; 254
    24ec:	60 e0       	ldi	r22, 0x00	; 0
    24ee:	41 e0       	ldi	r20, 0x01	; 1
    24f0:	20 81       	ld	r18, Z
    24f2:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    24f6:	fe 01       	movw	r30, r28
    24f8:	e1 53       	subi	r30, 0x31	; 49
    24fa:	ff 4f       	sbci	r31, 0xFF	; 255
    24fc:	80 e0       	ldi	r24, 0x00	; 0
    24fe:	90 e0       	ldi	r25, 0x00	; 0
    2500:	a8 ec       	ldi	r26, 0xC8	; 200
    2502:	b2 e4       	ldi	r27, 0x42	; 66
    2504:	80 83       	st	Z, r24
    2506:	91 83       	std	Z+1, r25	; 0x01
    2508:	a2 83       	std	Z+2, r26	; 0x02
    250a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    250c:	8e 01       	movw	r16, r28
    250e:	05 53       	subi	r16, 0x35	; 53
    2510:	1f 4f       	sbci	r17, 0xFF	; 255
    2512:	fe 01       	movw	r30, r28
    2514:	e1 53       	subi	r30, 0x31	; 49
    2516:	ff 4f       	sbci	r31, 0xFF	; 255
    2518:	60 81       	ld	r22, Z
    251a:	71 81       	ldd	r23, Z+1	; 0x01
    251c:	82 81       	ldd	r24, Z+2	; 0x02
    251e:	93 81       	ldd	r25, Z+3	; 0x03
    2520:	20 e0       	ldi	r18, 0x00	; 0
    2522:	30 e0       	ldi	r19, 0x00	; 0
    2524:	4a ef       	ldi	r20, 0xFA	; 250
    2526:	54 e4       	ldi	r21, 0x44	; 68
    2528:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    252c:	dc 01       	movw	r26, r24
    252e:	cb 01       	movw	r24, r22
    2530:	f8 01       	movw	r30, r16
    2532:	80 83       	st	Z, r24
    2534:	91 83       	std	Z+1, r25	; 0x01
    2536:	a2 83       	std	Z+2, r26	; 0x02
    2538:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    253a:	fe 01       	movw	r30, r28
    253c:	e5 53       	subi	r30, 0x35	; 53
    253e:	ff 4f       	sbci	r31, 0xFF	; 255
    2540:	60 81       	ld	r22, Z
    2542:	71 81       	ldd	r23, Z+1	; 0x01
    2544:	82 81       	ldd	r24, Z+2	; 0x02
    2546:	93 81       	ldd	r25, Z+3	; 0x03
    2548:	20 e0       	ldi	r18, 0x00	; 0
    254a:	30 e0       	ldi	r19, 0x00	; 0
    254c:	40 e8       	ldi	r20, 0x80	; 128
    254e:	5f e3       	ldi	r21, 0x3F	; 63
    2550:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2554:	88 23       	and	r24, r24
    2556:	44 f4       	brge	.+16     	; 0x2568 <main+0xbe8>
		__ticks = 1;
    2558:	fe 01       	movw	r30, r28
    255a:	e7 53       	subi	r30, 0x37	; 55
    255c:	ff 4f       	sbci	r31, 0xFF	; 255
    255e:	81 e0       	ldi	r24, 0x01	; 1
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	91 83       	std	Z+1, r25	; 0x01
    2564:	80 83       	st	Z, r24
    2566:	64 c0       	rjmp	.+200    	; 0x2630 <main+0xcb0>
	else if (__tmp > 65535)
    2568:	fe 01       	movw	r30, r28
    256a:	e5 53       	subi	r30, 0x35	; 53
    256c:	ff 4f       	sbci	r31, 0xFF	; 255
    256e:	60 81       	ld	r22, Z
    2570:	71 81       	ldd	r23, Z+1	; 0x01
    2572:	82 81       	ldd	r24, Z+2	; 0x02
    2574:	93 81       	ldd	r25, Z+3	; 0x03
    2576:	20 e0       	ldi	r18, 0x00	; 0
    2578:	3f ef       	ldi	r19, 0xFF	; 255
    257a:	4f e7       	ldi	r20, 0x7F	; 127
    257c:	57 e4       	ldi	r21, 0x47	; 71
    257e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2582:	18 16       	cp	r1, r24
    2584:	0c f0       	brlt	.+2      	; 0x2588 <main+0xc08>
    2586:	43 c0       	rjmp	.+134    	; 0x260e <main+0xc8e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2588:	fe 01       	movw	r30, r28
    258a:	e1 53       	subi	r30, 0x31	; 49
    258c:	ff 4f       	sbci	r31, 0xFF	; 255
    258e:	60 81       	ld	r22, Z
    2590:	71 81       	ldd	r23, Z+1	; 0x01
    2592:	82 81       	ldd	r24, Z+2	; 0x02
    2594:	93 81       	ldd	r25, Z+3	; 0x03
    2596:	20 e0       	ldi	r18, 0x00	; 0
    2598:	30 e0       	ldi	r19, 0x00	; 0
    259a:	40 e2       	ldi	r20, 0x20	; 32
    259c:	51 e4       	ldi	r21, 0x41	; 65
    259e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25a2:	dc 01       	movw	r26, r24
    25a4:	cb 01       	movw	r24, r22
    25a6:	8e 01       	movw	r16, r28
    25a8:	07 53       	subi	r16, 0x37	; 55
    25aa:	1f 4f       	sbci	r17, 0xFF	; 255
    25ac:	bc 01       	movw	r22, r24
    25ae:	cd 01       	movw	r24, r26
    25b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25b4:	dc 01       	movw	r26, r24
    25b6:	cb 01       	movw	r24, r22
    25b8:	f8 01       	movw	r30, r16
    25ba:	91 83       	std	Z+1, r25	; 0x01
    25bc:	80 83       	st	Z, r24
    25be:	1f c0       	rjmp	.+62     	; 0x25fe <main+0xc7e>
    25c0:	fe 01       	movw	r30, r28
    25c2:	e9 53       	subi	r30, 0x39	; 57
    25c4:	ff 4f       	sbci	r31, 0xFF	; 255
    25c6:	88 ec       	ldi	r24, 0xC8	; 200
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	91 83       	std	Z+1, r25	; 0x01
    25cc:	80 83       	st	Z, r24
    25ce:	fe 01       	movw	r30, r28
    25d0:	e9 53       	subi	r30, 0x39	; 57
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	80 81       	ld	r24, Z
    25d6:	91 81       	ldd	r25, Z+1	; 0x01
    25d8:	01 97       	sbiw	r24, 0x01	; 1
    25da:	f1 f7       	brne	.-4      	; 0x25d8 <main+0xc58>
    25dc:	fe 01       	movw	r30, r28
    25de:	e9 53       	subi	r30, 0x39	; 57
    25e0:	ff 4f       	sbci	r31, 0xFF	; 255
    25e2:	91 83       	std	Z+1, r25	; 0x01
    25e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25e6:	de 01       	movw	r26, r28
    25e8:	a7 53       	subi	r26, 0x37	; 55
    25ea:	bf 4f       	sbci	r27, 0xFF	; 255
    25ec:	fe 01       	movw	r30, r28
    25ee:	e7 53       	subi	r30, 0x37	; 55
    25f0:	ff 4f       	sbci	r31, 0xFF	; 255
    25f2:	80 81       	ld	r24, Z
    25f4:	91 81       	ldd	r25, Z+1	; 0x01
    25f6:	01 97       	sbiw	r24, 0x01	; 1
    25f8:	11 96       	adiw	r26, 0x01	; 1
    25fa:	9c 93       	st	X, r25
    25fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25fe:	fe 01       	movw	r30, r28
    2600:	e7 53       	subi	r30, 0x37	; 55
    2602:	ff 4f       	sbci	r31, 0xFF	; 255
    2604:	80 81       	ld	r24, Z
    2606:	91 81       	ldd	r25, Z+1	; 0x01
    2608:	00 97       	sbiw	r24, 0x00	; 0
    260a:	d1 f6       	brne	.-76     	; 0x25c0 <main+0xc40>
    260c:	27 c0       	rjmp	.+78     	; 0x265c <main+0xcdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    260e:	8e 01       	movw	r16, r28
    2610:	07 53       	subi	r16, 0x37	; 55
    2612:	1f 4f       	sbci	r17, 0xFF	; 255
    2614:	fe 01       	movw	r30, r28
    2616:	e5 53       	subi	r30, 0x35	; 53
    2618:	ff 4f       	sbci	r31, 0xFF	; 255
    261a:	60 81       	ld	r22, Z
    261c:	71 81       	ldd	r23, Z+1	; 0x01
    261e:	82 81       	ldd	r24, Z+2	; 0x02
    2620:	93 81       	ldd	r25, Z+3	; 0x03
    2622:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2626:	dc 01       	movw	r26, r24
    2628:	cb 01       	movw	r24, r22
    262a:	f8 01       	movw	r30, r16
    262c:	91 83       	std	Z+1, r25	; 0x01
    262e:	80 83       	st	Z, r24
    2630:	de 01       	movw	r26, r28
    2632:	ab 53       	subi	r26, 0x3B	; 59
    2634:	bf 4f       	sbci	r27, 0xFF	; 255
    2636:	fe 01       	movw	r30, r28
    2638:	e7 53       	subi	r30, 0x37	; 55
    263a:	ff 4f       	sbci	r31, 0xFF	; 255
    263c:	80 81       	ld	r24, Z
    263e:	91 81       	ldd	r25, Z+1	; 0x01
    2640:	8d 93       	st	X+, r24
    2642:	9c 93       	st	X, r25
    2644:	fe 01       	movw	r30, r28
    2646:	eb 53       	subi	r30, 0x3B	; 59
    2648:	ff 4f       	sbci	r31, 0xFF	; 255
    264a:	80 81       	ld	r24, Z
    264c:	91 81       	ldd	r25, Z+1	; 0x01
    264e:	01 97       	sbiw	r24, 0x01	; 1
    2650:	f1 f7       	brne	.-4      	; 0x264e <main+0xcce>
    2652:	fe 01       	movw	r30, r28
    2654:	eb 53       	subi	r30, 0x3B	; 59
    2656:	ff 4f       	sbci	r31, 0xFF	; 255
    2658:	91 83       	std	Z+1, r25	; 0x01
    265a:	80 83       	st	Z, r24
			_delay_ms(100);
			LCD_voidWriteSpecialCharacter(ARR_u8SecondArabicLetter,1,1,i);
    265c:	ce 01       	movw	r24, r28
    265e:	8c 5e       	subi	r24, 0xEC	; 236
    2660:	9e 4f       	sbci	r25, 0xFE	; 254
    2662:	fe 01       	movw	r30, r28
    2664:	e5 5f       	subi	r30, 0xF5	; 245
    2666:	fe 4f       	sbci	r31, 0xFE	; 254
    2668:	61 e0       	ldi	r22, 0x01	; 1
    266a:	41 e0       	ldi	r20, 0x01	; 1
    266c:	20 81       	ld	r18, Z
    266e:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    2672:	fe 01       	movw	r30, r28
    2674:	ef 53       	subi	r30, 0x3F	; 63
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	80 e0       	ldi	r24, 0x00	; 0
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	a6 e1       	ldi	r26, 0x16	; 22
    267e:	b3 e4       	ldi	r27, 0x43	; 67
    2680:	80 83       	st	Z, r24
    2682:	91 83       	std	Z+1, r25	; 0x01
    2684:	a2 83       	std	Z+2, r26	; 0x02
    2686:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2688:	8e 01       	movw	r16, r28
    268a:	03 54       	subi	r16, 0x43	; 67
    268c:	1f 4f       	sbci	r17, 0xFF	; 255
    268e:	fe 01       	movw	r30, r28
    2690:	ef 53       	subi	r30, 0x3F	; 63
    2692:	ff 4f       	sbci	r31, 0xFF	; 255
    2694:	60 81       	ld	r22, Z
    2696:	71 81       	ldd	r23, Z+1	; 0x01
    2698:	82 81       	ldd	r24, Z+2	; 0x02
    269a:	93 81       	ldd	r25, Z+3	; 0x03
    269c:	20 e0       	ldi	r18, 0x00	; 0
    269e:	30 e0       	ldi	r19, 0x00	; 0
    26a0:	4a ef       	ldi	r20, 0xFA	; 250
    26a2:	54 e4       	ldi	r21, 0x44	; 68
    26a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26a8:	dc 01       	movw	r26, r24
    26aa:	cb 01       	movw	r24, r22
    26ac:	f8 01       	movw	r30, r16
    26ae:	80 83       	st	Z, r24
    26b0:	91 83       	std	Z+1, r25	; 0x01
    26b2:	a2 83       	std	Z+2, r26	; 0x02
    26b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26b6:	fe 01       	movw	r30, r28
    26b8:	e3 54       	subi	r30, 0x43	; 67
    26ba:	ff 4f       	sbci	r31, 0xFF	; 255
    26bc:	60 81       	ld	r22, Z
    26be:	71 81       	ldd	r23, Z+1	; 0x01
    26c0:	82 81       	ldd	r24, Z+2	; 0x02
    26c2:	93 81       	ldd	r25, Z+3	; 0x03
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	30 e0       	ldi	r19, 0x00	; 0
    26c8:	40 e8       	ldi	r20, 0x80	; 128
    26ca:	5f e3       	ldi	r21, 0x3F	; 63
    26cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26d0:	88 23       	and	r24, r24
    26d2:	44 f4       	brge	.+16     	; 0x26e4 <main+0xd64>
		__ticks = 1;
    26d4:	fe 01       	movw	r30, r28
    26d6:	e5 54       	subi	r30, 0x45	; 69
    26d8:	ff 4f       	sbci	r31, 0xFF	; 255
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	91 83       	std	Z+1, r25	; 0x01
    26e0:	80 83       	st	Z, r24
    26e2:	64 c0       	rjmp	.+200    	; 0x27ac <main+0xe2c>
	else if (__tmp > 65535)
    26e4:	fe 01       	movw	r30, r28
    26e6:	e3 54       	subi	r30, 0x43	; 67
    26e8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ea:	60 81       	ld	r22, Z
    26ec:	71 81       	ldd	r23, Z+1	; 0x01
    26ee:	82 81       	ldd	r24, Z+2	; 0x02
    26f0:	93 81       	ldd	r25, Z+3	; 0x03
    26f2:	20 e0       	ldi	r18, 0x00	; 0
    26f4:	3f ef       	ldi	r19, 0xFF	; 255
    26f6:	4f e7       	ldi	r20, 0x7F	; 127
    26f8:	57 e4       	ldi	r21, 0x47	; 71
    26fa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26fe:	18 16       	cp	r1, r24
    2700:	0c f0       	brlt	.+2      	; 0x2704 <main+0xd84>
    2702:	43 c0       	rjmp	.+134    	; 0x278a <main+0xe0a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2704:	fe 01       	movw	r30, r28
    2706:	ef 53       	subi	r30, 0x3F	; 63
    2708:	ff 4f       	sbci	r31, 0xFF	; 255
    270a:	60 81       	ld	r22, Z
    270c:	71 81       	ldd	r23, Z+1	; 0x01
    270e:	82 81       	ldd	r24, Z+2	; 0x02
    2710:	93 81       	ldd	r25, Z+3	; 0x03
    2712:	20 e0       	ldi	r18, 0x00	; 0
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	40 e2       	ldi	r20, 0x20	; 32
    2718:	51 e4       	ldi	r21, 0x41	; 65
    271a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    271e:	dc 01       	movw	r26, r24
    2720:	cb 01       	movw	r24, r22
    2722:	8e 01       	movw	r16, r28
    2724:	05 54       	subi	r16, 0x45	; 69
    2726:	1f 4f       	sbci	r17, 0xFF	; 255
    2728:	bc 01       	movw	r22, r24
    272a:	cd 01       	movw	r24, r26
    272c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2730:	dc 01       	movw	r26, r24
    2732:	cb 01       	movw	r24, r22
    2734:	f8 01       	movw	r30, r16
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    273a:	1f c0       	rjmp	.+62     	; 0x277a <main+0xdfa>
    273c:	fe 01       	movw	r30, r28
    273e:	e7 54       	subi	r30, 0x47	; 71
    2740:	ff 4f       	sbci	r31, 0xFF	; 255
    2742:	88 ec       	ldi	r24, 0xC8	; 200
    2744:	90 e0       	ldi	r25, 0x00	; 0
    2746:	91 83       	std	Z+1, r25	; 0x01
    2748:	80 83       	st	Z, r24
    274a:	fe 01       	movw	r30, r28
    274c:	e7 54       	subi	r30, 0x47	; 71
    274e:	ff 4f       	sbci	r31, 0xFF	; 255
    2750:	80 81       	ld	r24, Z
    2752:	91 81       	ldd	r25, Z+1	; 0x01
    2754:	01 97       	sbiw	r24, 0x01	; 1
    2756:	f1 f7       	brne	.-4      	; 0x2754 <main+0xdd4>
    2758:	fe 01       	movw	r30, r28
    275a:	e7 54       	subi	r30, 0x47	; 71
    275c:	ff 4f       	sbci	r31, 0xFF	; 255
    275e:	91 83       	std	Z+1, r25	; 0x01
    2760:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2762:	de 01       	movw	r26, r28
    2764:	a5 54       	subi	r26, 0x45	; 69
    2766:	bf 4f       	sbci	r27, 0xFF	; 255
    2768:	fe 01       	movw	r30, r28
    276a:	e5 54       	subi	r30, 0x45	; 69
    276c:	ff 4f       	sbci	r31, 0xFF	; 255
    276e:	80 81       	ld	r24, Z
    2770:	91 81       	ldd	r25, Z+1	; 0x01
    2772:	01 97       	sbiw	r24, 0x01	; 1
    2774:	11 96       	adiw	r26, 0x01	; 1
    2776:	9c 93       	st	X, r25
    2778:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    277a:	fe 01       	movw	r30, r28
    277c:	e5 54       	subi	r30, 0x45	; 69
    277e:	ff 4f       	sbci	r31, 0xFF	; 255
    2780:	80 81       	ld	r24, Z
    2782:	91 81       	ldd	r25, Z+1	; 0x01
    2784:	00 97       	sbiw	r24, 0x00	; 0
    2786:	d1 f6       	brne	.-76     	; 0x273c <main+0xdbc>
    2788:	27 c0       	rjmp	.+78     	; 0x27d8 <main+0xe58>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    278a:	8e 01       	movw	r16, r28
    278c:	05 54       	subi	r16, 0x45	; 69
    278e:	1f 4f       	sbci	r17, 0xFF	; 255
    2790:	fe 01       	movw	r30, r28
    2792:	e3 54       	subi	r30, 0x43	; 67
    2794:	ff 4f       	sbci	r31, 0xFF	; 255
    2796:	60 81       	ld	r22, Z
    2798:	71 81       	ldd	r23, Z+1	; 0x01
    279a:	82 81       	ldd	r24, Z+2	; 0x02
    279c:	93 81       	ldd	r25, Z+3	; 0x03
    279e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27a2:	dc 01       	movw	r26, r24
    27a4:	cb 01       	movw	r24, r22
    27a6:	f8 01       	movw	r30, r16
    27a8:	91 83       	std	Z+1, r25	; 0x01
    27aa:	80 83       	st	Z, r24
    27ac:	de 01       	movw	r26, r28
    27ae:	a9 54       	subi	r26, 0x49	; 73
    27b0:	bf 4f       	sbci	r27, 0xFF	; 255
    27b2:	fe 01       	movw	r30, r28
    27b4:	e5 54       	subi	r30, 0x45	; 69
    27b6:	ff 4f       	sbci	r31, 0xFF	; 255
    27b8:	80 81       	ld	r24, Z
    27ba:	91 81       	ldd	r25, Z+1	; 0x01
    27bc:	8d 93       	st	X+, r24
    27be:	9c 93       	st	X, r25
    27c0:	fe 01       	movw	r30, r28
    27c2:	e9 54       	subi	r30, 0x49	; 73
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	80 81       	ld	r24, Z
    27c8:	91 81       	ldd	r25, Z+1	; 0x01
    27ca:	01 97       	sbiw	r24, 0x01	; 1
    27cc:	f1 f7       	brne	.-4      	; 0x27ca <main+0xe4a>
    27ce:	fe 01       	movw	r30, r28
    27d0:	e9 54       	subi	r30, 0x49	; 73
    27d2:	ff 4f       	sbci	r31, 0xFF	; 255
    27d4:	91 83       	std	Z+1, r25	; 0x01
    27d6:	80 83       	st	Z, r24
			_delay_ms(150);
			LCD_voidClearLCD();
    27d8:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
			i++;
    27dc:	de 01       	movw	r26, r28
    27de:	a5 5f       	subi	r26, 0xF5	; 245
    27e0:	be 4f       	sbci	r27, 0xFE	; 254
    27e2:	fe 01       	movw	r30, r28
    27e4:	e5 5f       	subi	r30, 0xF5	; 245
    27e6:	fe 4f       	sbci	r31, 0xFE	; 254
    27e8:	80 81       	ld	r24, Z
    27ea:	8f 5f       	subi	r24, 0xFF	; 255
    27ec:	8c 93       	st	X, r24
			LCD_voidWriteSpecialCharacter(ARR_u8ThirdArabicLetter,2,1,i);
    27ee:	ce 01       	movw	r24, r28
    27f0:	84 5e       	subi	r24, 0xE4	; 228
    27f2:	9e 4f       	sbci	r25, 0xFE	; 254
    27f4:	fe 01       	movw	r30, r28
    27f6:	e5 5f       	subi	r30, 0xF5	; 245
    27f8:	fe 4f       	sbci	r31, 0xFE	; 254
    27fa:	62 e0       	ldi	r22, 0x02	; 2
    27fc:	41 e0       	ldi	r20, 0x01	; 1
    27fe:	20 81       	ld	r18, Z
    2800:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    2804:	fe 01       	movw	r30, r28
    2806:	ed 54       	subi	r30, 0x4D	; 77
    2808:	ff 4f       	sbci	r31, 0xFF	; 255
    280a:	80 e0       	ldi	r24, 0x00	; 0
    280c:	90 e0       	ldi	r25, 0x00	; 0
    280e:	a6 e1       	ldi	r26, 0x16	; 22
    2810:	b3 e4       	ldi	r27, 0x43	; 67
    2812:	80 83       	st	Z, r24
    2814:	91 83       	std	Z+1, r25	; 0x01
    2816:	a2 83       	std	Z+2, r26	; 0x02
    2818:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    281a:	8e 01       	movw	r16, r28
    281c:	01 55       	subi	r16, 0x51	; 81
    281e:	1f 4f       	sbci	r17, 0xFF	; 255
    2820:	fe 01       	movw	r30, r28
    2822:	ed 54       	subi	r30, 0x4D	; 77
    2824:	ff 4f       	sbci	r31, 0xFF	; 255
    2826:	60 81       	ld	r22, Z
    2828:	71 81       	ldd	r23, Z+1	; 0x01
    282a:	82 81       	ldd	r24, Z+2	; 0x02
    282c:	93 81       	ldd	r25, Z+3	; 0x03
    282e:	20 e0       	ldi	r18, 0x00	; 0
    2830:	30 e0       	ldi	r19, 0x00	; 0
    2832:	4a ef       	ldi	r20, 0xFA	; 250
    2834:	54 e4       	ldi	r21, 0x44	; 68
    2836:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    283a:	dc 01       	movw	r26, r24
    283c:	cb 01       	movw	r24, r22
    283e:	f8 01       	movw	r30, r16
    2840:	80 83       	st	Z, r24
    2842:	91 83       	std	Z+1, r25	; 0x01
    2844:	a2 83       	std	Z+2, r26	; 0x02
    2846:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2848:	fe 01       	movw	r30, r28
    284a:	e1 55       	subi	r30, 0x51	; 81
    284c:	ff 4f       	sbci	r31, 0xFF	; 255
    284e:	60 81       	ld	r22, Z
    2850:	71 81       	ldd	r23, Z+1	; 0x01
    2852:	82 81       	ldd	r24, Z+2	; 0x02
    2854:	93 81       	ldd	r25, Z+3	; 0x03
    2856:	20 e0       	ldi	r18, 0x00	; 0
    2858:	30 e0       	ldi	r19, 0x00	; 0
    285a:	40 e8       	ldi	r20, 0x80	; 128
    285c:	5f e3       	ldi	r21, 0x3F	; 63
    285e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2862:	88 23       	and	r24, r24
    2864:	44 f4       	brge	.+16     	; 0x2876 <main+0xef6>
		__ticks = 1;
    2866:	fe 01       	movw	r30, r28
    2868:	e3 55       	subi	r30, 0x53	; 83
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	81 e0       	ldi	r24, 0x01	; 1
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	91 83       	std	Z+1, r25	; 0x01
    2872:	80 83       	st	Z, r24
    2874:	64 c0       	rjmp	.+200    	; 0x293e <main+0xfbe>
	else if (__tmp > 65535)
    2876:	fe 01       	movw	r30, r28
    2878:	e1 55       	subi	r30, 0x51	; 81
    287a:	ff 4f       	sbci	r31, 0xFF	; 255
    287c:	60 81       	ld	r22, Z
    287e:	71 81       	ldd	r23, Z+1	; 0x01
    2880:	82 81       	ldd	r24, Z+2	; 0x02
    2882:	93 81       	ldd	r25, Z+3	; 0x03
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	3f ef       	ldi	r19, 0xFF	; 255
    2888:	4f e7       	ldi	r20, 0x7F	; 127
    288a:	57 e4       	ldi	r21, 0x47	; 71
    288c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2890:	18 16       	cp	r1, r24
    2892:	0c f0       	brlt	.+2      	; 0x2896 <main+0xf16>
    2894:	43 c0       	rjmp	.+134    	; 0x291c <main+0xf9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2896:	fe 01       	movw	r30, r28
    2898:	ed 54       	subi	r30, 0x4D	; 77
    289a:	ff 4f       	sbci	r31, 0xFF	; 255
    289c:	60 81       	ld	r22, Z
    289e:	71 81       	ldd	r23, Z+1	; 0x01
    28a0:	82 81       	ldd	r24, Z+2	; 0x02
    28a2:	93 81       	ldd	r25, Z+3	; 0x03
    28a4:	20 e0       	ldi	r18, 0x00	; 0
    28a6:	30 e0       	ldi	r19, 0x00	; 0
    28a8:	40 e2       	ldi	r20, 0x20	; 32
    28aa:	51 e4       	ldi	r21, 0x41	; 65
    28ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28b0:	dc 01       	movw	r26, r24
    28b2:	cb 01       	movw	r24, r22
    28b4:	8e 01       	movw	r16, r28
    28b6:	03 55       	subi	r16, 0x53	; 83
    28b8:	1f 4f       	sbci	r17, 0xFF	; 255
    28ba:	bc 01       	movw	r22, r24
    28bc:	cd 01       	movw	r24, r26
    28be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28c2:	dc 01       	movw	r26, r24
    28c4:	cb 01       	movw	r24, r22
    28c6:	f8 01       	movw	r30, r16
    28c8:	91 83       	std	Z+1, r25	; 0x01
    28ca:	80 83       	st	Z, r24
    28cc:	1f c0       	rjmp	.+62     	; 0x290c <main+0xf8c>
    28ce:	fe 01       	movw	r30, r28
    28d0:	e5 55       	subi	r30, 0x55	; 85
    28d2:	ff 4f       	sbci	r31, 0xFF	; 255
    28d4:	88 ec       	ldi	r24, 0xC8	; 200
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	91 83       	std	Z+1, r25	; 0x01
    28da:	80 83       	st	Z, r24
    28dc:	fe 01       	movw	r30, r28
    28de:	e5 55       	subi	r30, 0x55	; 85
    28e0:	ff 4f       	sbci	r31, 0xFF	; 255
    28e2:	80 81       	ld	r24, Z
    28e4:	91 81       	ldd	r25, Z+1	; 0x01
    28e6:	01 97       	sbiw	r24, 0x01	; 1
    28e8:	f1 f7       	brne	.-4      	; 0x28e6 <main+0xf66>
    28ea:	fe 01       	movw	r30, r28
    28ec:	e5 55       	subi	r30, 0x55	; 85
    28ee:	ff 4f       	sbci	r31, 0xFF	; 255
    28f0:	91 83       	std	Z+1, r25	; 0x01
    28f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28f4:	de 01       	movw	r26, r28
    28f6:	a3 55       	subi	r26, 0x53	; 83
    28f8:	bf 4f       	sbci	r27, 0xFF	; 255
    28fa:	fe 01       	movw	r30, r28
    28fc:	e3 55       	subi	r30, 0x53	; 83
    28fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2900:	80 81       	ld	r24, Z
    2902:	91 81       	ldd	r25, Z+1	; 0x01
    2904:	01 97       	sbiw	r24, 0x01	; 1
    2906:	11 96       	adiw	r26, 0x01	; 1
    2908:	9c 93       	st	X, r25
    290a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    290c:	fe 01       	movw	r30, r28
    290e:	e3 55       	subi	r30, 0x53	; 83
    2910:	ff 4f       	sbci	r31, 0xFF	; 255
    2912:	80 81       	ld	r24, Z
    2914:	91 81       	ldd	r25, Z+1	; 0x01
    2916:	00 97       	sbiw	r24, 0x00	; 0
    2918:	d1 f6       	brne	.-76     	; 0x28ce <main+0xf4e>
    291a:	27 c0       	rjmp	.+78     	; 0x296a <main+0xfea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    291c:	8e 01       	movw	r16, r28
    291e:	03 55       	subi	r16, 0x53	; 83
    2920:	1f 4f       	sbci	r17, 0xFF	; 255
    2922:	fe 01       	movw	r30, r28
    2924:	e1 55       	subi	r30, 0x51	; 81
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	60 81       	ld	r22, Z
    292a:	71 81       	ldd	r23, Z+1	; 0x01
    292c:	82 81       	ldd	r24, Z+2	; 0x02
    292e:	93 81       	ldd	r25, Z+3	; 0x03
    2930:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2934:	dc 01       	movw	r26, r24
    2936:	cb 01       	movw	r24, r22
    2938:	f8 01       	movw	r30, r16
    293a:	91 83       	std	Z+1, r25	; 0x01
    293c:	80 83       	st	Z, r24
    293e:	de 01       	movw	r26, r28
    2940:	a7 55       	subi	r26, 0x57	; 87
    2942:	bf 4f       	sbci	r27, 0xFF	; 255
    2944:	fe 01       	movw	r30, r28
    2946:	e3 55       	subi	r30, 0x53	; 83
    2948:	ff 4f       	sbci	r31, 0xFF	; 255
    294a:	80 81       	ld	r24, Z
    294c:	91 81       	ldd	r25, Z+1	; 0x01
    294e:	8d 93       	st	X+, r24
    2950:	9c 93       	st	X, r25
    2952:	fe 01       	movw	r30, r28
    2954:	e7 55       	subi	r30, 0x57	; 87
    2956:	ff 4f       	sbci	r31, 0xFF	; 255
    2958:	80 81       	ld	r24, Z
    295a:	91 81       	ldd	r25, Z+1	; 0x01
    295c:	01 97       	sbiw	r24, 0x01	; 1
    295e:	f1 f7       	brne	.-4      	; 0x295c <main+0xfdc>
    2960:	fe 01       	movw	r30, r28
    2962:	e7 55       	subi	r30, 0x57	; 87
    2964:	ff 4f       	sbci	r31, 0xFF	; 255
    2966:	91 83       	std	Z+1, r25	; 0x01
    2968:	80 83       	st	Z, r24
			_delay_ms(150);
			LCD_voidClearLCD();
    296a:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
    296e:	fe 01       	movw	r30, r28
    2970:	eb 55       	subi	r30, 0x5B	; 91
    2972:	ff 4f       	sbci	r31, 0xFF	; 255
    2974:	80 e0       	ldi	r24, 0x00	; 0
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	a6 e1       	ldi	r26, 0x16	; 22
    297a:	b3 e4       	ldi	r27, 0x43	; 67
    297c:	80 83       	st	Z, r24
    297e:	91 83       	std	Z+1, r25	; 0x01
    2980:	a2 83       	std	Z+2, r26	; 0x02
    2982:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2984:	8e 01       	movw	r16, r28
    2986:	0f 55       	subi	r16, 0x5F	; 95
    2988:	1f 4f       	sbci	r17, 0xFF	; 255
    298a:	fe 01       	movw	r30, r28
    298c:	eb 55       	subi	r30, 0x5B	; 91
    298e:	ff 4f       	sbci	r31, 0xFF	; 255
    2990:	60 81       	ld	r22, Z
    2992:	71 81       	ldd	r23, Z+1	; 0x01
    2994:	82 81       	ldd	r24, Z+2	; 0x02
    2996:	93 81       	ldd	r25, Z+3	; 0x03
    2998:	20 e0       	ldi	r18, 0x00	; 0
    299a:	30 e0       	ldi	r19, 0x00	; 0
    299c:	4a ef       	ldi	r20, 0xFA	; 250
    299e:	54 e4       	ldi	r21, 0x44	; 68
    29a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29a4:	dc 01       	movw	r26, r24
    29a6:	cb 01       	movw	r24, r22
    29a8:	f8 01       	movw	r30, r16
    29aa:	80 83       	st	Z, r24
    29ac:	91 83       	std	Z+1, r25	; 0x01
    29ae:	a2 83       	std	Z+2, r26	; 0x02
    29b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29b2:	fe 01       	movw	r30, r28
    29b4:	ef 55       	subi	r30, 0x5F	; 95
    29b6:	ff 4f       	sbci	r31, 0xFF	; 255
    29b8:	60 81       	ld	r22, Z
    29ba:	71 81       	ldd	r23, Z+1	; 0x01
    29bc:	82 81       	ldd	r24, Z+2	; 0x02
    29be:	93 81       	ldd	r25, Z+3	; 0x03
    29c0:	20 e0       	ldi	r18, 0x00	; 0
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	40 e8       	ldi	r20, 0x80	; 128
    29c6:	5f e3       	ldi	r21, 0x3F	; 63
    29c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29cc:	88 23       	and	r24, r24
    29ce:	44 f4       	brge	.+16     	; 0x29e0 <main+0x1060>
		__ticks = 1;
    29d0:	fe 01       	movw	r30, r28
    29d2:	e1 56       	subi	r30, 0x61	; 97
    29d4:	ff 4f       	sbci	r31, 0xFF	; 255
    29d6:	81 e0       	ldi	r24, 0x01	; 1
    29d8:	90 e0       	ldi	r25, 0x00	; 0
    29da:	91 83       	std	Z+1, r25	; 0x01
    29dc:	80 83       	st	Z, r24
    29de:	64 c0       	rjmp	.+200    	; 0x2aa8 <main+0x1128>
	else if (__tmp > 65535)
    29e0:	fe 01       	movw	r30, r28
    29e2:	ef 55       	subi	r30, 0x5F	; 95
    29e4:	ff 4f       	sbci	r31, 0xFF	; 255
    29e6:	60 81       	ld	r22, Z
    29e8:	71 81       	ldd	r23, Z+1	; 0x01
    29ea:	82 81       	ldd	r24, Z+2	; 0x02
    29ec:	93 81       	ldd	r25, Z+3	; 0x03
    29ee:	20 e0       	ldi	r18, 0x00	; 0
    29f0:	3f ef       	ldi	r19, 0xFF	; 255
    29f2:	4f e7       	ldi	r20, 0x7F	; 127
    29f4:	57 e4       	ldi	r21, 0x47	; 71
    29f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29fa:	18 16       	cp	r1, r24
    29fc:	0c f0       	brlt	.+2      	; 0x2a00 <main+0x1080>
    29fe:	43 c0       	rjmp	.+134    	; 0x2a86 <main+0x1106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a00:	fe 01       	movw	r30, r28
    2a02:	eb 55       	subi	r30, 0x5B	; 91
    2a04:	ff 4f       	sbci	r31, 0xFF	; 255
    2a06:	60 81       	ld	r22, Z
    2a08:	71 81       	ldd	r23, Z+1	; 0x01
    2a0a:	82 81       	ldd	r24, Z+2	; 0x02
    2a0c:	93 81       	ldd	r25, Z+3	; 0x03
    2a0e:	20 e0       	ldi	r18, 0x00	; 0
    2a10:	30 e0       	ldi	r19, 0x00	; 0
    2a12:	40 e2       	ldi	r20, 0x20	; 32
    2a14:	51 e4       	ldi	r21, 0x41	; 65
    2a16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a1a:	dc 01       	movw	r26, r24
    2a1c:	cb 01       	movw	r24, r22
    2a1e:	8e 01       	movw	r16, r28
    2a20:	01 56       	subi	r16, 0x61	; 97
    2a22:	1f 4f       	sbci	r17, 0xFF	; 255
    2a24:	bc 01       	movw	r22, r24
    2a26:	cd 01       	movw	r24, r26
    2a28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a2c:	dc 01       	movw	r26, r24
    2a2e:	cb 01       	movw	r24, r22
    2a30:	f8 01       	movw	r30, r16
    2a32:	91 83       	std	Z+1, r25	; 0x01
    2a34:	80 83       	st	Z, r24
    2a36:	1f c0       	rjmp	.+62     	; 0x2a76 <main+0x10f6>
    2a38:	fe 01       	movw	r30, r28
    2a3a:	e3 56       	subi	r30, 0x63	; 99
    2a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a3e:	88 ec       	ldi	r24, 0xC8	; 200
    2a40:	90 e0       	ldi	r25, 0x00	; 0
    2a42:	91 83       	std	Z+1, r25	; 0x01
    2a44:	80 83       	st	Z, r24
    2a46:	fe 01       	movw	r30, r28
    2a48:	e3 56       	subi	r30, 0x63	; 99
    2a4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4c:	80 81       	ld	r24, Z
    2a4e:	91 81       	ldd	r25, Z+1	; 0x01
    2a50:	01 97       	sbiw	r24, 0x01	; 1
    2a52:	f1 f7       	brne	.-4      	; 0x2a50 <main+0x10d0>
    2a54:	fe 01       	movw	r30, r28
    2a56:	e3 56       	subi	r30, 0x63	; 99
    2a58:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5a:	91 83       	std	Z+1, r25	; 0x01
    2a5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a5e:	de 01       	movw	r26, r28
    2a60:	a1 56       	subi	r26, 0x61	; 97
    2a62:	bf 4f       	sbci	r27, 0xFF	; 255
    2a64:	fe 01       	movw	r30, r28
    2a66:	e1 56       	subi	r30, 0x61	; 97
    2a68:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6a:	80 81       	ld	r24, Z
    2a6c:	91 81       	ldd	r25, Z+1	; 0x01
    2a6e:	01 97       	sbiw	r24, 0x01	; 1
    2a70:	11 96       	adiw	r26, 0x01	; 1
    2a72:	9c 93       	st	X, r25
    2a74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a76:	fe 01       	movw	r30, r28
    2a78:	e1 56       	subi	r30, 0x61	; 97
    2a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7c:	80 81       	ld	r24, Z
    2a7e:	91 81       	ldd	r25, Z+1	; 0x01
    2a80:	00 97       	sbiw	r24, 0x00	; 0
    2a82:	d1 f6       	brne	.-76     	; 0x2a38 <main+0x10b8>
    2a84:	27 c0       	rjmp	.+78     	; 0x2ad4 <main+0x1154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a86:	8e 01       	movw	r16, r28
    2a88:	01 56       	subi	r16, 0x61	; 97
    2a8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a8c:	fe 01       	movw	r30, r28
    2a8e:	ef 55       	subi	r30, 0x5F	; 95
    2a90:	ff 4f       	sbci	r31, 0xFF	; 255
    2a92:	60 81       	ld	r22, Z
    2a94:	71 81       	ldd	r23, Z+1	; 0x01
    2a96:	82 81       	ldd	r24, Z+2	; 0x02
    2a98:	93 81       	ldd	r25, Z+3	; 0x03
    2a9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a9e:	dc 01       	movw	r26, r24
    2aa0:	cb 01       	movw	r24, r22
    2aa2:	f8 01       	movw	r30, r16
    2aa4:	91 83       	std	Z+1, r25	; 0x01
    2aa6:	80 83       	st	Z, r24
    2aa8:	de 01       	movw	r26, r28
    2aaa:	a5 56       	subi	r26, 0x65	; 101
    2aac:	bf 4f       	sbci	r27, 0xFF	; 255
    2aae:	fe 01       	movw	r30, r28
    2ab0:	e1 56       	subi	r30, 0x61	; 97
    2ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab4:	80 81       	ld	r24, Z
    2ab6:	91 81       	ldd	r25, Z+1	; 0x01
    2ab8:	8d 93       	st	X+, r24
    2aba:	9c 93       	st	X, r25
    2abc:	fe 01       	movw	r30, r28
    2abe:	e5 56       	subi	r30, 0x65	; 101
    2ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac2:	80 81       	ld	r24, Z
    2ac4:	91 81       	ldd	r25, Z+1	; 0x01
    2ac6:	01 97       	sbiw	r24, 0x01	; 1
    2ac8:	f1 f7       	brne	.-4      	; 0x2ac6 <main+0x1146>
    2aca:	fe 01       	movw	r30, r28
    2acc:	e5 56       	subi	r30, 0x65	; 101
    2ace:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad0:	91 83       	std	Z+1, r25	; 0x01
    2ad2:	80 83       	st	Z, r24
		LCD_voidClearLCD();
		LCD_voidSendString("I can RUN");
		_delay_ms(2000);
		LCD_voidClearLCD();
		u8 i ;
		for(i=0 ; i<13 ;i++ ){
    2ad4:	de 01       	movw	r26, r28
    2ad6:	a5 5f       	subi	r26, 0xF5	; 245
    2ad8:	be 4f       	sbci	r27, 0xFE	; 254
    2ada:	fe 01       	movw	r30, r28
    2adc:	e5 5f       	subi	r30, 0xF5	; 245
    2ade:	fe 4f       	sbci	r31, 0xFE	; 254
    2ae0:	80 81       	ld	r24, Z
    2ae2:	8f 5f       	subi	r24, 0xFF	; 255
    2ae4:	8c 93       	st	X, r24
    2ae6:	fe 01       	movw	r30, r28
    2ae8:	e5 5f       	subi	r30, 0xF5	; 245
    2aea:	fe 4f       	sbci	r31, 0xFE	; 254
    2aec:	80 81       	ld	r24, Z
    2aee:	8d 30       	cpi	r24, 0x0D	; 13
    2af0:	08 f4       	brcc	.+2      	; 0x2af4 <main+0x1174>
    2af2:	f6 cc       	rjmp	.-1556   	; 0x24e0 <main+0xb60>
			_delay_ms(150);
			LCD_voidClearLCD();
			_delay_ms(150);

		}
		LCD_voidSendString("I love football");
    2af4:	8a e8       	ldi	r24, 0x8A	; 138
    2af6:	90 e0       	ldi	r25, 0x00	; 0
    2af8:	0e 94 2e 0c 	call	0x185c	; 0x185c <LCD_voidSendString>
    2afc:	fe 01       	movw	r30, r28
    2afe:	e9 56       	subi	r30, 0x69	; 105
    2b00:	ff 4f       	sbci	r31, 0xFF	; 255
    2b02:	80 e0       	ldi	r24, 0x00	; 0
    2b04:	90 e0       	ldi	r25, 0x00	; 0
    2b06:	aa ef       	ldi	r26, 0xFA	; 250
    2b08:	b4 e4       	ldi	r27, 0x44	; 68
    2b0a:	80 83       	st	Z, r24
    2b0c:	91 83       	std	Z+1, r25	; 0x01
    2b0e:	a2 83       	std	Z+2, r26	; 0x02
    2b10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b12:	8e 01       	movw	r16, r28
    2b14:	0d 56       	subi	r16, 0x6D	; 109
    2b16:	1f 4f       	sbci	r17, 0xFF	; 255
    2b18:	fe 01       	movw	r30, r28
    2b1a:	e9 56       	subi	r30, 0x69	; 105
    2b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b1e:	60 81       	ld	r22, Z
    2b20:	71 81       	ldd	r23, Z+1	; 0x01
    2b22:	82 81       	ldd	r24, Z+2	; 0x02
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	20 e0       	ldi	r18, 0x00	; 0
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	4a ef       	ldi	r20, 0xFA	; 250
    2b2c:	54 e4       	ldi	r21, 0x44	; 68
    2b2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b32:	dc 01       	movw	r26, r24
    2b34:	cb 01       	movw	r24, r22
    2b36:	f8 01       	movw	r30, r16
    2b38:	80 83       	st	Z, r24
    2b3a:	91 83       	std	Z+1, r25	; 0x01
    2b3c:	a2 83       	std	Z+2, r26	; 0x02
    2b3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b40:	fe 01       	movw	r30, r28
    2b42:	ed 56       	subi	r30, 0x6D	; 109
    2b44:	ff 4f       	sbci	r31, 0xFF	; 255
    2b46:	60 81       	ld	r22, Z
    2b48:	71 81       	ldd	r23, Z+1	; 0x01
    2b4a:	82 81       	ldd	r24, Z+2	; 0x02
    2b4c:	93 81       	ldd	r25, Z+3	; 0x03
    2b4e:	20 e0       	ldi	r18, 0x00	; 0
    2b50:	30 e0       	ldi	r19, 0x00	; 0
    2b52:	40 e8       	ldi	r20, 0x80	; 128
    2b54:	5f e3       	ldi	r21, 0x3F	; 63
    2b56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b5a:	88 23       	and	r24, r24
    2b5c:	44 f4       	brge	.+16     	; 0x2b6e <main+0x11ee>
		__ticks = 1;
    2b5e:	fe 01       	movw	r30, r28
    2b60:	ef 56       	subi	r30, 0x6F	; 111
    2b62:	ff 4f       	sbci	r31, 0xFF	; 255
    2b64:	81 e0       	ldi	r24, 0x01	; 1
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	80 83       	st	Z, r24
    2b6c:	64 c0       	rjmp	.+200    	; 0x2c36 <main+0x12b6>
	else if (__tmp > 65535)
    2b6e:	fe 01       	movw	r30, r28
    2b70:	ed 56       	subi	r30, 0x6D	; 109
    2b72:	ff 4f       	sbci	r31, 0xFF	; 255
    2b74:	60 81       	ld	r22, Z
    2b76:	71 81       	ldd	r23, Z+1	; 0x01
    2b78:	82 81       	ldd	r24, Z+2	; 0x02
    2b7a:	93 81       	ldd	r25, Z+3	; 0x03
    2b7c:	20 e0       	ldi	r18, 0x00	; 0
    2b7e:	3f ef       	ldi	r19, 0xFF	; 255
    2b80:	4f e7       	ldi	r20, 0x7F	; 127
    2b82:	57 e4       	ldi	r21, 0x47	; 71
    2b84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b88:	18 16       	cp	r1, r24
    2b8a:	0c f0       	brlt	.+2      	; 0x2b8e <main+0x120e>
    2b8c:	43 c0       	rjmp	.+134    	; 0x2c14 <main+0x1294>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b8e:	fe 01       	movw	r30, r28
    2b90:	e9 56       	subi	r30, 0x69	; 105
    2b92:	ff 4f       	sbci	r31, 0xFF	; 255
    2b94:	60 81       	ld	r22, Z
    2b96:	71 81       	ldd	r23, Z+1	; 0x01
    2b98:	82 81       	ldd	r24, Z+2	; 0x02
    2b9a:	93 81       	ldd	r25, Z+3	; 0x03
    2b9c:	20 e0       	ldi	r18, 0x00	; 0
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	40 e2       	ldi	r20, 0x20	; 32
    2ba2:	51 e4       	ldi	r21, 0x41	; 65
    2ba4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ba8:	dc 01       	movw	r26, r24
    2baa:	cb 01       	movw	r24, r22
    2bac:	8e 01       	movw	r16, r28
    2bae:	0f 56       	subi	r16, 0x6F	; 111
    2bb0:	1f 4f       	sbci	r17, 0xFF	; 255
    2bb2:	bc 01       	movw	r22, r24
    2bb4:	cd 01       	movw	r24, r26
    2bb6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bba:	dc 01       	movw	r26, r24
    2bbc:	cb 01       	movw	r24, r22
    2bbe:	f8 01       	movw	r30, r16
    2bc0:	91 83       	std	Z+1, r25	; 0x01
    2bc2:	80 83       	st	Z, r24
    2bc4:	1f c0       	rjmp	.+62     	; 0x2c04 <main+0x1284>
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	e1 57       	subi	r30, 0x71	; 113
    2bca:	ff 4f       	sbci	r31, 0xFF	; 255
    2bcc:	88 ec       	ldi	r24, 0xC8	; 200
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	91 83       	std	Z+1, r25	; 0x01
    2bd2:	80 83       	st	Z, r24
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	e1 57       	subi	r30, 0x71	; 113
    2bd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bda:	80 81       	ld	r24, Z
    2bdc:	91 81       	ldd	r25, Z+1	; 0x01
    2bde:	01 97       	sbiw	r24, 0x01	; 1
    2be0:	f1 f7       	brne	.-4      	; 0x2bde <main+0x125e>
    2be2:	fe 01       	movw	r30, r28
    2be4:	e1 57       	subi	r30, 0x71	; 113
    2be6:	ff 4f       	sbci	r31, 0xFF	; 255
    2be8:	91 83       	std	Z+1, r25	; 0x01
    2bea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bec:	de 01       	movw	r26, r28
    2bee:	af 56       	subi	r26, 0x6F	; 111
    2bf0:	bf 4f       	sbci	r27, 0xFF	; 255
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	ef 56       	subi	r30, 0x6F	; 111
    2bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf8:	80 81       	ld	r24, Z
    2bfa:	91 81       	ldd	r25, Z+1	; 0x01
    2bfc:	01 97       	sbiw	r24, 0x01	; 1
    2bfe:	11 96       	adiw	r26, 0x01	; 1
    2c00:	9c 93       	st	X, r25
    2c02:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c04:	fe 01       	movw	r30, r28
    2c06:	ef 56       	subi	r30, 0x6F	; 111
    2c08:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0a:	80 81       	ld	r24, Z
    2c0c:	91 81       	ldd	r25, Z+1	; 0x01
    2c0e:	00 97       	sbiw	r24, 0x00	; 0
    2c10:	d1 f6       	brne	.-76     	; 0x2bc6 <main+0x1246>
    2c12:	27 c0       	rjmp	.+78     	; 0x2c62 <main+0x12e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c14:	8e 01       	movw	r16, r28
    2c16:	0f 56       	subi	r16, 0x6F	; 111
    2c18:	1f 4f       	sbci	r17, 0xFF	; 255
    2c1a:	fe 01       	movw	r30, r28
    2c1c:	ed 56       	subi	r30, 0x6D	; 109
    2c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c20:	60 81       	ld	r22, Z
    2c22:	71 81       	ldd	r23, Z+1	; 0x01
    2c24:	82 81       	ldd	r24, Z+2	; 0x02
    2c26:	93 81       	ldd	r25, Z+3	; 0x03
    2c28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c2c:	dc 01       	movw	r26, r24
    2c2e:	cb 01       	movw	r24, r22
    2c30:	f8 01       	movw	r30, r16
    2c32:	91 83       	std	Z+1, r25	; 0x01
    2c34:	80 83       	st	Z, r24
    2c36:	de 01       	movw	r26, r28
    2c38:	a3 57       	subi	r26, 0x73	; 115
    2c3a:	bf 4f       	sbci	r27, 0xFF	; 255
    2c3c:	fe 01       	movw	r30, r28
    2c3e:	ef 56       	subi	r30, 0x6F	; 111
    2c40:	ff 4f       	sbci	r31, 0xFF	; 255
    2c42:	80 81       	ld	r24, Z
    2c44:	91 81       	ldd	r25, Z+1	; 0x01
    2c46:	8d 93       	st	X+, r24
    2c48:	9c 93       	st	X, r25
    2c4a:	fe 01       	movw	r30, r28
    2c4c:	e3 57       	subi	r30, 0x73	; 115
    2c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c50:	80 81       	ld	r24, Z
    2c52:	91 81       	ldd	r25, Z+1	; 0x01
    2c54:	01 97       	sbiw	r24, 0x01	; 1
    2c56:	f1 f7       	brne	.-4      	; 0x2c54 <main+0x12d4>
    2c58:	fe 01       	movw	r30, r28
    2c5a:	e3 57       	subi	r30, 0x73	; 115
    2c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5e:	91 83       	std	Z+1, r25	; 0x01
    2c60:	80 83       	st	Z, r24
		_delay_ms(2000);
		LCD_voidClearLCD();
    2c62:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		for(i=0 ; i<13 ;i++ ){
    2c66:	fe 01       	movw	r30, r28
    2c68:	e5 5f       	subi	r30, 0xF5	; 245
    2c6a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c6c:	10 82       	st	Z, r1
    2c6e:	03 c3       	rjmp	.+1542   	; 0x3276 <main+0x18f6>
			LCD_voidWriteSpecialCharacter(ARR_u8FourthArabicLetter,0,1,i);
    2c70:	ce 01       	movw	r24, r28
    2c72:	8c 5d       	subi	r24, 0xDC	; 220
    2c74:	9e 4f       	sbci	r25, 0xFE	; 254
    2c76:	fe 01       	movw	r30, r28
    2c78:	e5 5f       	subi	r30, 0xF5	; 245
    2c7a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c7c:	60 e0       	ldi	r22, 0x00	; 0
    2c7e:	41 e0       	ldi	r20, 0x01	; 1
    2c80:	20 81       	ld	r18, Z
    2c82:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    2c86:	fe 01       	movw	r30, r28
    2c88:	e7 57       	subi	r30, 0x77	; 119
    2c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8c:	80 e0       	ldi	r24, 0x00	; 0
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	a6 e9       	ldi	r26, 0x96	; 150
    2c92:	b3 e4       	ldi	r27, 0x43	; 67
    2c94:	80 83       	st	Z, r24
    2c96:	91 83       	std	Z+1, r25	; 0x01
    2c98:	a2 83       	std	Z+2, r26	; 0x02
    2c9a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c9c:	8e 01       	movw	r16, r28
    2c9e:	0b 57       	subi	r16, 0x7B	; 123
    2ca0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e7 57       	subi	r30, 0x77	; 119
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	60 81       	ld	r22, Z
    2caa:	71 81       	ldd	r23, Z+1	; 0x01
    2cac:	82 81       	ldd	r24, Z+2	; 0x02
    2cae:	93 81       	ldd	r25, Z+3	; 0x03
    2cb0:	20 e0       	ldi	r18, 0x00	; 0
    2cb2:	30 e0       	ldi	r19, 0x00	; 0
    2cb4:	4a ef       	ldi	r20, 0xFA	; 250
    2cb6:	54 e4       	ldi	r21, 0x44	; 68
    2cb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cbc:	dc 01       	movw	r26, r24
    2cbe:	cb 01       	movw	r24, r22
    2cc0:	f8 01       	movw	r30, r16
    2cc2:	80 83       	st	Z, r24
    2cc4:	91 83       	std	Z+1, r25	; 0x01
    2cc6:	a2 83       	std	Z+2, r26	; 0x02
    2cc8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cca:	fe 01       	movw	r30, r28
    2ccc:	eb 57       	subi	r30, 0x7B	; 123
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	20 e0       	ldi	r18, 0x00	; 0
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	40 e8       	ldi	r20, 0x80	; 128
    2cde:	5f e3       	ldi	r21, 0x3F	; 63
    2ce0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ce4:	88 23       	and	r24, r24
    2ce6:	44 f4       	brge	.+16     	; 0x2cf8 <main+0x1378>
		__ticks = 1;
    2ce8:	fe 01       	movw	r30, r28
    2cea:	ed 57       	subi	r30, 0x7D	; 125
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	91 83       	std	Z+1, r25	; 0x01
    2cf4:	80 83       	st	Z, r24
    2cf6:	64 c0       	rjmp	.+200    	; 0x2dc0 <main+0x1440>
	else if (__tmp > 65535)
    2cf8:	fe 01       	movw	r30, r28
    2cfa:	eb 57       	subi	r30, 0x7B	; 123
    2cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfe:	60 81       	ld	r22, Z
    2d00:	71 81       	ldd	r23, Z+1	; 0x01
    2d02:	82 81       	ldd	r24, Z+2	; 0x02
    2d04:	93 81       	ldd	r25, Z+3	; 0x03
    2d06:	20 e0       	ldi	r18, 0x00	; 0
    2d08:	3f ef       	ldi	r19, 0xFF	; 255
    2d0a:	4f e7       	ldi	r20, 0x7F	; 127
    2d0c:	57 e4       	ldi	r21, 0x47	; 71
    2d0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d12:	18 16       	cp	r1, r24
    2d14:	0c f0       	brlt	.+2      	; 0x2d18 <main+0x1398>
    2d16:	43 c0       	rjmp	.+134    	; 0x2d9e <main+0x141e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d18:	fe 01       	movw	r30, r28
    2d1a:	e7 57       	subi	r30, 0x77	; 119
    2d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1e:	60 81       	ld	r22, Z
    2d20:	71 81       	ldd	r23, Z+1	; 0x01
    2d22:	82 81       	ldd	r24, Z+2	; 0x02
    2d24:	93 81       	ldd	r25, Z+3	; 0x03
    2d26:	20 e0       	ldi	r18, 0x00	; 0
    2d28:	30 e0       	ldi	r19, 0x00	; 0
    2d2a:	40 e2       	ldi	r20, 0x20	; 32
    2d2c:	51 e4       	ldi	r21, 0x41	; 65
    2d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d32:	dc 01       	movw	r26, r24
    2d34:	cb 01       	movw	r24, r22
    2d36:	8e 01       	movw	r16, r28
    2d38:	0d 57       	subi	r16, 0x7D	; 125
    2d3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d3c:	bc 01       	movw	r22, r24
    2d3e:	cd 01       	movw	r24, r26
    2d40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d44:	dc 01       	movw	r26, r24
    2d46:	cb 01       	movw	r24, r22
    2d48:	f8 01       	movw	r30, r16
    2d4a:	91 83       	std	Z+1, r25	; 0x01
    2d4c:	80 83       	st	Z, r24
    2d4e:	1f c0       	rjmp	.+62     	; 0x2d8e <main+0x140e>
    2d50:	fe 01       	movw	r30, r28
    2d52:	ef 57       	subi	r30, 0x7F	; 127
    2d54:	ff 4f       	sbci	r31, 0xFF	; 255
    2d56:	88 ec       	ldi	r24, 0xC8	; 200
    2d58:	90 e0       	ldi	r25, 0x00	; 0
    2d5a:	91 83       	std	Z+1, r25	; 0x01
    2d5c:	80 83       	st	Z, r24
    2d5e:	fe 01       	movw	r30, r28
    2d60:	ef 57       	subi	r30, 0x7F	; 127
    2d62:	ff 4f       	sbci	r31, 0xFF	; 255
    2d64:	80 81       	ld	r24, Z
    2d66:	91 81       	ldd	r25, Z+1	; 0x01
    2d68:	01 97       	sbiw	r24, 0x01	; 1
    2d6a:	f1 f7       	brne	.-4      	; 0x2d68 <main+0x13e8>
    2d6c:	fe 01       	movw	r30, r28
    2d6e:	ef 57       	subi	r30, 0x7F	; 127
    2d70:	ff 4f       	sbci	r31, 0xFF	; 255
    2d72:	91 83       	std	Z+1, r25	; 0x01
    2d74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d76:	de 01       	movw	r26, r28
    2d78:	ad 57       	subi	r26, 0x7D	; 125
    2d7a:	bf 4f       	sbci	r27, 0xFF	; 255
    2d7c:	fe 01       	movw	r30, r28
    2d7e:	ed 57       	subi	r30, 0x7D	; 125
    2d80:	ff 4f       	sbci	r31, 0xFF	; 255
    2d82:	80 81       	ld	r24, Z
    2d84:	91 81       	ldd	r25, Z+1	; 0x01
    2d86:	01 97       	sbiw	r24, 0x01	; 1
    2d88:	11 96       	adiw	r26, 0x01	; 1
    2d8a:	9c 93       	st	X, r25
    2d8c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d8e:	fe 01       	movw	r30, r28
    2d90:	ed 57       	subi	r30, 0x7D	; 125
    2d92:	ff 4f       	sbci	r31, 0xFF	; 255
    2d94:	80 81       	ld	r24, Z
    2d96:	91 81       	ldd	r25, Z+1	; 0x01
    2d98:	00 97       	sbiw	r24, 0x00	; 0
    2d9a:	d1 f6       	brne	.-76     	; 0x2d50 <main+0x13d0>
    2d9c:	27 c0       	rjmp	.+78     	; 0x2dec <main+0x146c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d9e:	8e 01       	movw	r16, r28
    2da0:	0d 57       	subi	r16, 0x7D	; 125
    2da2:	1f 4f       	sbci	r17, 0xFF	; 255
    2da4:	fe 01       	movw	r30, r28
    2da6:	eb 57       	subi	r30, 0x7B	; 123
    2da8:	ff 4f       	sbci	r31, 0xFF	; 255
    2daa:	60 81       	ld	r22, Z
    2dac:	71 81       	ldd	r23, Z+1	; 0x01
    2dae:	82 81       	ldd	r24, Z+2	; 0x02
    2db0:	93 81       	ldd	r25, Z+3	; 0x03
    2db2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2db6:	dc 01       	movw	r26, r24
    2db8:	cb 01       	movw	r24, r22
    2dba:	f8 01       	movw	r30, r16
    2dbc:	91 83       	std	Z+1, r25	; 0x01
    2dbe:	80 83       	st	Z, r24
    2dc0:	de 01       	movw	r26, r28
    2dc2:	a1 58       	subi	r26, 0x81	; 129
    2dc4:	bf 4f       	sbci	r27, 0xFF	; 255
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	ed 57       	subi	r30, 0x7D	; 125
    2dca:	ff 4f       	sbci	r31, 0xFF	; 255
    2dcc:	80 81       	ld	r24, Z
    2dce:	91 81       	ldd	r25, Z+1	; 0x01
    2dd0:	8d 93       	st	X+, r24
    2dd2:	9c 93       	st	X, r25
    2dd4:	fe 01       	movw	r30, r28
    2dd6:	e1 58       	subi	r30, 0x81	; 129
    2dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dda:	80 81       	ld	r24, Z
    2ddc:	91 81       	ldd	r25, Z+1	; 0x01
    2dde:	01 97       	sbiw	r24, 0x01	; 1
    2de0:	f1 f7       	brne	.-4      	; 0x2dde <main+0x145e>
    2de2:	fe 01       	movw	r30, r28
    2de4:	e1 58       	subi	r30, 0x81	; 129
    2de6:	ff 4f       	sbci	r31, 0xFF	; 255
    2de8:	91 83       	std	Z+1, r25	; 0x01
    2dea:	80 83       	st	Z, r24
			_delay_ms(300);
			LCD_voidWriteSpecialCharacter(ARR_u8FifthArabicLetter,1,1,i);
    2dec:	ce 01       	movw	r24, r28
    2dee:	84 5d       	subi	r24, 0xD4	; 212
    2df0:	9e 4f       	sbci	r25, 0xFE	; 254
    2df2:	fe 01       	movw	r30, r28
    2df4:	e5 5f       	subi	r30, 0xF5	; 245
    2df6:	fe 4f       	sbci	r31, 0xFE	; 254
    2df8:	61 e0       	ldi	r22, 0x01	; 1
    2dfa:	41 e0       	ldi	r20, 0x01	; 1
    2dfc:	20 81       	ld	r18, Z
    2dfe:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    2e02:	fe 01       	movw	r30, r28
    2e04:	e5 58       	subi	r30, 0x85	; 133
    2e06:	ff 4f       	sbci	r31, 0xFF	; 255
    2e08:	80 e0       	ldi	r24, 0x00	; 0
    2e0a:	90 e0       	ldi	r25, 0x00	; 0
    2e0c:	a6 e9       	ldi	r26, 0x96	; 150
    2e0e:	b3 e4       	ldi	r27, 0x43	; 67
    2e10:	80 83       	st	Z, r24
    2e12:	91 83       	std	Z+1, r25	; 0x01
    2e14:	a2 83       	std	Z+2, r26	; 0x02
    2e16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e18:	8e 01       	movw	r16, r28
    2e1a:	09 58       	subi	r16, 0x89	; 137
    2e1c:	1f 4f       	sbci	r17, 0xFF	; 255
    2e1e:	fe 01       	movw	r30, r28
    2e20:	e5 58       	subi	r30, 0x85	; 133
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	60 81       	ld	r22, Z
    2e26:	71 81       	ldd	r23, Z+1	; 0x01
    2e28:	82 81       	ldd	r24, Z+2	; 0x02
    2e2a:	93 81       	ldd	r25, Z+3	; 0x03
    2e2c:	20 e0       	ldi	r18, 0x00	; 0
    2e2e:	30 e0       	ldi	r19, 0x00	; 0
    2e30:	4a ef       	ldi	r20, 0xFA	; 250
    2e32:	54 e4       	ldi	r21, 0x44	; 68
    2e34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e38:	dc 01       	movw	r26, r24
    2e3a:	cb 01       	movw	r24, r22
    2e3c:	f8 01       	movw	r30, r16
    2e3e:	80 83       	st	Z, r24
    2e40:	91 83       	std	Z+1, r25	; 0x01
    2e42:	a2 83       	std	Z+2, r26	; 0x02
    2e44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e46:	fe 01       	movw	r30, r28
    2e48:	e9 58       	subi	r30, 0x89	; 137
    2e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4c:	60 81       	ld	r22, Z
    2e4e:	71 81       	ldd	r23, Z+1	; 0x01
    2e50:	82 81       	ldd	r24, Z+2	; 0x02
    2e52:	93 81       	ldd	r25, Z+3	; 0x03
    2e54:	20 e0       	ldi	r18, 0x00	; 0
    2e56:	30 e0       	ldi	r19, 0x00	; 0
    2e58:	40 e8       	ldi	r20, 0x80	; 128
    2e5a:	5f e3       	ldi	r21, 0x3F	; 63
    2e5c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e60:	88 23       	and	r24, r24
    2e62:	44 f4       	brge	.+16     	; 0x2e74 <main+0x14f4>
		__ticks = 1;
    2e64:	fe 01       	movw	r30, r28
    2e66:	eb 58       	subi	r30, 0x8B	; 139
    2e68:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6a:	81 e0       	ldi	r24, 0x01	; 1
    2e6c:	90 e0       	ldi	r25, 0x00	; 0
    2e6e:	91 83       	std	Z+1, r25	; 0x01
    2e70:	80 83       	st	Z, r24
    2e72:	64 c0       	rjmp	.+200    	; 0x2f3c <main+0x15bc>
	else if (__tmp > 65535)
    2e74:	fe 01       	movw	r30, r28
    2e76:	e9 58       	subi	r30, 0x89	; 137
    2e78:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7a:	60 81       	ld	r22, Z
    2e7c:	71 81       	ldd	r23, Z+1	; 0x01
    2e7e:	82 81       	ldd	r24, Z+2	; 0x02
    2e80:	93 81       	ldd	r25, Z+3	; 0x03
    2e82:	20 e0       	ldi	r18, 0x00	; 0
    2e84:	3f ef       	ldi	r19, 0xFF	; 255
    2e86:	4f e7       	ldi	r20, 0x7F	; 127
    2e88:	57 e4       	ldi	r21, 0x47	; 71
    2e8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e8e:	18 16       	cp	r1, r24
    2e90:	0c f0       	brlt	.+2      	; 0x2e94 <main+0x1514>
    2e92:	43 c0       	rjmp	.+134    	; 0x2f1a <main+0x159a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e94:	fe 01       	movw	r30, r28
    2e96:	e5 58       	subi	r30, 0x85	; 133
    2e98:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9a:	60 81       	ld	r22, Z
    2e9c:	71 81       	ldd	r23, Z+1	; 0x01
    2e9e:	82 81       	ldd	r24, Z+2	; 0x02
    2ea0:	93 81       	ldd	r25, Z+3	; 0x03
    2ea2:	20 e0       	ldi	r18, 0x00	; 0
    2ea4:	30 e0       	ldi	r19, 0x00	; 0
    2ea6:	40 e2       	ldi	r20, 0x20	; 32
    2ea8:	51 e4       	ldi	r21, 0x41	; 65
    2eaa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eae:	dc 01       	movw	r26, r24
    2eb0:	cb 01       	movw	r24, r22
    2eb2:	8e 01       	movw	r16, r28
    2eb4:	0b 58       	subi	r16, 0x8B	; 139
    2eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    2eb8:	bc 01       	movw	r22, r24
    2eba:	cd 01       	movw	r24, r26
    2ebc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ec0:	dc 01       	movw	r26, r24
    2ec2:	cb 01       	movw	r24, r22
    2ec4:	f8 01       	movw	r30, r16
    2ec6:	91 83       	std	Z+1, r25	; 0x01
    2ec8:	80 83       	st	Z, r24
    2eca:	1f c0       	rjmp	.+62     	; 0x2f0a <main+0x158a>
    2ecc:	fe 01       	movw	r30, r28
    2ece:	ed 58       	subi	r30, 0x8D	; 141
    2ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed2:	88 ec       	ldi	r24, 0xC8	; 200
    2ed4:	90 e0       	ldi	r25, 0x00	; 0
    2ed6:	91 83       	std	Z+1, r25	; 0x01
    2ed8:	80 83       	st	Z, r24
    2eda:	fe 01       	movw	r30, r28
    2edc:	ed 58       	subi	r30, 0x8D	; 141
    2ede:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee0:	80 81       	ld	r24, Z
    2ee2:	91 81       	ldd	r25, Z+1	; 0x01
    2ee4:	01 97       	sbiw	r24, 0x01	; 1
    2ee6:	f1 f7       	brne	.-4      	; 0x2ee4 <main+0x1564>
    2ee8:	fe 01       	movw	r30, r28
    2eea:	ed 58       	subi	r30, 0x8D	; 141
    2eec:	ff 4f       	sbci	r31, 0xFF	; 255
    2eee:	91 83       	std	Z+1, r25	; 0x01
    2ef0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ef2:	de 01       	movw	r26, r28
    2ef4:	ab 58       	subi	r26, 0x8B	; 139
    2ef6:	bf 4f       	sbci	r27, 0xFF	; 255
    2ef8:	fe 01       	movw	r30, r28
    2efa:	eb 58       	subi	r30, 0x8B	; 139
    2efc:	ff 4f       	sbci	r31, 0xFF	; 255
    2efe:	80 81       	ld	r24, Z
    2f00:	91 81       	ldd	r25, Z+1	; 0x01
    2f02:	01 97       	sbiw	r24, 0x01	; 1
    2f04:	11 96       	adiw	r26, 0x01	; 1
    2f06:	9c 93       	st	X, r25
    2f08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f0a:	fe 01       	movw	r30, r28
    2f0c:	eb 58       	subi	r30, 0x8B	; 139
    2f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f10:	80 81       	ld	r24, Z
    2f12:	91 81       	ldd	r25, Z+1	; 0x01
    2f14:	00 97       	sbiw	r24, 0x00	; 0
    2f16:	d1 f6       	brne	.-76     	; 0x2ecc <main+0x154c>
    2f18:	27 c0       	rjmp	.+78     	; 0x2f68 <main+0x15e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f1a:	8e 01       	movw	r16, r28
    2f1c:	0b 58       	subi	r16, 0x8B	; 139
    2f1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f20:	fe 01       	movw	r30, r28
    2f22:	e9 58       	subi	r30, 0x89	; 137
    2f24:	ff 4f       	sbci	r31, 0xFF	; 255
    2f26:	60 81       	ld	r22, Z
    2f28:	71 81       	ldd	r23, Z+1	; 0x01
    2f2a:	82 81       	ldd	r24, Z+2	; 0x02
    2f2c:	93 81       	ldd	r25, Z+3	; 0x03
    2f2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f32:	dc 01       	movw	r26, r24
    2f34:	cb 01       	movw	r24, r22
    2f36:	f8 01       	movw	r30, r16
    2f38:	91 83       	std	Z+1, r25	; 0x01
    2f3a:	80 83       	st	Z, r24
    2f3c:	de 01       	movw	r26, r28
    2f3e:	af 58       	subi	r26, 0x8F	; 143
    2f40:	bf 4f       	sbci	r27, 0xFF	; 255
    2f42:	fe 01       	movw	r30, r28
    2f44:	eb 58       	subi	r30, 0x8B	; 139
    2f46:	ff 4f       	sbci	r31, 0xFF	; 255
    2f48:	80 81       	ld	r24, Z
    2f4a:	91 81       	ldd	r25, Z+1	; 0x01
    2f4c:	8d 93       	st	X+, r24
    2f4e:	9c 93       	st	X, r25
    2f50:	fe 01       	movw	r30, r28
    2f52:	ef 58       	subi	r30, 0x8F	; 143
    2f54:	ff 4f       	sbci	r31, 0xFF	; 255
    2f56:	80 81       	ld	r24, Z
    2f58:	91 81       	ldd	r25, Z+1	; 0x01
    2f5a:	01 97       	sbiw	r24, 0x01	; 1
    2f5c:	f1 f7       	brne	.-4      	; 0x2f5a <main+0x15da>
    2f5e:	fe 01       	movw	r30, r28
    2f60:	ef 58       	subi	r30, 0x8F	; 143
    2f62:	ff 4f       	sbci	r31, 0xFF	; 255
    2f64:	91 83       	std	Z+1, r25	; 0x01
    2f66:	80 83       	st	Z, r24
			_delay_ms(300);
			LCD_voidClearLCD();
    2f68:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
			i++;
    2f6c:	de 01       	movw	r26, r28
    2f6e:	a5 5f       	subi	r26, 0xF5	; 245
    2f70:	be 4f       	sbci	r27, 0xFE	; 254
    2f72:	fe 01       	movw	r30, r28
    2f74:	e5 5f       	subi	r30, 0xF5	; 245
    2f76:	fe 4f       	sbci	r31, 0xFE	; 254
    2f78:	80 81       	ld	r24, Z
    2f7a:	8f 5f       	subi	r24, 0xFF	; 255
    2f7c:	8c 93       	st	X, r24
			LCD_voidWriteSpecialCharacter(ARR_u8FourthArabicLetter,2,1,i);
    2f7e:	ce 01       	movw	r24, r28
    2f80:	8c 5d       	subi	r24, 0xDC	; 220
    2f82:	9e 4f       	sbci	r25, 0xFE	; 254
    2f84:	fe 01       	movw	r30, r28
    2f86:	e5 5f       	subi	r30, 0xF5	; 245
    2f88:	fe 4f       	sbci	r31, 0xFE	; 254
    2f8a:	62 e0       	ldi	r22, 0x02	; 2
    2f8c:	41 e0       	ldi	r20, 0x01	; 1
    2f8e:	20 81       	ld	r18, Z
    2f90:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    2f94:	fe 01       	movw	r30, r28
    2f96:	e3 59       	subi	r30, 0x93	; 147
    2f98:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9a:	80 e0       	ldi	r24, 0x00	; 0
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	a6 e9       	ldi	r26, 0x96	; 150
    2fa0:	b3 e4       	ldi	r27, 0x43	; 67
    2fa2:	80 83       	st	Z, r24
    2fa4:	91 83       	std	Z+1, r25	; 0x01
    2fa6:	a2 83       	std	Z+2, r26	; 0x02
    2fa8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2faa:	8e 01       	movw	r16, r28
    2fac:	07 59       	subi	r16, 0x97	; 151
    2fae:	1f 4f       	sbci	r17, 0xFF	; 255
    2fb0:	fe 01       	movw	r30, r28
    2fb2:	e3 59       	subi	r30, 0x93	; 147
    2fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb6:	60 81       	ld	r22, Z
    2fb8:	71 81       	ldd	r23, Z+1	; 0x01
    2fba:	82 81       	ldd	r24, Z+2	; 0x02
    2fbc:	93 81       	ldd	r25, Z+3	; 0x03
    2fbe:	20 e0       	ldi	r18, 0x00	; 0
    2fc0:	30 e0       	ldi	r19, 0x00	; 0
    2fc2:	4a ef       	ldi	r20, 0xFA	; 250
    2fc4:	54 e4       	ldi	r21, 0x44	; 68
    2fc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fca:	dc 01       	movw	r26, r24
    2fcc:	cb 01       	movw	r24, r22
    2fce:	f8 01       	movw	r30, r16
    2fd0:	80 83       	st	Z, r24
    2fd2:	91 83       	std	Z+1, r25	; 0x01
    2fd4:	a2 83       	std	Z+2, r26	; 0x02
    2fd6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fd8:	fe 01       	movw	r30, r28
    2fda:	e7 59       	subi	r30, 0x97	; 151
    2fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2fde:	60 81       	ld	r22, Z
    2fe0:	71 81       	ldd	r23, Z+1	; 0x01
    2fe2:	82 81       	ldd	r24, Z+2	; 0x02
    2fe4:	93 81       	ldd	r25, Z+3	; 0x03
    2fe6:	20 e0       	ldi	r18, 0x00	; 0
    2fe8:	30 e0       	ldi	r19, 0x00	; 0
    2fea:	40 e8       	ldi	r20, 0x80	; 128
    2fec:	5f e3       	ldi	r21, 0x3F	; 63
    2fee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ff2:	88 23       	and	r24, r24
    2ff4:	44 f4       	brge	.+16     	; 0x3006 <main+0x1686>
		__ticks = 1;
    2ff6:	fe 01       	movw	r30, r28
    2ff8:	e9 59       	subi	r30, 0x99	; 153
    2ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    2ffc:	81 e0       	ldi	r24, 0x01	; 1
    2ffe:	90 e0       	ldi	r25, 0x00	; 0
    3000:	91 83       	std	Z+1, r25	; 0x01
    3002:	80 83       	st	Z, r24
    3004:	64 c0       	rjmp	.+200    	; 0x30ce <main+0x174e>
	else if (__tmp > 65535)
    3006:	fe 01       	movw	r30, r28
    3008:	e7 59       	subi	r30, 0x97	; 151
    300a:	ff 4f       	sbci	r31, 0xFF	; 255
    300c:	60 81       	ld	r22, Z
    300e:	71 81       	ldd	r23, Z+1	; 0x01
    3010:	82 81       	ldd	r24, Z+2	; 0x02
    3012:	93 81       	ldd	r25, Z+3	; 0x03
    3014:	20 e0       	ldi	r18, 0x00	; 0
    3016:	3f ef       	ldi	r19, 0xFF	; 255
    3018:	4f e7       	ldi	r20, 0x7F	; 127
    301a:	57 e4       	ldi	r21, 0x47	; 71
    301c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3020:	18 16       	cp	r1, r24
    3022:	0c f0       	brlt	.+2      	; 0x3026 <main+0x16a6>
    3024:	43 c0       	rjmp	.+134    	; 0x30ac <main+0x172c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3026:	fe 01       	movw	r30, r28
    3028:	e3 59       	subi	r30, 0x93	; 147
    302a:	ff 4f       	sbci	r31, 0xFF	; 255
    302c:	60 81       	ld	r22, Z
    302e:	71 81       	ldd	r23, Z+1	; 0x01
    3030:	82 81       	ldd	r24, Z+2	; 0x02
    3032:	93 81       	ldd	r25, Z+3	; 0x03
    3034:	20 e0       	ldi	r18, 0x00	; 0
    3036:	30 e0       	ldi	r19, 0x00	; 0
    3038:	40 e2       	ldi	r20, 0x20	; 32
    303a:	51 e4       	ldi	r21, 0x41	; 65
    303c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3040:	dc 01       	movw	r26, r24
    3042:	cb 01       	movw	r24, r22
    3044:	8e 01       	movw	r16, r28
    3046:	09 59       	subi	r16, 0x99	; 153
    3048:	1f 4f       	sbci	r17, 0xFF	; 255
    304a:	bc 01       	movw	r22, r24
    304c:	cd 01       	movw	r24, r26
    304e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3052:	dc 01       	movw	r26, r24
    3054:	cb 01       	movw	r24, r22
    3056:	f8 01       	movw	r30, r16
    3058:	91 83       	std	Z+1, r25	; 0x01
    305a:	80 83       	st	Z, r24
    305c:	1f c0       	rjmp	.+62     	; 0x309c <main+0x171c>
    305e:	fe 01       	movw	r30, r28
    3060:	eb 59       	subi	r30, 0x9B	; 155
    3062:	ff 4f       	sbci	r31, 0xFF	; 255
    3064:	88 ec       	ldi	r24, 0xC8	; 200
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	91 83       	std	Z+1, r25	; 0x01
    306a:	80 83       	st	Z, r24
    306c:	fe 01       	movw	r30, r28
    306e:	eb 59       	subi	r30, 0x9B	; 155
    3070:	ff 4f       	sbci	r31, 0xFF	; 255
    3072:	80 81       	ld	r24, Z
    3074:	91 81       	ldd	r25, Z+1	; 0x01
    3076:	01 97       	sbiw	r24, 0x01	; 1
    3078:	f1 f7       	brne	.-4      	; 0x3076 <main+0x16f6>
    307a:	fe 01       	movw	r30, r28
    307c:	eb 59       	subi	r30, 0x9B	; 155
    307e:	ff 4f       	sbci	r31, 0xFF	; 255
    3080:	91 83       	std	Z+1, r25	; 0x01
    3082:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3084:	de 01       	movw	r26, r28
    3086:	a9 59       	subi	r26, 0x99	; 153
    3088:	bf 4f       	sbci	r27, 0xFF	; 255
    308a:	fe 01       	movw	r30, r28
    308c:	e9 59       	subi	r30, 0x99	; 153
    308e:	ff 4f       	sbci	r31, 0xFF	; 255
    3090:	80 81       	ld	r24, Z
    3092:	91 81       	ldd	r25, Z+1	; 0x01
    3094:	01 97       	sbiw	r24, 0x01	; 1
    3096:	11 96       	adiw	r26, 0x01	; 1
    3098:	9c 93       	st	X, r25
    309a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    309c:	fe 01       	movw	r30, r28
    309e:	e9 59       	subi	r30, 0x99	; 153
    30a0:	ff 4f       	sbci	r31, 0xFF	; 255
    30a2:	80 81       	ld	r24, Z
    30a4:	91 81       	ldd	r25, Z+1	; 0x01
    30a6:	00 97       	sbiw	r24, 0x00	; 0
    30a8:	d1 f6       	brne	.-76     	; 0x305e <main+0x16de>
    30aa:	27 c0       	rjmp	.+78     	; 0x30fa <main+0x177a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30ac:	8e 01       	movw	r16, r28
    30ae:	09 59       	subi	r16, 0x99	; 153
    30b0:	1f 4f       	sbci	r17, 0xFF	; 255
    30b2:	fe 01       	movw	r30, r28
    30b4:	e7 59       	subi	r30, 0x97	; 151
    30b6:	ff 4f       	sbci	r31, 0xFF	; 255
    30b8:	60 81       	ld	r22, Z
    30ba:	71 81       	ldd	r23, Z+1	; 0x01
    30bc:	82 81       	ldd	r24, Z+2	; 0x02
    30be:	93 81       	ldd	r25, Z+3	; 0x03
    30c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30c4:	dc 01       	movw	r26, r24
    30c6:	cb 01       	movw	r24, r22
    30c8:	f8 01       	movw	r30, r16
    30ca:	91 83       	std	Z+1, r25	; 0x01
    30cc:	80 83       	st	Z, r24
    30ce:	de 01       	movw	r26, r28
    30d0:	ad 59       	subi	r26, 0x9D	; 157
    30d2:	bf 4f       	sbci	r27, 0xFF	; 255
    30d4:	fe 01       	movw	r30, r28
    30d6:	e9 59       	subi	r30, 0x99	; 153
    30d8:	ff 4f       	sbci	r31, 0xFF	; 255
    30da:	80 81       	ld	r24, Z
    30dc:	91 81       	ldd	r25, Z+1	; 0x01
    30de:	8d 93       	st	X+, r24
    30e0:	9c 93       	st	X, r25
    30e2:	fe 01       	movw	r30, r28
    30e4:	ed 59       	subi	r30, 0x9D	; 157
    30e6:	ff 4f       	sbci	r31, 0xFF	; 255
    30e8:	80 81       	ld	r24, Z
    30ea:	91 81       	ldd	r25, Z+1	; 0x01
    30ec:	01 97       	sbiw	r24, 0x01	; 1
    30ee:	f1 f7       	brne	.-4      	; 0x30ec <main+0x176c>
    30f0:	fe 01       	movw	r30, r28
    30f2:	ed 59       	subi	r30, 0x9D	; 157
    30f4:	ff 4f       	sbci	r31, 0xFF	; 255
    30f6:	91 83       	std	Z+1, r25	; 0x01
    30f8:	80 83       	st	Z, r24
			_delay_ms(300);
			LCD_voidClearLCD();
    30fa:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
    30fe:	fe 01       	movw	r30, r28
    3100:	e1 5a       	subi	r30, 0xA1	; 161
    3102:	ff 4f       	sbci	r31, 0xFF	; 255
    3104:	80 e0       	ldi	r24, 0x00	; 0
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	a6 e9       	ldi	r26, 0x96	; 150
    310a:	b3 e4       	ldi	r27, 0x43	; 67
    310c:	80 83       	st	Z, r24
    310e:	91 83       	std	Z+1, r25	; 0x01
    3110:	a2 83       	std	Z+2, r26	; 0x02
    3112:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3114:	8e 01       	movw	r16, r28
    3116:	05 5a       	subi	r16, 0xA5	; 165
    3118:	1f 4f       	sbci	r17, 0xFF	; 255
    311a:	fe 01       	movw	r30, r28
    311c:	e1 5a       	subi	r30, 0xA1	; 161
    311e:	ff 4f       	sbci	r31, 0xFF	; 255
    3120:	60 81       	ld	r22, Z
    3122:	71 81       	ldd	r23, Z+1	; 0x01
    3124:	82 81       	ldd	r24, Z+2	; 0x02
    3126:	93 81       	ldd	r25, Z+3	; 0x03
    3128:	20 e0       	ldi	r18, 0x00	; 0
    312a:	30 e0       	ldi	r19, 0x00	; 0
    312c:	4a ef       	ldi	r20, 0xFA	; 250
    312e:	54 e4       	ldi	r21, 0x44	; 68
    3130:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3134:	dc 01       	movw	r26, r24
    3136:	cb 01       	movw	r24, r22
    3138:	f8 01       	movw	r30, r16
    313a:	80 83       	st	Z, r24
    313c:	91 83       	std	Z+1, r25	; 0x01
    313e:	a2 83       	std	Z+2, r26	; 0x02
    3140:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3142:	fe 01       	movw	r30, r28
    3144:	e5 5a       	subi	r30, 0xA5	; 165
    3146:	ff 4f       	sbci	r31, 0xFF	; 255
    3148:	60 81       	ld	r22, Z
    314a:	71 81       	ldd	r23, Z+1	; 0x01
    314c:	82 81       	ldd	r24, Z+2	; 0x02
    314e:	93 81       	ldd	r25, Z+3	; 0x03
    3150:	20 e0       	ldi	r18, 0x00	; 0
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	40 e8       	ldi	r20, 0x80	; 128
    3156:	5f e3       	ldi	r21, 0x3F	; 63
    3158:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    315c:	88 23       	and	r24, r24
    315e:	44 f4       	brge	.+16     	; 0x3170 <main+0x17f0>
		__ticks = 1;
    3160:	fe 01       	movw	r30, r28
    3162:	e7 5a       	subi	r30, 0xA7	; 167
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	81 e0       	ldi	r24, 0x01	; 1
    3168:	90 e0       	ldi	r25, 0x00	; 0
    316a:	91 83       	std	Z+1, r25	; 0x01
    316c:	80 83       	st	Z, r24
    316e:	64 c0       	rjmp	.+200    	; 0x3238 <main+0x18b8>
	else if (__tmp > 65535)
    3170:	fe 01       	movw	r30, r28
    3172:	e5 5a       	subi	r30, 0xA5	; 165
    3174:	ff 4f       	sbci	r31, 0xFF	; 255
    3176:	60 81       	ld	r22, Z
    3178:	71 81       	ldd	r23, Z+1	; 0x01
    317a:	82 81       	ldd	r24, Z+2	; 0x02
    317c:	93 81       	ldd	r25, Z+3	; 0x03
    317e:	20 e0       	ldi	r18, 0x00	; 0
    3180:	3f ef       	ldi	r19, 0xFF	; 255
    3182:	4f e7       	ldi	r20, 0x7F	; 127
    3184:	57 e4       	ldi	r21, 0x47	; 71
    3186:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    318a:	18 16       	cp	r1, r24
    318c:	0c f0       	brlt	.+2      	; 0x3190 <main+0x1810>
    318e:	43 c0       	rjmp	.+134    	; 0x3216 <main+0x1896>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3190:	fe 01       	movw	r30, r28
    3192:	e1 5a       	subi	r30, 0xA1	; 161
    3194:	ff 4f       	sbci	r31, 0xFF	; 255
    3196:	60 81       	ld	r22, Z
    3198:	71 81       	ldd	r23, Z+1	; 0x01
    319a:	82 81       	ldd	r24, Z+2	; 0x02
    319c:	93 81       	ldd	r25, Z+3	; 0x03
    319e:	20 e0       	ldi	r18, 0x00	; 0
    31a0:	30 e0       	ldi	r19, 0x00	; 0
    31a2:	40 e2       	ldi	r20, 0x20	; 32
    31a4:	51 e4       	ldi	r21, 0x41	; 65
    31a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31aa:	dc 01       	movw	r26, r24
    31ac:	cb 01       	movw	r24, r22
    31ae:	8e 01       	movw	r16, r28
    31b0:	07 5a       	subi	r16, 0xA7	; 167
    31b2:	1f 4f       	sbci	r17, 0xFF	; 255
    31b4:	bc 01       	movw	r22, r24
    31b6:	cd 01       	movw	r24, r26
    31b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31bc:	dc 01       	movw	r26, r24
    31be:	cb 01       	movw	r24, r22
    31c0:	f8 01       	movw	r30, r16
    31c2:	91 83       	std	Z+1, r25	; 0x01
    31c4:	80 83       	st	Z, r24
    31c6:	1f c0       	rjmp	.+62     	; 0x3206 <main+0x1886>
    31c8:	fe 01       	movw	r30, r28
    31ca:	e9 5a       	subi	r30, 0xA9	; 169
    31cc:	ff 4f       	sbci	r31, 0xFF	; 255
    31ce:	88 ec       	ldi	r24, 0xC8	; 200
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	91 83       	std	Z+1, r25	; 0x01
    31d4:	80 83       	st	Z, r24
    31d6:	fe 01       	movw	r30, r28
    31d8:	e9 5a       	subi	r30, 0xA9	; 169
    31da:	ff 4f       	sbci	r31, 0xFF	; 255
    31dc:	80 81       	ld	r24, Z
    31de:	91 81       	ldd	r25, Z+1	; 0x01
    31e0:	01 97       	sbiw	r24, 0x01	; 1
    31e2:	f1 f7       	brne	.-4      	; 0x31e0 <main+0x1860>
    31e4:	fe 01       	movw	r30, r28
    31e6:	e9 5a       	subi	r30, 0xA9	; 169
    31e8:	ff 4f       	sbci	r31, 0xFF	; 255
    31ea:	91 83       	std	Z+1, r25	; 0x01
    31ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ee:	de 01       	movw	r26, r28
    31f0:	a7 5a       	subi	r26, 0xA7	; 167
    31f2:	bf 4f       	sbci	r27, 0xFF	; 255
    31f4:	fe 01       	movw	r30, r28
    31f6:	e7 5a       	subi	r30, 0xA7	; 167
    31f8:	ff 4f       	sbci	r31, 0xFF	; 255
    31fa:	80 81       	ld	r24, Z
    31fc:	91 81       	ldd	r25, Z+1	; 0x01
    31fe:	01 97       	sbiw	r24, 0x01	; 1
    3200:	11 96       	adiw	r26, 0x01	; 1
    3202:	9c 93       	st	X, r25
    3204:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3206:	fe 01       	movw	r30, r28
    3208:	e7 5a       	subi	r30, 0xA7	; 167
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	80 81       	ld	r24, Z
    320e:	91 81       	ldd	r25, Z+1	; 0x01
    3210:	00 97       	sbiw	r24, 0x00	; 0
    3212:	d1 f6       	brne	.-76     	; 0x31c8 <main+0x1848>
    3214:	27 c0       	rjmp	.+78     	; 0x3264 <main+0x18e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3216:	8e 01       	movw	r16, r28
    3218:	07 5a       	subi	r16, 0xA7	; 167
    321a:	1f 4f       	sbci	r17, 0xFF	; 255
    321c:	fe 01       	movw	r30, r28
    321e:	e5 5a       	subi	r30, 0xA5	; 165
    3220:	ff 4f       	sbci	r31, 0xFF	; 255
    3222:	60 81       	ld	r22, Z
    3224:	71 81       	ldd	r23, Z+1	; 0x01
    3226:	82 81       	ldd	r24, Z+2	; 0x02
    3228:	93 81       	ldd	r25, Z+3	; 0x03
    322a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    322e:	dc 01       	movw	r26, r24
    3230:	cb 01       	movw	r24, r22
    3232:	f8 01       	movw	r30, r16
    3234:	91 83       	std	Z+1, r25	; 0x01
    3236:	80 83       	st	Z, r24
    3238:	de 01       	movw	r26, r28
    323a:	ab 5a       	subi	r26, 0xAB	; 171
    323c:	bf 4f       	sbci	r27, 0xFF	; 255
    323e:	fe 01       	movw	r30, r28
    3240:	e7 5a       	subi	r30, 0xA7	; 167
    3242:	ff 4f       	sbci	r31, 0xFF	; 255
    3244:	80 81       	ld	r24, Z
    3246:	91 81       	ldd	r25, Z+1	; 0x01
    3248:	8d 93       	st	X+, r24
    324a:	9c 93       	st	X, r25
    324c:	fe 01       	movw	r30, r28
    324e:	eb 5a       	subi	r30, 0xAB	; 171
    3250:	ff 4f       	sbci	r31, 0xFF	; 255
    3252:	80 81       	ld	r24, Z
    3254:	91 81       	ldd	r25, Z+1	; 0x01
    3256:	01 97       	sbiw	r24, 0x01	; 1
    3258:	f1 f7       	brne	.-4      	; 0x3256 <main+0x18d6>
    325a:	fe 01       	movw	r30, r28
    325c:	eb 5a       	subi	r30, 0xAB	; 171
    325e:	ff 4f       	sbci	r31, 0xFF	; 255
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	80 83       	st	Z, r24

		}
		LCD_voidSendString("I love football");
		_delay_ms(2000);
		LCD_voidClearLCD();
		for(i=0 ; i<13 ;i++ ){
    3264:	de 01       	movw	r26, r28
    3266:	a5 5f       	subi	r26, 0xF5	; 245
    3268:	be 4f       	sbci	r27, 0xFE	; 254
    326a:	fe 01       	movw	r30, r28
    326c:	e5 5f       	subi	r30, 0xF5	; 245
    326e:	fe 4f       	sbci	r31, 0xFE	; 254
    3270:	80 81       	ld	r24, Z
    3272:	8f 5f       	subi	r24, 0xFF	; 255
    3274:	8c 93       	st	X, r24
    3276:	fe 01       	movw	r30, r28
    3278:	e5 5f       	subi	r30, 0xF5	; 245
    327a:	fe 4f       	sbci	r31, 0xFE	; 254
    327c:	80 81       	ld	r24, Z
    327e:	8d 30       	cpi	r24, 0x0D	; 13
    3280:	08 f4       	brcc	.+2      	; 0x3284 <main+0x1904>
    3282:	f6 cc       	rjmp	.-1556   	; 0x2c70 <main+0x12f0>
			_delay_ms(300);
			LCD_voidClearLCD();
			_delay_ms(300);

		}
		LCD_voidClearLCD();
    3284:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		LCD_voidSendString("I can dance");
    3288:	8a e9       	ldi	r24, 0x9A	; 154
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	0e 94 2e 0c 	call	0x185c	; 0x185c <LCD_voidSendString>
		LCD_voidClearLCD();
    3290:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		LCD_voidGoToXY(0,0);
    3294:	80 e0       	ldi	r24, 0x00	; 0
    3296:	60 e0       	ldi	r22, 0x00	; 0
    3298:	0e 94 57 0c 	call	0x18ae	; 0x18ae <LCD_voidGoToXY>
		LCD_voidSendString("DON'T KILL MEEEE");
    329c:	86 ea       	ldi	r24, 0xA6	; 166
    329e:	90 e0       	ldi	r25, 0x00	; 0
    32a0:	0e 94 2e 0c 	call	0x185c	; 0x185c <LCD_voidSendString>
    32a4:	fe 01       	movw	r30, r28
    32a6:	ef 5a       	subi	r30, 0xAF	; 175
    32a8:	ff 4f       	sbci	r31, 0xFF	; 255
    32aa:	80 e0       	ldi	r24, 0x00	; 0
    32ac:	90 e0       	ldi	r25, 0x00	; 0
    32ae:	aa e7       	ldi	r26, 0x7A	; 122
    32b0:	b4 e4       	ldi	r27, 0x44	; 68
    32b2:	80 83       	st	Z, r24
    32b4:	91 83       	std	Z+1, r25	; 0x01
    32b6:	a2 83       	std	Z+2, r26	; 0x02
    32b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32ba:	8e 01       	movw	r16, r28
    32bc:	03 5b       	subi	r16, 0xB3	; 179
    32be:	1f 4f       	sbci	r17, 0xFF	; 255
    32c0:	fe 01       	movw	r30, r28
    32c2:	ef 5a       	subi	r30, 0xAF	; 175
    32c4:	ff 4f       	sbci	r31, 0xFF	; 255
    32c6:	60 81       	ld	r22, Z
    32c8:	71 81       	ldd	r23, Z+1	; 0x01
    32ca:	82 81       	ldd	r24, Z+2	; 0x02
    32cc:	93 81       	ldd	r25, Z+3	; 0x03
    32ce:	20 e0       	ldi	r18, 0x00	; 0
    32d0:	30 e0       	ldi	r19, 0x00	; 0
    32d2:	4a ef       	ldi	r20, 0xFA	; 250
    32d4:	54 e4       	ldi	r21, 0x44	; 68
    32d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32da:	dc 01       	movw	r26, r24
    32dc:	cb 01       	movw	r24, r22
    32de:	f8 01       	movw	r30, r16
    32e0:	80 83       	st	Z, r24
    32e2:	91 83       	std	Z+1, r25	; 0x01
    32e4:	a2 83       	std	Z+2, r26	; 0x02
    32e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32e8:	fe 01       	movw	r30, r28
    32ea:	e3 5b       	subi	r30, 0xB3	; 179
    32ec:	ff 4f       	sbci	r31, 0xFF	; 255
    32ee:	60 81       	ld	r22, Z
    32f0:	71 81       	ldd	r23, Z+1	; 0x01
    32f2:	82 81       	ldd	r24, Z+2	; 0x02
    32f4:	93 81       	ldd	r25, Z+3	; 0x03
    32f6:	20 e0       	ldi	r18, 0x00	; 0
    32f8:	30 e0       	ldi	r19, 0x00	; 0
    32fa:	40 e8       	ldi	r20, 0x80	; 128
    32fc:	5f e3       	ldi	r21, 0x3F	; 63
    32fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3302:	88 23       	and	r24, r24
    3304:	44 f4       	brge	.+16     	; 0x3316 <main+0x1996>
		__ticks = 1;
    3306:	fe 01       	movw	r30, r28
    3308:	e5 5b       	subi	r30, 0xB5	; 181
    330a:	ff 4f       	sbci	r31, 0xFF	; 255
    330c:	81 e0       	ldi	r24, 0x01	; 1
    330e:	90 e0       	ldi	r25, 0x00	; 0
    3310:	91 83       	std	Z+1, r25	; 0x01
    3312:	80 83       	st	Z, r24
    3314:	64 c0       	rjmp	.+200    	; 0x33de <main+0x1a5e>
	else if (__tmp > 65535)
    3316:	fe 01       	movw	r30, r28
    3318:	e3 5b       	subi	r30, 0xB3	; 179
    331a:	ff 4f       	sbci	r31, 0xFF	; 255
    331c:	60 81       	ld	r22, Z
    331e:	71 81       	ldd	r23, Z+1	; 0x01
    3320:	82 81       	ldd	r24, Z+2	; 0x02
    3322:	93 81       	ldd	r25, Z+3	; 0x03
    3324:	20 e0       	ldi	r18, 0x00	; 0
    3326:	3f ef       	ldi	r19, 0xFF	; 255
    3328:	4f e7       	ldi	r20, 0x7F	; 127
    332a:	57 e4       	ldi	r21, 0x47	; 71
    332c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3330:	18 16       	cp	r1, r24
    3332:	0c f0       	brlt	.+2      	; 0x3336 <main+0x19b6>
    3334:	43 c0       	rjmp	.+134    	; 0x33bc <main+0x1a3c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3336:	fe 01       	movw	r30, r28
    3338:	ef 5a       	subi	r30, 0xAF	; 175
    333a:	ff 4f       	sbci	r31, 0xFF	; 255
    333c:	60 81       	ld	r22, Z
    333e:	71 81       	ldd	r23, Z+1	; 0x01
    3340:	82 81       	ldd	r24, Z+2	; 0x02
    3342:	93 81       	ldd	r25, Z+3	; 0x03
    3344:	20 e0       	ldi	r18, 0x00	; 0
    3346:	30 e0       	ldi	r19, 0x00	; 0
    3348:	40 e2       	ldi	r20, 0x20	; 32
    334a:	51 e4       	ldi	r21, 0x41	; 65
    334c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3350:	dc 01       	movw	r26, r24
    3352:	cb 01       	movw	r24, r22
    3354:	8e 01       	movw	r16, r28
    3356:	05 5b       	subi	r16, 0xB5	; 181
    3358:	1f 4f       	sbci	r17, 0xFF	; 255
    335a:	bc 01       	movw	r22, r24
    335c:	cd 01       	movw	r24, r26
    335e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3362:	dc 01       	movw	r26, r24
    3364:	cb 01       	movw	r24, r22
    3366:	f8 01       	movw	r30, r16
    3368:	91 83       	std	Z+1, r25	; 0x01
    336a:	80 83       	st	Z, r24
    336c:	1f c0       	rjmp	.+62     	; 0x33ac <main+0x1a2c>
    336e:	fe 01       	movw	r30, r28
    3370:	e7 5b       	subi	r30, 0xB7	; 183
    3372:	ff 4f       	sbci	r31, 0xFF	; 255
    3374:	88 ec       	ldi	r24, 0xC8	; 200
    3376:	90 e0       	ldi	r25, 0x00	; 0
    3378:	91 83       	std	Z+1, r25	; 0x01
    337a:	80 83       	st	Z, r24
    337c:	fe 01       	movw	r30, r28
    337e:	e7 5b       	subi	r30, 0xB7	; 183
    3380:	ff 4f       	sbci	r31, 0xFF	; 255
    3382:	80 81       	ld	r24, Z
    3384:	91 81       	ldd	r25, Z+1	; 0x01
    3386:	01 97       	sbiw	r24, 0x01	; 1
    3388:	f1 f7       	brne	.-4      	; 0x3386 <main+0x1a06>
    338a:	fe 01       	movw	r30, r28
    338c:	e7 5b       	subi	r30, 0xB7	; 183
    338e:	ff 4f       	sbci	r31, 0xFF	; 255
    3390:	91 83       	std	Z+1, r25	; 0x01
    3392:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3394:	de 01       	movw	r26, r28
    3396:	a5 5b       	subi	r26, 0xB5	; 181
    3398:	bf 4f       	sbci	r27, 0xFF	; 255
    339a:	fe 01       	movw	r30, r28
    339c:	e5 5b       	subi	r30, 0xB5	; 181
    339e:	ff 4f       	sbci	r31, 0xFF	; 255
    33a0:	80 81       	ld	r24, Z
    33a2:	91 81       	ldd	r25, Z+1	; 0x01
    33a4:	01 97       	sbiw	r24, 0x01	; 1
    33a6:	11 96       	adiw	r26, 0x01	; 1
    33a8:	9c 93       	st	X, r25
    33aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33ac:	fe 01       	movw	r30, r28
    33ae:	e5 5b       	subi	r30, 0xB5	; 181
    33b0:	ff 4f       	sbci	r31, 0xFF	; 255
    33b2:	80 81       	ld	r24, Z
    33b4:	91 81       	ldd	r25, Z+1	; 0x01
    33b6:	00 97       	sbiw	r24, 0x00	; 0
    33b8:	d1 f6       	brne	.-76     	; 0x336e <main+0x19ee>
    33ba:	27 c0       	rjmp	.+78     	; 0x340a <main+0x1a8a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33bc:	8e 01       	movw	r16, r28
    33be:	05 5b       	subi	r16, 0xB5	; 181
    33c0:	1f 4f       	sbci	r17, 0xFF	; 255
    33c2:	fe 01       	movw	r30, r28
    33c4:	e3 5b       	subi	r30, 0xB3	; 179
    33c6:	ff 4f       	sbci	r31, 0xFF	; 255
    33c8:	60 81       	ld	r22, Z
    33ca:	71 81       	ldd	r23, Z+1	; 0x01
    33cc:	82 81       	ldd	r24, Z+2	; 0x02
    33ce:	93 81       	ldd	r25, Z+3	; 0x03
    33d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33d4:	dc 01       	movw	r26, r24
    33d6:	cb 01       	movw	r24, r22
    33d8:	f8 01       	movw	r30, r16
    33da:	91 83       	std	Z+1, r25	; 0x01
    33dc:	80 83       	st	Z, r24
    33de:	de 01       	movw	r26, r28
    33e0:	a9 5b       	subi	r26, 0xB9	; 185
    33e2:	bf 4f       	sbci	r27, 0xFF	; 255
    33e4:	fe 01       	movw	r30, r28
    33e6:	e5 5b       	subi	r30, 0xB5	; 181
    33e8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ea:	80 81       	ld	r24, Z
    33ec:	91 81       	ldd	r25, Z+1	; 0x01
    33ee:	8d 93       	st	X+, r24
    33f0:	9c 93       	st	X, r25
    33f2:	fe 01       	movw	r30, r28
    33f4:	e9 5b       	subi	r30, 0xB9	; 185
    33f6:	ff 4f       	sbci	r31, 0xFF	; 255
    33f8:	80 81       	ld	r24, Z
    33fa:	91 81       	ldd	r25, Z+1	; 0x01
    33fc:	01 97       	sbiw	r24, 0x01	; 1
    33fe:	f1 f7       	brne	.-4      	; 0x33fc <main+0x1a7c>
    3400:	fe 01       	movw	r30, r28
    3402:	e9 5b       	subi	r30, 0xB9	; 185
    3404:	ff 4f       	sbci	r31, 0xFF	; 255
    3406:	91 83       	std	Z+1, r25	; 0x01
    3408:	80 83       	st	Z, r24
		_delay_ms(1000);
		LCD_voidWriteSpecialCharacter(ARR_u8SixthArabicLetter,0,1,0);
    340a:	ce 01       	movw	r24, r28
    340c:	8c 5c       	subi	r24, 0xCC	; 204
    340e:	9e 4f       	sbci	r25, 0xFE	; 254
    3410:	60 e0       	ldi	r22, 0x00	; 0
    3412:	41 e0       	ldi	r20, 0x01	; 1
    3414:	20 e0       	ldi	r18, 0x00	; 0
    3416:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>

		LCD_voidWriteSpecialCharacter(ARR_u8NinthArabicLetter,1,1,12);
    341a:	ce 01       	movw	r24, r28
    341c:	84 5b       	subi	r24, 0xB4	; 180
    341e:	9e 4f       	sbci	r25, 0xFE	; 254
    3420:	61 e0       	ldi	r22, 0x01	; 1
    3422:	41 e0       	ldi	r20, 0x01	; 1
    3424:	2c e0       	ldi	r18, 0x0C	; 12
    3426:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    342a:	fe 01       	movw	r30, r28
    342c:	ed 5b       	subi	r30, 0xBD	; 189
    342e:	ff 4f       	sbci	r31, 0xFF	; 255
    3430:	80 e0       	ldi	r24, 0x00	; 0
    3432:	90 e0       	ldi	r25, 0x00	; 0
    3434:	aa e7       	ldi	r26, 0x7A	; 122
    3436:	b4 e4       	ldi	r27, 0x44	; 68
    3438:	80 83       	st	Z, r24
    343a:	91 83       	std	Z+1, r25	; 0x01
    343c:	a2 83       	std	Z+2, r26	; 0x02
    343e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3440:	8e 01       	movw	r16, r28
    3442:	01 5c       	subi	r16, 0xC1	; 193
    3444:	1f 4f       	sbci	r17, 0xFF	; 255
    3446:	fe 01       	movw	r30, r28
    3448:	ed 5b       	subi	r30, 0xBD	; 189
    344a:	ff 4f       	sbci	r31, 0xFF	; 255
    344c:	60 81       	ld	r22, Z
    344e:	71 81       	ldd	r23, Z+1	; 0x01
    3450:	82 81       	ldd	r24, Z+2	; 0x02
    3452:	93 81       	ldd	r25, Z+3	; 0x03
    3454:	20 e0       	ldi	r18, 0x00	; 0
    3456:	30 e0       	ldi	r19, 0x00	; 0
    3458:	4a ef       	ldi	r20, 0xFA	; 250
    345a:	54 e4       	ldi	r21, 0x44	; 68
    345c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3460:	dc 01       	movw	r26, r24
    3462:	cb 01       	movw	r24, r22
    3464:	f8 01       	movw	r30, r16
    3466:	80 83       	st	Z, r24
    3468:	91 83       	std	Z+1, r25	; 0x01
    346a:	a2 83       	std	Z+2, r26	; 0x02
    346c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    346e:	fe 01       	movw	r30, r28
    3470:	ff 96       	adiw	r30, 0x3f	; 63
    3472:	60 81       	ld	r22, Z
    3474:	71 81       	ldd	r23, Z+1	; 0x01
    3476:	82 81       	ldd	r24, Z+2	; 0x02
    3478:	93 81       	ldd	r25, Z+3	; 0x03
    347a:	20 e0       	ldi	r18, 0x00	; 0
    347c:	30 e0       	ldi	r19, 0x00	; 0
    347e:	40 e8       	ldi	r20, 0x80	; 128
    3480:	5f e3       	ldi	r21, 0x3F	; 63
    3482:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3486:	88 23       	and	r24, r24
    3488:	2c f4       	brge	.+10     	; 0x3494 <main+0x1b14>
		__ticks = 1;
    348a:	81 e0       	ldi	r24, 0x01	; 1
    348c:	90 e0       	ldi	r25, 0x00	; 0
    348e:	9e af       	std	Y+62, r25	; 0x3e
    3490:	8d af       	std	Y+61, r24	; 0x3d
    3492:	46 c0       	rjmp	.+140    	; 0x3520 <main+0x1ba0>
	else if (__tmp > 65535)
    3494:	fe 01       	movw	r30, r28
    3496:	ff 96       	adiw	r30, 0x3f	; 63
    3498:	60 81       	ld	r22, Z
    349a:	71 81       	ldd	r23, Z+1	; 0x01
    349c:	82 81       	ldd	r24, Z+2	; 0x02
    349e:	93 81       	ldd	r25, Z+3	; 0x03
    34a0:	20 e0       	ldi	r18, 0x00	; 0
    34a2:	3f ef       	ldi	r19, 0xFF	; 255
    34a4:	4f e7       	ldi	r20, 0x7F	; 127
    34a6:	57 e4       	ldi	r21, 0x47	; 71
    34a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34ac:	18 16       	cp	r1, r24
    34ae:	64 f5       	brge	.+88     	; 0x3508 <main+0x1b88>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34b0:	fe 01       	movw	r30, r28
    34b2:	ed 5b       	subi	r30, 0xBD	; 189
    34b4:	ff 4f       	sbci	r31, 0xFF	; 255
    34b6:	60 81       	ld	r22, Z
    34b8:	71 81       	ldd	r23, Z+1	; 0x01
    34ba:	82 81       	ldd	r24, Z+2	; 0x02
    34bc:	93 81       	ldd	r25, Z+3	; 0x03
    34be:	20 e0       	ldi	r18, 0x00	; 0
    34c0:	30 e0       	ldi	r19, 0x00	; 0
    34c2:	40 e2       	ldi	r20, 0x20	; 32
    34c4:	51 e4       	ldi	r21, 0x41	; 65
    34c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34ca:	dc 01       	movw	r26, r24
    34cc:	cb 01       	movw	r24, r22
    34ce:	bc 01       	movw	r22, r24
    34d0:	cd 01       	movw	r24, r26
    34d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34d6:	dc 01       	movw	r26, r24
    34d8:	cb 01       	movw	r24, r22
    34da:	9e af       	std	Y+62, r25	; 0x3e
    34dc:	8d af       	std	Y+61, r24	; 0x3d
    34de:	0f c0       	rjmp	.+30     	; 0x34fe <main+0x1b7e>
    34e0:	88 ec       	ldi	r24, 0xC8	; 200
    34e2:	90 e0       	ldi	r25, 0x00	; 0
    34e4:	9c af       	std	Y+60, r25	; 0x3c
    34e6:	8b af       	std	Y+59, r24	; 0x3b
    34e8:	8b ad       	ldd	r24, Y+59	; 0x3b
    34ea:	9c ad       	ldd	r25, Y+60	; 0x3c
    34ec:	01 97       	sbiw	r24, 0x01	; 1
    34ee:	f1 f7       	brne	.-4      	; 0x34ec <main+0x1b6c>
    34f0:	9c af       	std	Y+60, r25	; 0x3c
    34f2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34f4:	8d ad       	ldd	r24, Y+61	; 0x3d
    34f6:	9e ad       	ldd	r25, Y+62	; 0x3e
    34f8:	01 97       	sbiw	r24, 0x01	; 1
    34fa:	9e af       	std	Y+62, r25	; 0x3e
    34fc:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34fe:	8d ad       	ldd	r24, Y+61	; 0x3d
    3500:	9e ad       	ldd	r25, Y+62	; 0x3e
    3502:	00 97       	sbiw	r24, 0x00	; 0
    3504:	69 f7       	brne	.-38     	; 0x34e0 <main+0x1b60>
    3506:	16 c0       	rjmp	.+44     	; 0x3534 <main+0x1bb4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3508:	fe 01       	movw	r30, r28
    350a:	ff 96       	adiw	r30, 0x3f	; 63
    350c:	60 81       	ld	r22, Z
    350e:	71 81       	ldd	r23, Z+1	; 0x01
    3510:	82 81       	ldd	r24, Z+2	; 0x02
    3512:	93 81       	ldd	r25, Z+3	; 0x03
    3514:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3518:	dc 01       	movw	r26, r24
    351a:	cb 01       	movw	r24, r22
    351c:	9e af       	std	Y+62, r25	; 0x3e
    351e:	8d af       	std	Y+61, r24	; 0x3d
    3520:	8d ad       	ldd	r24, Y+61	; 0x3d
    3522:	9e ad       	ldd	r25, Y+62	; 0x3e
    3524:	9a af       	std	Y+58, r25	; 0x3a
    3526:	89 af       	std	Y+57, r24	; 0x39
    3528:	89 ad       	ldd	r24, Y+57	; 0x39
    352a:	9a ad       	ldd	r25, Y+58	; 0x3a
    352c:	01 97       	sbiw	r24, 0x01	; 1
    352e:	f1 f7       	brne	.-4      	; 0x352c <main+0x1bac>
    3530:	9a af       	std	Y+58, r25	; 0x3a
    3532:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1000);
		for (i=2 ;i<12 ;i++ )
    3534:	fe 01       	movw	r30, r28
    3536:	e5 5f       	subi	r30, 0xF5	; 245
    3538:	fe 4f       	sbci	r31, 0xFE	; 254
    353a:	82 e0       	ldi	r24, 0x02	; 2
    353c:	80 83       	st	Z, r24
    353e:	0a c1       	rjmp	.+532    	; 0x3754 <main+0x1dd4>
		{LCD_voidWriteSpecialCharacter(ARR_u8SixthArabicLetter,0,1,0);
    3540:	ce 01       	movw	r24, r28
    3542:	8c 5c       	subi	r24, 0xCC	; 204
    3544:	9e 4f       	sbci	r25, 0xFE	; 254
    3546:	60 e0       	ldi	r22, 0x00	; 0
    3548:	41 e0       	ldi	r20, 0x01	; 1
    354a:	20 e0       	ldi	r18, 0x00	; 0
    354c:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>

		LCD_voidWriteSpecialCharacter(ARR_u8NinthArabicLetter,1,1,12);
    3550:	ce 01       	movw	r24, r28
    3552:	84 5b       	subi	r24, 0xB4	; 180
    3554:	9e 4f       	sbci	r25, 0xFE	; 254
    3556:	61 e0       	ldi	r22, 0x01	; 1
    3558:	41 e0       	ldi	r20, 0x01	; 1
    355a:	2c e0       	ldi	r18, 0x0C	; 12
    355c:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    3560:	80 e0       	ldi	r24, 0x00	; 0
    3562:	90 e0       	ldi	r25, 0x00	; 0
    3564:	a8 e4       	ldi	r26, 0x48	; 72
    3566:	b3 e4       	ldi	r27, 0x43	; 67
    3568:	8d ab       	std	Y+53, r24	; 0x35
    356a:	9e ab       	std	Y+54, r25	; 0x36
    356c:	af ab       	std	Y+55, r26	; 0x37
    356e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3570:	6d a9       	ldd	r22, Y+53	; 0x35
    3572:	7e a9       	ldd	r23, Y+54	; 0x36
    3574:	8f a9       	ldd	r24, Y+55	; 0x37
    3576:	98 ad       	ldd	r25, Y+56	; 0x38
    3578:	20 e0       	ldi	r18, 0x00	; 0
    357a:	30 e0       	ldi	r19, 0x00	; 0
    357c:	4a ef       	ldi	r20, 0xFA	; 250
    357e:	54 e4       	ldi	r21, 0x44	; 68
    3580:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3584:	dc 01       	movw	r26, r24
    3586:	cb 01       	movw	r24, r22
    3588:	89 ab       	std	Y+49, r24	; 0x31
    358a:	9a ab       	std	Y+50, r25	; 0x32
    358c:	ab ab       	std	Y+51, r26	; 0x33
    358e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3590:	69 a9       	ldd	r22, Y+49	; 0x31
    3592:	7a a9       	ldd	r23, Y+50	; 0x32
    3594:	8b a9       	ldd	r24, Y+51	; 0x33
    3596:	9c a9       	ldd	r25, Y+52	; 0x34
    3598:	20 e0       	ldi	r18, 0x00	; 0
    359a:	30 e0       	ldi	r19, 0x00	; 0
    359c:	40 e8       	ldi	r20, 0x80	; 128
    359e:	5f e3       	ldi	r21, 0x3F	; 63
    35a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35a4:	88 23       	and	r24, r24
    35a6:	2c f4       	brge	.+10     	; 0x35b2 <main+0x1c32>
		__ticks = 1;
    35a8:	81 e0       	ldi	r24, 0x01	; 1
    35aa:	90 e0       	ldi	r25, 0x00	; 0
    35ac:	98 ab       	std	Y+48, r25	; 0x30
    35ae:	8f a7       	std	Y+47, r24	; 0x2f
    35b0:	3f c0       	rjmp	.+126    	; 0x3630 <main+0x1cb0>
	else if (__tmp > 65535)
    35b2:	69 a9       	ldd	r22, Y+49	; 0x31
    35b4:	7a a9       	ldd	r23, Y+50	; 0x32
    35b6:	8b a9       	ldd	r24, Y+51	; 0x33
    35b8:	9c a9       	ldd	r25, Y+52	; 0x34
    35ba:	20 e0       	ldi	r18, 0x00	; 0
    35bc:	3f ef       	ldi	r19, 0xFF	; 255
    35be:	4f e7       	ldi	r20, 0x7F	; 127
    35c0:	57 e4       	ldi	r21, 0x47	; 71
    35c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35c6:	18 16       	cp	r1, r24
    35c8:	4c f5       	brge	.+82     	; 0x361c <main+0x1c9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35ca:	6d a9       	ldd	r22, Y+53	; 0x35
    35cc:	7e a9       	ldd	r23, Y+54	; 0x36
    35ce:	8f a9       	ldd	r24, Y+55	; 0x37
    35d0:	98 ad       	ldd	r25, Y+56	; 0x38
    35d2:	20 e0       	ldi	r18, 0x00	; 0
    35d4:	30 e0       	ldi	r19, 0x00	; 0
    35d6:	40 e2       	ldi	r20, 0x20	; 32
    35d8:	51 e4       	ldi	r21, 0x41	; 65
    35da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35de:	dc 01       	movw	r26, r24
    35e0:	cb 01       	movw	r24, r22
    35e2:	bc 01       	movw	r22, r24
    35e4:	cd 01       	movw	r24, r26
    35e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35ea:	dc 01       	movw	r26, r24
    35ec:	cb 01       	movw	r24, r22
    35ee:	98 ab       	std	Y+48, r25	; 0x30
    35f0:	8f a7       	std	Y+47, r24	; 0x2f
    35f2:	0f c0       	rjmp	.+30     	; 0x3612 <main+0x1c92>
    35f4:	88 ec       	ldi	r24, 0xC8	; 200
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	9e a7       	std	Y+46, r25	; 0x2e
    35fa:	8d a7       	std	Y+45, r24	; 0x2d
    35fc:	8d a5       	ldd	r24, Y+45	; 0x2d
    35fe:	9e a5       	ldd	r25, Y+46	; 0x2e
    3600:	01 97       	sbiw	r24, 0x01	; 1
    3602:	f1 f7       	brne	.-4      	; 0x3600 <main+0x1c80>
    3604:	9e a7       	std	Y+46, r25	; 0x2e
    3606:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3608:	8f a5       	ldd	r24, Y+47	; 0x2f
    360a:	98 a9       	ldd	r25, Y+48	; 0x30
    360c:	01 97       	sbiw	r24, 0x01	; 1
    360e:	98 ab       	std	Y+48, r25	; 0x30
    3610:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3612:	8f a5       	ldd	r24, Y+47	; 0x2f
    3614:	98 a9       	ldd	r25, Y+48	; 0x30
    3616:	00 97       	sbiw	r24, 0x00	; 0
    3618:	69 f7       	brne	.-38     	; 0x35f4 <main+0x1c74>
    361a:	14 c0       	rjmp	.+40     	; 0x3644 <main+0x1cc4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    361c:	69 a9       	ldd	r22, Y+49	; 0x31
    361e:	7a a9       	ldd	r23, Y+50	; 0x32
    3620:	8b a9       	ldd	r24, Y+51	; 0x33
    3622:	9c a9       	ldd	r25, Y+52	; 0x34
    3624:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3628:	dc 01       	movw	r26, r24
    362a:	cb 01       	movw	r24, r22
    362c:	98 ab       	std	Y+48, r25	; 0x30
    362e:	8f a7       	std	Y+47, r24	; 0x2f
    3630:	8f a5       	ldd	r24, Y+47	; 0x2f
    3632:	98 a9       	ldd	r25, Y+48	; 0x30
    3634:	9c a7       	std	Y+44, r25	; 0x2c
    3636:	8b a7       	std	Y+43, r24	; 0x2b
    3638:	8b a5       	ldd	r24, Y+43	; 0x2b
    363a:	9c a5       	ldd	r25, Y+44	; 0x2c
    363c:	01 97       	sbiw	r24, 0x01	; 1
    363e:	f1 f7       	brne	.-4      	; 0x363c <main+0x1cbc>
    3640:	9c a7       	std	Y+44, r25	; 0x2c
    3642:	8b a7       	std	Y+43, r24	; 0x2b

		_delay_ms(200);
		LCD_voidWriteSpecialCharacter(ARR_u8EighthArabicLetter,2,1,i);
    3644:	ce 01       	movw	r24, r28
    3646:	8c 5b       	subi	r24, 0xBC	; 188
    3648:	9e 4f       	sbci	r25, 0xFE	; 254
    364a:	fe 01       	movw	r30, r28
    364c:	e5 5f       	subi	r30, 0xF5	; 245
    364e:	fe 4f       	sbci	r31, 0xFE	; 254
    3650:	62 e0       	ldi	r22, 0x02	; 2
    3652:	41 e0       	ldi	r20, 0x01	; 1
    3654:	20 81       	ld	r18, Z
    3656:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    365a:	80 e0       	ldi	r24, 0x00	; 0
    365c:	90 e0       	ldi	r25, 0x00	; 0
    365e:	a8 e4       	ldi	r26, 0x48	; 72
    3660:	b3 e4       	ldi	r27, 0x43	; 67
    3662:	8f a3       	std	Y+39, r24	; 0x27
    3664:	98 a7       	std	Y+40, r25	; 0x28
    3666:	a9 a7       	std	Y+41, r26	; 0x29
    3668:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    366a:	6f a1       	ldd	r22, Y+39	; 0x27
    366c:	78 a5       	ldd	r23, Y+40	; 0x28
    366e:	89 a5       	ldd	r24, Y+41	; 0x29
    3670:	9a a5       	ldd	r25, Y+42	; 0x2a
    3672:	20 e0       	ldi	r18, 0x00	; 0
    3674:	30 e0       	ldi	r19, 0x00	; 0
    3676:	4a ef       	ldi	r20, 0xFA	; 250
    3678:	54 e4       	ldi	r21, 0x44	; 68
    367a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    367e:	dc 01       	movw	r26, r24
    3680:	cb 01       	movw	r24, r22
    3682:	8b a3       	std	Y+35, r24	; 0x23
    3684:	9c a3       	std	Y+36, r25	; 0x24
    3686:	ad a3       	std	Y+37, r26	; 0x25
    3688:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    368a:	6b a1       	ldd	r22, Y+35	; 0x23
    368c:	7c a1       	ldd	r23, Y+36	; 0x24
    368e:	8d a1       	ldd	r24, Y+37	; 0x25
    3690:	9e a1       	ldd	r25, Y+38	; 0x26
    3692:	20 e0       	ldi	r18, 0x00	; 0
    3694:	30 e0       	ldi	r19, 0x00	; 0
    3696:	40 e8       	ldi	r20, 0x80	; 128
    3698:	5f e3       	ldi	r21, 0x3F	; 63
    369a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    369e:	88 23       	and	r24, r24
    36a0:	2c f4       	brge	.+10     	; 0x36ac <main+0x1d2c>
		__ticks = 1;
    36a2:	81 e0       	ldi	r24, 0x01	; 1
    36a4:	90 e0       	ldi	r25, 0x00	; 0
    36a6:	9a a3       	std	Y+34, r25	; 0x22
    36a8:	89 a3       	std	Y+33, r24	; 0x21
    36aa:	3f c0       	rjmp	.+126    	; 0x372a <main+0x1daa>
	else if (__tmp > 65535)
    36ac:	6b a1       	ldd	r22, Y+35	; 0x23
    36ae:	7c a1       	ldd	r23, Y+36	; 0x24
    36b0:	8d a1       	ldd	r24, Y+37	; 0x25
    36b2:	9e a1       	ldd	r25, Y+38	; 0x26
    36b4:	20 e0       	ldi	r18, 0x00	; 0
    36b6:	3f ef       	ldi	r19, 0xFF	; 255
    36b8:	4f e7       	ldi	r20, 0x7F	; 127
    36ba:	57 e4       	ldi	r21, 0x47	; 71
    36bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    36c0:	18 16       	cp	r1, r24
    36c2:	4c f5       	brge	.+82     	; 0x3716 <main+0x1d96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36c4:	6f a1       	ldd	r22, Y+39	; 0x27
    36c6:	78 a5       	ldd	r23, Y+40	; 0x28
    36c8:	89 a5       	ldd	r24, Y+41	; 0x29
    36ca:	9a a5       	ldd	r25, Y+42	; 0x2a
    36cc:	20 e0       	ldi	r18, 0x00	; 0
    36ce:	30 e0       	ldi	r19, 0x00	; 0
    36d0:	40 e2       	ldi	r20, 0x20	; 32
    36d2:	51 e4       	ldi	r21, 0x41	; 65
    36d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36d8:	dc 01       	movw	r26, r24
    36da:	cb 01       	movw	r24, r22
    36dc:	bc 01       	movw	r22, r24
    36de:	cd 01       	movw	r24, r26
    36e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36e4:	dc 01       	movw	r26, r24
    36e6:	cb 01       	movw	r24, r22
    36e8:	9a a3       	std	Y+34, r25	; 0x22
    36ea:	89 a3       	std	Y+33, r24	; 0x21
    36ec:	0f c0       	rjmp	.+30     	; 0x370c <main+0x1d8c>
    36ee:	88 ec       	ldi	r24, 0xC8	; 200
    36f0:	90 e0       	ldi	r25, 0x00	; 0
    36f2:	98 a3       	std	Y+32, r25	; 0x20
    36f4:	8f 8f       	std	Y+31, r24	; 0x1f
    36f6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    36f8:	98 a1       	ldd	r25, Y+32	; 0x20
    36fa:	01 97       	sbiw	r24, 0x01	; 1
    36fc:	f1 f7       	brne	.-4      	; 0x36fa <main+0x1d7a>
    36fe:	98 a3       	std	Y+32, r25	; 0x20
    3700:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3702:	89 a1       	ldd	r24, Y+33	; 0x21
    3704:	9a a1       	ldd	r25, Y+34	; 0x22
    3706:	01 97       	sbiw	r24, 0x01	; 1
    3708:	9a a3       	std	Y+34, r25	; 0x22
    370a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    370c:	89 a1       	ldd	r24, Y+33	; 0x21
    370e:	9a a1       	ldd	r25, Y+34	; 0x22
    3710:	00 97       	sbiw	r24, 0x00	; 0
    3712:	69 f7       	brne	.-38     	; 0x36ee <main+0x1d6e>
    3714:	14 c0       	rjmp	.+40     	; 0x373e <main+0x1dbe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3716:	6b a1       	ldd	r22, Y+35	; 0x23
    3718:	7c a1       	ldd	r23, Y+36	; 0x24
    371a:	8d a1       	ldd	r24, Y+37	; 0x25
    371c:	9e a1       	ldd	r25, Y+38	; 0x26
    371e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3722:	dc 01       	movw	r26, r24
    3724:	cb 01       	movw	r24, r22
    3726:	9a a3       	std	Y+34, r25	; 0x22
    3728:	89 a3       	std	Y+33, r24	; 0x21
    372a:	89 a1       	ldd	r24, Y+33	; 0x21
    372c:	9a a1       	ldd	r25, Y+34	; 0x22
    372e:	9e 8f       	std	Y+30, r25	; 0x1e
    3730:	8d 8f       	std	Y+29, r24	; 0x1d
    3732:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3734:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3736:	01 97       	sbiw	r24, 0x01	; 1
    3738:	f1 f7       	brne	.-4      	; 0x3736 <main+0x1db6>
    373a:	9e 8f       	std	Y+30, r25	; 0x1e
    373c:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(200);
		LCD_voidClearLCD();
    373e:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
		_delay_ms(1000);
		LCD_voidWriteSpecialCharacter(ARR_u8SixthArabicLetter,0,1,0);

		LCD_voidWriteSpecialCharacter(ARR_u8NinthArabicLetter,1,1,12);
		_delay_ms(1000);
		for (i=2 ;i<12 ;i++ )
    3742:	de 01       	movw	r26, r28
    3744:	a5 5f       	subi	r26, 0xF5	; 245
    3746:	be 4f       	sbci	r27, 0xFE	; 254
    3748:	fe 01       	movw	r30, r28
    374a:	e5 5f       	subi	r30, 0xF5	; 245
    374c:	fe 4f       	sbci	r31, 0xFE	; 254
    374e:	80 81       	ld	r24, Z
    3750:	8f 5f       	subi	r24, 0xFF	; 255
    3752:	8c 93       	st	X, r24
    3754:	fe 01       	movw	r30, r28
    3756:	e5 5f       	subi	r30, 0xF5	; 245
    3758:	fe 4f       	sbci	r31, 0xFE	; 254
    375a:	80 81       	ld	r24, Z
    375c:	8c 30       	cpi	r24, 0x0C	; 12
    375e:	08 f4       	brcc	.+2      	; 0x3762 <main+0x1de2>
    3760:	ef ce       	rjmp	.-546    	; 0x3540 <main+0x1bc0>
    3762:	80 e0       	ldi	r24, 0x00	; 0
    3764:	90 e0       	ldi	r25, 0x00	; 0
    3766:	aa e7       	ldi	r26, 0x7A	; 122
    3768:	b4 e4       	ldi	r27, 0x44	; 68
    376a:	89 8f       	std	Y+25, r24	; 0x19
    376c:	9a 8f       	std	Y+26, r25	; 0x1a
    376e:	ab 8f       	std	Y+27, r26	; 0x1b
    3770:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3772:	69 8d       	ldd	r22, Y+25	; 0x19
    3774:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3776:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3778:	9c 8d       	ldd	r25, Y+28	; 0x1c
    377a:	20 e0       	ldi	r18, 0x00	; 0
    377c:	30 e0       	ldi	r19, 0x00	; 0
    377e:	4a ef       	ldi	r20, 0xFA	; 250
    3780:	54 e4       	ldi	r21, 0x44	; 68
    3782:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3786:	dc 01       	movw	r26, r24
    3788:	cb 01       	movw	r24, r22
    378a:	8d 8b       	std	Y+21, r24	; 0x15
    378c:	9e 8b       	std	Y+22, r25	; 0x16
    378e:	af 8b       	std	Y+23, r26	; 0x17
    3790:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3792:	6d 89       	ldd	r22, Y+21	; 0x15
    3794:	7e 89       	ldd	r23, Y+22	; 0x16
    3796:	8f 89       	ldd	r24, Y+23	; 0x17
    3798:	98 8d       	ldd	r25, Y+24	; 0x18
    379a:	20 e0       	ldi	r18, 0x00	; 0
    379c:	30 e0       	ldi	r19, 0x00	; 0
    379e:	40 e8       	ldi	r20, 0x80	; 128
    37a0:	5f e3       	ldi	r21, 0x3F	; 63
    37a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    37a6:	88 23       	and	r24, r24
    37a8:	2c f4       	brge	.+10     	; 0x37b4 <main+0x1e34>
		__ticks = 1;
    37aa:	81 e0       	ldi	r24, 0x01	; 1
    37ac:	90 e0       	ldi	r25, 0x00	; 0
    37ae:	9c 8b       	std	Y+20, r25	; 0x14
    37b0:	8b 8b       	std	Y+19, r24	; 0x13
    37b2:	3f c0       	rjmp	.+126    	; 0x3832 <main+0x1eb2>
	else if (__tmp > 65535)
    37b4:	6d 89       	ldd	r22, Y+21	; 0x15
    37b6:	7e 89       	ldd	r23, Y+22	; 0x16
    37b8:	8f 89       	ldd	r24, Y+23	; 0x17
    37ba:	98 8d       	ldd	r25, Y+24	; 0x18
    37bc:	20 e0       	ldi	r18, 0x00	; 0
    37be:	3f ef       	ldi	r19, 0xFF	; 255
    37c0:	4f e7       	ldi	r20, 0x7F	; 127
    37c2:	57 e4       	ldi	r21, 0x47	; 71
    37c4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37c8:	18 16       	cp	r1, r24
    37ca:	4c f5       	brge	.+82     	; 0x381e <main+0x1e9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37cc:	69 8d       	ldd	r22, Y+25	; 0x19
    37ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    37d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    37d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    37d4:	20 e0       	ldi	r18, 0x00	; 0
    37d6:	30 e0       	ldi	r19, 0x00	; 0
    37d8:	40 e2       	ldi	r20, 0x20	; 32
    37da:	51 e4       	ldi	r21, 0x41	; 65
    37dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37e0:	dc 01       	movw	r26, r24
    37e2:	cb 01       	movw	r24, r22
    37e4:	bc 01       	movw	r22, r24
    37e6:	cd 01       	movw	r24, r26
    37e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37ec:	dc 01       	movw	r26, r24
    37ee:	cb 01       	movw	r24, r22
    37f0:	9c 8b       	std	Y+20, r25	; 0x14
    37f2:	8b 8b       	std	Y+19, r24	; 0x13
    37f4:	0f c0       	rjmp	.+30     	; 0x3814 <main+0x1e94>
    37f6:	88 ec       	ldi	r24, 0xC8	; 200
    37f8:	90 e0       	ldi	r25, 0x00	; 0
    37fa:	9a 8b       	std	Y+18, r25	; 0x12
    37fc:	89 8b       	std	Y+17, r24	; 0x11
    37fe:	89 89       	ldd	r24, Y+17	; 0x11
    3800:	9a 89       	ldd	r25, Y+18	; 0x12
    3802:	01 97       	sbiw	r24, 0x01	; 1
    3804:	f1 f7       	brne	.-4      	; 0x3802 <main+0x1e82>
    3806:	9a 8b       	std	Y+18, r25	; 0x12
    3808:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    380a:	8b 89       	ldd	r24, Y+19	; 0x13
    380c:	9c 89       	ldd	r25, Y+20	; 0x14
    380e:	01 97       	sbiw	r24, 0x01	; 1
    3810:	9c 8b       	std	Y+20, r25	; 0x14
    3812:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3814:	8b 89       	ldd	r24, Y+19	; 0x13
    3816:	9c 89       	ldd	r25, Y+20	; 0x14
    3818:	00 97       	sbiw	r24, 0x00	; 0
    381a:	69 f7       	brne	.-38     	; 0x37f6 <main+0x1e76>
    381c:	14 c0       	rjmp	.+40     	; 0x3846 <main+0x1ec6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    381e:	6d 89       	ldd	r22, Y+21	; 0x15
    3820:	7e 89       	ldd	r23, Y+22	; 0x16
    3822:	8f 89       	ldd	r24, Y+23	; 0x17
    3824:	98 8d       	ldd	r25, Y+24	; 0x18
    3826:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    382a:	dc 01       	movw	r26, r24
    382c:	cb 01       	movw	r24, r22
    382e:	9c 8b       	std	Y+20, r25	; 0x14
    3830:	8b 8b       	std	Y+19, r24	; 0x13
    3832:	8b 89       	ldd	r24, Y+19	; 0x13
    3834:	9c 89       	ldd	r25, Y+20	; 0x14
    3836:	98 8b       	std	Y+16, r25	; 0x10
    3838:	8f 87       	std	Y+15, r24	; 0x0f
    383a:	8f 85       	ldd	r24, Y+15	; 0x0f
    383c:	98 89       	ldd	r25, Y+16	; 0x10
    383e:	01 97       	sbiw	r24, 0x01	; 1
    3840:	f1 f7       	brne	.-4      	; 0x383e <main+0x1ebe>
    3842:	98 8b       	std	Y+16, r25	; 0x10
    3844:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(200);
		LCD_voidClearLCD();

		}
		_delay_ms(1000);
		LCD_voidWriteSpecialCharacter(ARR_u8SeventhArabicLetter,3,1,12);
    3846:	ce 01       	movw	r24, r28
    3848:	84 5c       	subi	r24, 0xC4	; 196
    384a:	9e 4f       	sbci	r25, 0xFE	; 254
    384c:	63 e0       	ldi	r22, 0x03	; 3
    384e:	41 e0       	ldi	r20, 0x01	; 1
    3850:	2c e0       	ldi	r18, 0x0C	; 12
    3852:	0e 94 75 0c 	call	0x18ea	; 0x18ea <LCD_voidWriteSpecialCharacter>
    3856:	80 e0       	ldi	r24, 0x00	; 0
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	aa e7       	ldi	r26, 0x7A	; 122
    385c:	b4 e4       	ldi	r27, 0x44	; 68
    385e:	8b 87       	std	Y+11, r24	; 0x0b
    3860:	9c 87       	std	Y+12, r25	; 0x0c
    3862:	ad 87       	std	Y+13, r26	; 0x0d
    3864:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3866:	6b 85       	ldd	r22, Y+11	; 0x0b
    3868:	7c 85       	ldd	r23, Y+12	; 0x0c
    386a:	8d 85       	ldd	r24, Y+13	; 0x0d
    386c:	9e 85       	ldd	r25, Y+14	; 0x0e
    386e:	20 e0       	ldi	r18, 0x00	; 0
    3870:	30 e0       	ldi	r19, 0x00	; 0
    3872:	4a ef       	ldi	r20, 0xFA	; 250
    3874:	54 e4       	ldi	r21, 0x44	; 68
    3876:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    387a:	dc 01       	movw	r26, r24
    387c:	cb 01       	movw	r24, r22
    387e:	8f 83       	std	Y+7, r24	; 0x07
    3880:	98 87       	std	Y+8, r25	; 0x08
    3882:	a9 87       	std	Y+9, r26	; 0x09
    3884:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3886:	6f 81       	ldd	r22, Y+7	; 0x07
    3888:	78 85       	ldd	r23, Y+8	; 0x08
    388a:	89 85       	ldd	r24, Y+9	; 0x09
    388c:	9a 85       	ldd	r25, Y+10	; 0x0a
    388e:	20 e0       	ldi	r18, 0x00	; 0
    3890:	30 e0       	ldi	r19, 0x00	; 0
    3892:	40 e8       	ldi	r20, 0x80	; 128
    3894:	5f e3       	ldi	r21, 0x3F	; 63
    3896:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    389a:	88 23       	and	r24, r24
    389c:	2c f4       	brge	.+10     	; 0x38a8 <main+0x1f28>
		__ticks = 1;
    389e:	81 e0       	ldi	r24, 0x01	; 1
    38a0:	90 e0       	ldi	r25, 0x00	; 0
    38a2:	9e 83       	std	Y+6, r25	; 0x06
    38a4:	8d 83       	std	Y+5, r24	; 0x05
    38a6:	3f c0       	rjmp	.+126    	; 0x3926 <main+0x1fa6>
	else if (__tmp > 65535)
    38a8:	6f 81       	ldd	r22, Y+7	; 0x07
    38aa:	78 85       	ldd	r23, Y+8	; 0x08
    38ac:	89 85       	ldd	r24, Y+9	; 0x09
    38ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    38b0:	20 e0       	ldi	r18, 0x00	; 0
    38b2:	3f ef       	ldi	r19, 0xFF	; 255
    38b4:	4f e7       	ldi	r20, 0x7F	; 127
    38b6:	57 e4       	ldi	r21, 0x47	; 71
    38b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    38bc:	18 16       	cp	r1, r24
    38be:	4c f5       	brge	.+82     	; 0x3912 <main+0x1f92>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    38c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    38c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    38c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    38c8:	20 e0       	ldi	r18, 0x00	; 0
    38ca:	30 e0       	ldi	r19, 0x00	; 0
    38cc:	40 e2       	ldi	r20, 0x20	; 32
    38ce:	51 e4       	ldi	r21, 0x41	; 65
    38d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38d4:	dc 01       	movw	r26, r24
    38d6:	cb 01       	movw	r24, r22
    38d8:	bc 01       	movw	r22, r24
    38da:	cd 01       	movw	r24, r26
    38dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38e0:	dc 01       	movw	r26, r24
    38e2:	cb 01       	movw	r24, r22
    38e4:	9e 83       	std	Y+6, r25	; 0x06
    38e6:	8d 83       	std	Y+5, r24	; 0x05
    38e8:	0f c0       	rjmp	.+30     	; 0x3908 <main+0x1f88>
    38ea:	88 ec       	ldi	r24, 0xC8	; 200
    38ec:	90 e0       	ldi	r25, 0x00	; 0
    38ee:	9c 83       	std	Y+4, r25	; 0x04
    38f0:	8b 83       	std	Y+3, r24	; 0x03
    38f2:	8b 81       	ldd	r24, Y+3	; 0x03
    38f4:	9c 81       	ldd	r25, Y+4	; 0x04
    38f6:	01 97       	sbiw	r24, 0x01	; 1
    38f8:	f1 f7       	brne	.-4      	; 0x38f6 <main+0x1f76>
    38fa:	9c 83       	std	Y+4, r25	; 0x04
    38fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3900:	9e 81       	ldd	r25, Y+6	; 0x06
    3902:	01 97       	sbiw	r24, 0x01	; 1
    3904:	9e 83       	std	Y+6, r25	; 0x06
    3906:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3908:	8d 81       	ldd	r24, Y+5	; 0x05
    390a:	9e 81       	ldd	r25, Y+6	; 0x06
    390c:	00 97       	sbiw	r24, 0x00	; 0
    390e:	69 f7       	brne	.-38     	; 0x38ea <main+0x1f6a>
    3910:	14 c0       	rjmp	.+40     	; 0x393a <main+0x1fba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3912:	6f 81       	ldd	r22, Y+7	; 0x07
    3914:	78 85       	ldd	r23, Y+8	; 0x08
    3916:	89 85       	ldd	r24, Y+9	; 0x09
    3918:	9a 85       	ldd	r25, Y+10	; 0x0a
    391a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    391e:	dc 01       	movw	r26, r24
    3920:	cb 01       	movw	r24, r22
    3922:	9e 83       	std	Y+6, r25	; 0x06
    3924:	8d 83       	std	Y+5, r24	; 0x05
    3926:	8d 81       	ldd	r24, Y+5	; 0x05
    3928:	9e 81       	ldd	r25, Y+6	; 0x06
    392a:	9a 83       	std	Y+2, r25	; 0x02
    392c:	89 83       	std	Y+1, r24	; 0x01
    392e:	89 81       	ldd	r24, Y+1	; 0x01
    3930:	9a 81       	ldd	r25, Y+2	; 0x02
    3932:	01 97       	sbiw	r24, 0x01	; 1
    3934:	f1 f7       	brne	.-4      	; 0x3932 <main+0x1fb2>
    3936:	9a 83       	std	Y+2, r25	; 0x02
    3938:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1000);
		LCD_voidClearLCD();
    393a:	0e 94 b6 0c 	call	0x196c	; 0x196c <LCD_voidClearLCD>
    393e:	0c 94 79 0f 	jmp	0x1ef2	; 0x1ef2 <main+0x572>

00003942 <__prologue_saves__>:
    3942:	2f 92       	push	r2
    3944:	3f 92       	push	r3
    3946:	4f 92       	push	r4
    3948:	5f 92       	push	r5
    394a:	6f 92       	push	r6
    394c:	7f 92       	push	r7
    394e:	8f 92       	push	r8
    3950:	9f 92       	push	r9
    3952:	af 92       	push	r10
    3954:	bf 92       	push	r11
    3956:	cf 92       	push	r12
    3958:	df 92       	push	r13
    395a:	ef 92       	push	r14
    395c:	ff 92       	push	r15
    395e:	0f 93       	push	r16
    3960:	1f 93       	push	r17
    3962:	cf 93       	push	r28
    3964:	df 93       	push	r29
    3966:	cd b7       	in	r28, 0x3d	; 61
    3968:	de b7       	in	r29, 0x3e	; 62
    396a:	ca 1b       	sub	r28, r26
    396c:	db 0b       	sbc	r29, r27
    396e:	0f b6       	in	r0, 0x3f	; 63
    3970:	f8 94       	cli
    3972:	de bf       	out	0x3e, r29	; 62
    3974:	0f be       	out	0x3f, r0	; 63
    3976:	cd bf       	out	0x3d, r28	; 61
    3978:	09 94       	ijmp

0000397a <__epilogue_restores__>:
    397a:	2a 88       	ldd	r2, Y+18	; 0x12
    397c:	39 88       	ldd	r3, Y+17	; 0x11
    397e:	48 88       	ldd	r4, Y+16	; 0x10
    3980:	5f 84       	ldd	r5, Y+15	; 0x0f
    3982:	6e 84       	ldd	r6, Y+14	; 0x0e
    3984:	7d 84       	ldd	r7, Y+13	; 0x0d
    3986:	8c 84       	ldd	r8, Y+12	; 0x0c
    3988:	9b 84       	ldd	r9, Y+11	; 0x0b
    398a:	aa 84       	ldd	r10, Y+10	; 0x0a
    398c:	b9 84       	ldd	r11, Y+9	; 0x09
    398e:	c8 84       	ldd	r12, Y+8	; 0x08
    3990:	df 80       	ldd	r13, Y+7	; 0x07
    3992:	ee 80       	ldd	r14, Y+6	; 0x06
    3994:	fd 80       	ldd	r15, Y+5	; 0x05
    3996:	0c 81       	ldd	r16, Y+4	; 0x04
    3998:	1b 81       	ldd	r17, Y+3	; 0x03
    399a:	aa 81       	ldd	r26, Y+2	; 0x02
    399c:	b9 81       	ldd	r27, Y+1	; 0x01
    399e:	ce 0f       	add	r28, r30
    39a0:	d1 1d       	adc	r29, r1
    39a2:	0f b6       	in	r0, 0x3f	; 63
    39a4:	f8 94       	cli
    39a6:	de bf       	out	0x3e, r29	; 62
    39a8:	0f be       	out	0x3f, r0	; 63
    39aa:	cd bf       	out	0x3d, r28	; 61
    39ac:	ed 01       	movw	r28, r26
    39ae:	08 95       	ret

000039b0 <_exit>:
    39b0:	f8 94       	cli

000039b2 <__stop_program>:
    39b2:	ff cf       	rjmp	.-2      	; 0x39b2 <__stop_program>
